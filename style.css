   /* --- 全局和基础样式 --- */
   * {
       -webkit-tap-highlight-color: transparent;
       /* 【新增】全局移除移动端点击高亮效果 */
   }

   html,
   body {
       height: 100%;
       margin: 0;
       padding: 0;
       overflow: hidden;
       /* 【核心修复】重新加回 overflow: hidden */
       font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
       background-color: #fafafa;
   }

   #phone-screen {
       width: 100%;
       height: 100%;
       position: relative;
       overflow: hidden;
       background-color: #fafafa;
   }

   /* 【新增】状态栏样式 */
   #status-bar {
       position: absolute;
       top: -15px;
       left: 0;
       width: 100%;
       height: 76px;
       /* 状态栏高度 */
       box-sizing: border-box;
       padding: 0 15px 0 35px;
       /* 【修改】增加了左侧内边距，让时间右移 */
       display: flex;
       justify-content: space-between;
       align-items: center;
       font-size: 15.6px !important;
       font-weight: 550 !important;
       color: #333;
       z-index: 100;
       pointer-events: none;
       /* 让状态栏不影响下层元素的点击 */
   }

   #status-bar-icons {
       display: flex;
       align-items: center;
       gap: 14.7px;
       /* 恢复到你最初感觉舒适的间距 */
   }

   /* 【全新】独立移动信号图标 */
   #status-bar-signal-icon {
       position: relative;
       /* 开启相对定位 */
       right: 0;
       /* 把它向右推8px，视觉上就是向左移动了 */
   }

   #status-bar-icons {
       display: flex;
       align-items: center;
       gap: 14.7px;
       /* 恢复到你最初感觉舒适的间距 */
   }

   /* 【全新】独立移动天气图标 */
   #status-bar-weather-icon {
       position: relative;
       /* 开启相对定位 */
       right: 0px;
       /* 把它向右推8px，视觉上就是向左移动了 */
   }

   #status-bar-battery-icon {
       position: relative;
       /* 开启相对定位 */
       top: 0;
       right: 4px;
       /* 把它向右推8px，视觉上就是向左移动了 */
   }

   #chat-interface-screen {
       display: flex;
       /* 核心1：让它成为flex布局的容器 */
       flex-direction: column;
       /* 核心2：让它的子元素（顶栏、消息区、底栏）垂直排列 */
       height: 100%;
       /* 确保它撑满整个屏幕 */
       position: relative;
       /* 保留position，为了背景伪元素 */
       z-index: 1;
   }

   #chat-interface-screen::before {
       /* 【全新】这才是我们真正的、唯一的背景层 */
       content: '';
       position: fixed;
       /* 使用fixed来模拟background-attachment，规避移动端bug */
       left: 0;
       top: 0;
       width: 100%;
       height: 100%;
       background-size: cover;
       background-position: center center;
       background-repeat: no-repeat;
       z-index: -1;
       /* 把它放在父容器所有内容的后面 */
   }

   /* 【核心动画】新增一个淡入和放大的动画效果 */
   @keyframes fadeIn {
       from {
           opacity: 0;

       }

       to {
           opacity: 1;

       }
   }

   .screen {
       display: none;
       /* 默认不占据空间 */
       width: 100%;
       height: 100%;
       position: absolute;
       top: 0;
       left: 0;
       flex-direction: column;
       box-sizing: border-box;
       background-color: #fafafa;
       opacity: 0;
       /* 默认透明 */
       visibility: hidden;
       /* 【关键】默认不可见，不阻挡交互 */

       /* --- 【V1.95 性能优化】--- */
       /* 提示浏览器，这个元素的 opacity 和 transform 属性将会变化，请进行硬件加速优化 */
       will-change: opacity, transform;
   }

   .screen.active {
       display: flex;
       /* 变为可见时，使用flex布局 */
       opacity: 1;
       /* 完全不透明 */
       visibility: visible;
       /* 【关键】变为可见，可以交互 */
       animation: fadeIn 0.4s ease-out;
       /* 【关键】只在变为 active 时播放动画 */
   }

   /* 分类开始 */

   /*
===================================================================
 3. 通用组件样式 (Reusable Components)
===================================================================
*/

   /* --- 3.1 通用头部 (Header) --- */

   /* 定义所有页面顶部导航栏的基础样式 */
   .header {
       width: 100%;
       height: 56px;
       padding: 10px 5px;
       padding-top: 50px;
       /* 为手机状态栏预留出空间 */
       display: flex;
       /* 使用flex布局，方便内部元素对齐 */
       align-items: center;
       /* 垂直居中对齐 */
       justify-content: space-between;
       /* 两端对齐，标题居中 */
       background-color: #fafafa;
       border-bottom: 1px solid #e0e0e0;
       box-sizing: content-box;
       /* 核心：让padding和border不计入设定的height中 */
       flex-shrink: 0;
       /* 防止在flex布局中被压缩，保持固定高度 */
       position: relative;
       /* 【新增】为标题绝对居中做准备 */
   }

   /* 头部中间的标题文字 */
   .header h1 {
       flex-grow: 1;
       /* 【新增】让标题占据中间所有可用空间 */
       text-align: center;
       /* 【新增】文字居中 */
       margin: 0;
       font-size: 18px;
       max-width: 60%;
       /* 防止标题过长与左右按钮重叠 */
       white-space: nowrap;
       /* 强制不换行 */
       overflow: hidden;
       /* 隐藏超出部分 */
       text-overflow: ellipsis;
       /* 超出部分显示省略号 */
   }

   /* 头部两侧的图标按钮（如返回、设置）的通用容器 */
   .header .header-icon {
       background: none;
       border: none;
       cursor: pointer;
       /* 鼠标悬浮时显示小手图标 */
       padding: 0;
       display: flex;
       /* 用于居中内部的SVG图标 */
       align-items: center;
       justify-content: center;
       width: 44px;
       /* 定义了足够大的可点击区域 */
       height: 44px;
   }

   /* 头部图标按钮内部的SVG图标颜色 */
   .header .header-icon svg {
       fill: #333;
       /* 设置图标的填充颜色 */
   }

   /* 专用于“添加”按钮的样式 */
   .add-btn {
       background: none;
       border: none;
       cursor: pointer;
       padding: 0;
       width: 44px;
       height: 44px;
       display: flex;
       align-items: center;
       justify-content: center;
   }

   /* --- 3.2 通用表单与按钮 (Forms & Buttons) --- */

   /* 包裹表单的容器，通常在设置页面使用 */
   .form-container {
       padding: 20px;
       overflow-y: auto;
       /* 当内容超出时，允许垂直滚动 */
       flex-grow: 1;
       /* 自动填满父容器的剩余空间 */
   }

   /* 表单本身 */
   .settings-form {
       max-width: 600px;
       margin: 20px auto;
       /* 上下边距20px，左右自动居中 */
       display: flex;
       flex-direction: column;
       /* 让内部的label和input垂直排列 */
       gap: 20px;
       /* 设置各项之间的垂直间距 */
   }

   /* 表单中的标签文字（如“API Key”） */
   .settings-form label {
       font-size: 16px;
       font-weight: 500;
       color: #555;
   }

   /* 表单中的输入框和下拉选择框 */
   .settings-form input,
   .settings-form select {
       width: 100%;
       box-sizing: border-box;
       /* 确保padding不会撑大输入框的宽度 */
       padding: 12px;
       border-radius: 8px;
       border: 1px solid #ccc;
       font-size: 14px;
   }

   /* 表单中的提交按钮 */
   .form-button {
       padding: 12px;
       background-color: #007bff;
       color: white;
       border: none;
       border-radius: 8px;
       cursor: pointer;
       font-size: 16px;
       margin-top: 10px;
   }

   /* 按钮被禁用时的样式 */
   .form-button:disabled {
       background-color: #a0a0a0;
   }

   /*
===================================================================
 3.3 通用弹窗/模态框 (Modals)
===================================================================
*/

   /* --- 弹窗后面那层半透明的黑色遮罩背景 --- */
   .modal-overlay {
       position: fixed;
       /* --- 定位方式：固定定位，让它像图钉一样钉在整个浏览器窗口上，不会随页面滚动而移动 --- */
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       background-color: rgba(0, 0, 0, 0.5);
       display: none;
       /* --- 默认显示状态：不显示，JS会通过添加.visible类来让它显示 --- */
       justify-content: center;
       /* --- 水平对齐：让它内部的弹窗内容在水平方向上居中 --- */
       align-items: center;
       /* --- 垂直对齐：让它内部的弹窗内容在垂直方向上居中 --- */
       z-index: 1000;
       /* --- 层级：设置一个很高的数字，确保遮罩层和弹窗在所有页面内容的上方 --- */
       opacity: 0;
       /* --- 初始透明度：默认为完全透明，用于实现淡入动画 --- */
       transition: opacity 0.2s ease-in-out;
       /* --- 过渡效果：当opacity属性变化时，在0.2秒内平滑地过渡 --- */
   }

   /* --- 当遮罩层需要显示时的样式 --- */
   .modal-overlay.visible {
       display: flex;
       /* --- 显示状态：改为flex布局，这样它和内部的居中对齐才会生效 --- */
       opacity: 1;
       /* --- 最终透明度：变为完全不透明 --- */
   }

   /* --- 传统小弹窗 (例如：确认删除、创建联系人) 的内容盒子 --- */
   .modal-content {
       background: white;
       padding: 25px 14px;
       border-radius: 11px;
       box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
       width: 80%;
       max-width: 280px;
       display: flex;
       flex-direction: column;
       /* --- 内部排列：让标题、输入框、按钮从上到下垂直排列 --- */
       gap: 12px;
       transform: scale(0.85);
       /* --- 初始状态：默认缩小到85%，为弹出动画做准备 --- */
       transition: transform 0.2s ease-in-out;
       /* --- 过渡效果：当transform属性变化时，在0.2秒内平滑过渡 --- */
   }

   /* --- 当小弹窗需要显示时，恢复它的大小，产生“弹出”动画 --- */
   .modal-overlay.visible .modal-content {
       transform: scale(1);
       /* --- 最终状态：恢复到100%正常大小 --- */
   }

   /* --- 小弹窗的标题 --- */
   .modal-content h2 {
       margin: 0;
       text-align: center;
       font-size: 20px;
   }

   /* --- 小弹窗内的输入框 --- */
   .modal-content input {
       width: 100%;
       padding: 12px;
       box-sizing: border-box;
       /* --- 盒子模型：确保padding和border不会撑大输入框的宽度，让宽度100%更可控 --- */
       border: 1px solid #ccc;
       border-radius: 8px;
       font-size: 16px;
   }

   /* --- 小弹窗底部按钮的容器 --- */
   .modal-actions {
       display: flex;
       justify-content: center;
       /* --- 水平对齐：让内部的按钮在容器里居中排列 --- */
       gap: 12px;
       margin-top: 10px;
   }

   /* --- 小弹窗底部按钮的基础样式 --- */
   .modal-actions button {
       flex: 0 1 80px;
       /* --- Flexbox布局：0代表不放大，1代表可缩小，80px是基础宽度。这能让按钮在空间不足时自动变窄 --- */
       padding: 8px;
       border-radius: 8px;
       border: none;
       font-size: 13px !important;
       cursor: pointer;
   }

   /* --- 卡片式大弹窗 (例如：气泡样式、聊天背景设置) --- */
   .modal-card {
       background: #f7f7f7;
       width: 95%;
       max-width: 450px;
       height: 60vh;
       /* --- 高度：vh是视口高度单位，60vh代表弹窗高度是屏幕可见区域高度的60% --- */
       max-height: 450px;
       border-radius: 16px;
       box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
       display: flex;
       flex-direction: column;
       /* --- 内部排列：让顶部的header、中间的body、底部的footer从上到下垂直排列 --- */
       overflow: hidden;
       /* --- 内容溢出：隐藏超出弹窗圆角范围的所有内容，确保圆角效果完美显示 --- */
       transform: scale(0.95);
       /* --- 初始状态：默认缩小到95%，为弹出动画做准备 --- */
       transition: transform 0.2s ease-in-out;
   }

   /* --- 当大弹窗需要显示时，恢复它的大小 --- */
   .modal-overlay.visible .modal-card {
       transform: scale(1);
   }

   /* --- 卡片弹窗的头部区域 --- */
   .modal-card-header {
       display: flex;
       justify-content: space-between;
       /* --- 内部对齐：让标题和关闭按钮分别靠在两端 --- */
       align-items: center;
       padding: 15px 20px;
       border-bottom: 1px solid #e0e0e0;
       flex-shrink: 0;
       /* --- 防止压缩：在flex布局中，防止这个区域因为内容过多而被压缩变形，保持固定高度 --- */
   }

   /* --- 卡片弹窗的标题 --- */
   .modal-card-header h2 {
       margin: 0;
       font-size: 18px;
   }

   /* --- 卡片弹窗的关闭按钮 --- */
   .modal-card-close-btn {
       background: none;
       border: none;
       cursor: pointer;
       padding: 5px;
   }

   /* --- 卡片弹窗的主体内容区域 --- */
   .modal-card-body {
       flex-grow: 1;
       /* --- 核心作用：让这个区域自动填满父容器中除了header和footer之外的所有剩余垂直空间 --- */
       overflow-y: auto;
       /* --- 内容溢出：当内部内容的高度超过这个区域时，显示垂直滚动条 --- */
       padding: 20px;
       display: flex;
       flex-direction: column;
       gap: 20px;
   }

   /* --- 卡片弹窗的底部区域 --- */
   .modal-card-footer {
       display: flex;
       gap: 12px;
       padding: 15px 20px;
       border-top: 1.5px solid #e0e0e0;
       flex-shrink: 0;
       /* --- 防止压缩：同样，防止这个区域被压缩变形 --- */
       justify-content: center;
   }

   /* --- 卡片弹窗底部按钮 --- */
   .modal-card-footer button {
       flex: 1;
       /* --- 核心作用：让每个按钮都等分父容器的宽度 --- */
       padding: 10px;
       border-radius: 8px;
       border: none;
       font-size: 14px !important;
       font-weight: 500;
       cursor: pointer;
   }

   /* --- 弹窗中通用的“确认”按钮样式 --- */
   .modal-confirm-btn {
       background-color: #333;
       color: white;
       font-weight: 550 !important;
   }

   /* --- 弹窗中通用的“取消”按钮样式 --- */
   .modal-cancel-btn {
       background-color: #e5e5e5;
       color: #333;
       font-weight: 550 !important;
   }

   /* --- 弹窗内部的小板块容器 (例如“自定义颜色”那个小区域) --- */
   .modal-plate {
       background: #fff;
       border: 1px solid #e8e8e8;
       border-radius: 10px;
       padding: 15px;
   }

   /* --- 弹窗内小板块的标题和重置按钮的容器 --- */
   .modal-plate-title-wrapper {
       display: flex;
       justify-content: space-between;
       /* --- 内部对齐：让标题和重置按钮分别靠在两端 --- */
       align-items: center;
       margin: 0 0 15px 0;
   }

   /* --- 弹窗内小板块的标题文字 --- */
   .modal-plate-title {
       font-size: 16px;
       font-weight: 500;
       margin: 0;
       color: #252525;
   }

   /* --- 弹窗内小板块的“重置”按钮 --- */
   .modal-reset-btn {
       background: #e5e5e5;
       border: none;
       color: #333;
       padding: 3px 10px;
       font-size: 11.5px !important;
       border-radius: 6px;
       cursor: pointer;
       font-weight: 550 !important;
   }

   /* --- 当鼠标悬浮在重置按钮上时的样式 --- */
   .modal-reset-btn:hover {
       background: #dcdcdc;
   }

   /* --- 弹窗内的多行文本输入框 --- */
   .modal-textarea {
       width: 100%;
       box-sizing: border-box;
       /* --- 盒子模型：确保padding不会撑大输入框的宽度 --- */
       min-height: 120px;
       border-radius: 8px;
       border: 1px solid #ccc;
       padding: 10px;
       font-family: monospace;
       /* --- 字体：使用等宽字体，更适合输入代码或格式化文本 --- */
       font-size: 13px;
       resize: vertical;
       /* --- 调整大小：只允许用户在垂直方向上拖拽调整输入框的高度 --- */
   }

   /* --- 3.4 通用设置项与开关 (Settings Items & Switches) --- */

   /* 设置页面中的白色卡片容器 */
   .settings-plate {
       background-color: #fff;
       border-radius: 12px;
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
       margin-bottom: 15px;
       overflow: hidden;
   }

   /* 设置卡片中的每一行项目 */
   .settings-item {
       position: relative;
       /* 为右侧箭头绝对定位提供基准 */
       display: flex;
       align-items: center;
       padding: 15px;
       color: #252525;
       cursor: pointer;
       transition: background-color 0.2s;
       /* 点击或悬浮时有背景色过渡 */
   }

   .settings-item:hover {
       background-color: #f5f5f5;
   }

   /* 项目之间的分割线 */
   .settings-plate .settings-item:not(:last-child) {
       border-bottom: 1px solid #f0f0f0;
   }

   /* 设置项中的头像 */
   .settings-avatar {
       width: 45px;
       height: 45px;
       border-radius: 50%;
       margin-right: 15px;
       background-color: #eee;
       object-fit: cover;
       /* 保证图片不变形 */
   }

   /* 设置项中的标题文字 */
   .settings-item-title {
       flex-grow: 1;
       /* 占据所有剩余空间，把箭头挤到最右边 */
   }

   /* 设置项中的可编辑名字输入框 */
   .settings-name-input {
       flex-grow: 1;
       border: none;
       background: none;
       font-size: 16px;
       color: #252525;
       padding: 5px 0;
       max-width: calc(100% - 50px);
   }

   .settings-name-input:focus {
       outline: none;
       /* 移除默认的蓝色边框 */
       background-color: #f0f2f5;
       border-radius: 4px;
   }

   /* 设置项右侧的 ">" 箭头图标容器 */
   .settings-arrow {
       position: absolute;
       /* 绝对定位，脱离文档流 */
       top: 50%;
       right: 5px;
       transform: translateY(-50%);
       /* 垂直居中 */
       width: 44px;
       /* 增加可点击区域 */
       height: 44px;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   /* 设置项右侧的短输入框（如用于输入数字） */
   .settings-value-input {
       border: 1px solid #ccc;
       border-radius: 6px;
       padding: 6px 10px;
       width: 80px;
       text-align: right;
       /* 文字靠右对齐 */
       font-size: 14px;
   }

   /* 用于让设置项内容整体居中的辅助类 */
   .settings-item-center {
       justify-content: center;
   }

   /* 开关 (Switch) 组件容器 */
   .switch {
       position: relative;
       display: inline-block;
       width: 44px;
       height: 26px;
   }

   /* 隐藏原生的checkbox */
   .switch input {
       opacity: 0;
       width: 0;
       height: 0;
   }

   /* 开关的背景滑轨 */
   .slider {
       position: absolute;
       cursor: pointer;
       top: 0;
       left: 0;
       right: 0;
       bottom: 0;
       background-color: #ccc;
       transition: .4s;
       /* 滑动动画 */
   }

   /* 开关的圆形滑块 */
   .slider:before {
       position: absolute;
       content: "";
       height: 22px;
       width: 22px;
       left: 2px;
       bottom: 2px;
       background-color: white;
       transition: .4s;
       /* 滑动动画 */
       border: 1.4px solid rgba(171, 171, 171, 0.562);
       /* 【核心新增】给圆圈加描边 */
       box-sizing: border-box;
       /* 确保描边不会撑大圆圈 */
   }

   /* 选中时，滑轨变色 */
   input:checked+.slider {
       background-color: #353333c3;
   }

   /* 选中时，滑块移动 */
   input:checked+.slider:before {
       transform: translateX(18px);
   }

   /* 圆角样式 */
   .slider.round {
       border-radius: 34px;
   }

   .slider.round:before {
       border-radius: 50%;
   }

   /* --- 3.5 通用头像样式 --- */

   /* 统一为项目中的多种头像添加白色描边和阴影，增加立体感 */
   .contact-item .avatar,
   .settings-avatar,
   .chat-avatar {
       border: 1.5px solid white;
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
   }

   /* --- 3.6 颜色选择器 (Color Picker) --- */

   /* 颜色设置的单行容器 */
   .color-setting-item {
       display: flex;
       justify-content: space-between;
       align-items: center;
       margin-bottom: 10px;
   }

   /* 颜色预览块的外层容器 */
   .color-picker-wrapper {
       width: 70px;
       height: 32px;
       border-radius: 8px;
       border: 1px solid #ddd;
       background-color: #fff;
       padding: 4px;
       /* 外框和内块的间距 */
       box-sizing: border-box;
       position: relative;
       /* 用于绝对定位内部的input */
       cursor: pointer;
   }

   /* 使用伪元素绘制内部的颜色预览块 */
   .color-picker-wrapper::before {
       content: '';
       display: block;
       width: 100%;
       height: 100%;
       border-radius: 5px;
       background-color: var(--color-preview, #fff);
       /* 颜色由JS通过CSS变量动态设置 */
   }

   /* 将真正的<input type="color">设为透明并覆盖在最上层，响应点击 */
   .color-picker-wrapper input[type="color"] {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       opacity: 0;
       /* 完全透明，但可点击 */
       cursor: pointer;
       -webkit-tap-highlight-color: transparent;
       /* 【核心修复】移除移动端点击高亮效果 */
   }


   /*
===================================================================
 4. 特定页面/屏幕样式 (Page-Specific Styles)
===================================================================
*/
   /* --- 4.1 锁屏页面 (#lock-screen) --- */

   /* 锁屏页面的主容器 */
   #lock-screen {
       background-color: #202020;
       /* 默认纯色背景 */
       background-size: cover;
       /* 背景图铺满 */
       background-position: center;
       /* 背景图居中 */
       z-index: 1000;
       /* 确保在最顶层 */
       display: flex;
       /* 初始时显示 */
       flex-direction: column;
       /* 内部元素垂直排列 */
       justify-content: space-between;
       /* 用于垂直分布元素（如时间在顶部，home bar在底部） */
       align-items: center;
       /* 水平居中 */
       transition: transform 0.25s cubic-bezier(0.25, 0.8, 0.25, 1), opacity 0.35s cubic-bezier(0.25, 0.8, 0.25, 1);
       /* 【【【核心修改：注入最终的“快速划走”动画】】】 */
       touch-action: none;
       /* 禁用默认的浏览器触摸行为，如滚动，为自定义手势做准备 */
       will-change: transform, opacity;
       /* 【动画性能优化】告诉浏览器这些属性即将变化 */
   }

   /* 锁屏正在被拖动或解锁过程中的状态 */
   #lock-screen.unlocking,
   #lock-screen.pulling-down {
       transition: none;
       /* 【【【新增】】】移除过渡，让JS实时控制位置 */
   }

   /* 解锁完成后的最终状态 */
   #lock-screen.unlocked {
       transform: translateY(-100%);
       /* 向上移出屏幕 */
       opacity: 0;
       /* 变为透明 */
       pointer-events: none;
       /* 【【【核心修改】】】动画结束后不再响应点击，允许操作下方桌面 */
   }

   /* 锁屏顶部的状态栏 */
   .lock-screen-status-bar {
       position: absolute;
       /* 绝对定位 */
       top: -13px;
       left: 0;
       width: 100%;
       height: 76px;
       box-sizing: border-box;
       padding: 0 15px;
       display: flex;
       justify-content: flex-end;
       /* 只需右对齐图标 */
       align-items: center;
       pointer-events: none;
       /* 让状态栏不影响交互 */
   }

   /* 【【【新增】】】锁屏左上角姓名和图标的容器 */
   .lock-screen-top-left {
       position: absolute;
       top: 15px;
       /* 与右侧图标垂直对齐 */
       left: 28px;
       /* 左侧边距 */
       display: flex;
       align-items: center;
       gap: 8px;
       /* 名字和心形的间距 */
       font-size: 15px;
       font-weight: 550;
       color: #4e4e4e;
       z-index: 1001;
       /* 确保在最顶层 */
   }

   /* 锁屏上的可编辑名字 */
   #lock-screen-name {
       cursor: text;
       /* 提示可点击 */
   }

   /* 锁屏状态栏右侧的图标容器 */
   #lock-screen-status-icons {
       display: flex;
       align-items: center;
       gap: 14.7px;
   }

   /* 【【【新增】】】确保锁屏图标的颜色正确 */
   #lock-screen-status-icons svg path {
       fill: #4e4e4e;
   }

   /* 锁屏中间的日期和小组件 */
   .lock-screen-date-widget {
       position: absolute;
       top: 68px;
       /* 根据效果图微调 */
       left: 0;
       /* 【新增】从左侧0点开始 */
       width: 100%;
       /* 【新增】宽度撑满 */
       text-align: center;
       /* 【新增】内部文字居中 */
       color: #4f4f4f;
       font-size: 17.2px;
       font-weight: 500;
   }

   /* 锁屏上的可编辑自定义文案 */
   #lock-screen-custom-text {
       cursor: text;
       /* 提示可点击 */
   }

   /* 锁屏上的大时间显示 */
   #lock-screen-time {
       position: absolute;
       top: 86px;
       /* 根据效果图微调 */
       left: 0;
       /* 【新增】从左侧0点开始 */
       width: 100%;
       /* 【新增】宽度撑满 */
       text-align: center;
       /* 【新增】内部文字居中 */
       font-size: 93px;
       /* 大字体 */
       font-weight: 550;
       /* 稍粗 */
       color: #4f4f4f;
       letter-spacing: 1px;
       /* 字体间距微调 */
   }

   /* 锁屏上其他文字元素的通用容器 */
   .lock-screen-words span {
       position: absolute;
   }

   /* 锁屏底部的 Home 指示条 */
   .home-bar {
       position: absolute;
       bottom: 12px;
       width: 135px;
       height: 5px;
       background-color: #3e3e3e;
       border-radius: 2.5px;
   }

   /* --- 4.2 桌面 (#home-screen) --- */

   /* 桌面主容器 */
   #home-screen {
       position: relative;
       /* 保持相对定位基准，用于内部绝对定位元素的对齐 */
       width: 100%;
       height: 100%;
       /* 【核心修复】确保桌面与屏幕等高 */
       box-sizing: border-box;
       /* 确保padding不会撑大盒子 */
       overflow-y: auto;
       /* 核心：当内容超出时，允许垂直滚动 */
       background-color: #202020;
       padding: 90px 0 110px 0;
       /* 顶部为状态栏和灵动岛留空，底部为Dock栏留空 */
       opacity: 0;
       /* 【【【修改】】】让桌面默认透明，配合JS做淡入效果 */
       transition: opacity 0.3s ease-out, filter 0.3s ease-out;
       /* 为显示和模糊效果变化添加动画 */
       will-change: filter, opacity;
       /* 提示浏览器，优化动画性能 */
   }


   /* --- 4.3 聊天列表页 (#chat-list-screen) --- */

   /* --- 列表滚动容器 --- */
   #chat-list {
       flex-grow: 1;
       /* 占据父容器所有剩余空间 */
       overflow-y: auto;
       /* 内容超出时允许垂直滚动 */
       background-color: #fff;
   }

   #contact-list {
       height: 100%;
       overflow-y: auto;
       /* 核心：让联系人列表本身可以滚动 */
   }

   /* --- 单个联系人/聊天项 --- */
   .contact-item {
       display: flex;
       align-items: center;
       padding: 12px 15px;
       border-bottom: 1px solid #f0f0f0;
       cursor: pointer;
       transition: background-color 0.2s;
   }

   .contact-item:hover {
       background-color: #f5f5f5;
   }

   /* --- 联系人头像 --- */
   .contact-item .avatar {
       width: 50px;
       height: 50px;
       background-color: #ddd;
       border-radius: 50%;
       margin-right: 15px;
       display: flex;
       justify-content: center;
       align-items: center;
       font-weight: bold;
       flex-shrink: 0;
       /* 防止头像被压缩 */
   }

   /* --- 联系人信息（名字、最后一条消息） --- */
   .contact-item .details {
       flex-grow: 1;
       overflow: hidden;
       /* 防止文字溢出 */
   }

   .contact-item .name {
       font-size: 18px;
   }

   .contact-item .last-message {
       font-size: 14px;
       color: #8e8e93;
       white-space: nowrap;
       /* 不换行 */
       overflow: hidden;
       /* 隐藏溢出部分 */
       text-overflow: ellipsis;
       /* 溢出部分显示省略号 */
       margin-top: 4px;
   }


   /*
===================================================================
 4.4 聊天界面 (#chat-interface-screen)
 这是一个总的“分类盒子”，里面装着所有和聊天主窗口相关的样式。
===================================================================
*/

   /* --- 4.4.1 顶栏 (Header) --- */
   /* 这个小分类里，装着所有和聊天窗口顶部导航栏相关的样式。 */

   /* --- 聊天顶栏容器的整体样式 --- */
   /* 控制着顶栏的背景、位置、大小等基础外观。 */
   #chat-interface-screen .header {
       position: absolute;
       /* --- 核心：让顶栏脱离文档流，像幽灵一样“浮”在消息列表的上方，不会挤占消息的空间。--- */
       flex-shrink: 0;
       /* --- 防止在flex布局中被压缩，确保顶栏始终保持设定的高度。--- */
       z-index: 10;
       /* --- 提高层级，就像Photoshop的图层，数字越大越靠上，确保它能盖住消息列表。--- */
       background: linear-gradient(to bottom, rgba(247, 247, 247, 0.8), transparent);
       /* --- 背景：从上到下由半透明白色渐变为完全透明，产生一种融入感。--- */
       border-bottom: none !important;
       /* --- 强制移除默认主题可能带有的底部分割线，让它看起来更干净。--- */
       backdrop-filter: blur(1px);
       /* --- 核心：毛玻璃效果，让顶栏后面的内容（即滚动的消息）变得模糊，增加层次感。--- */
       -webkit-backdrop-filter: blur(1px);
       /* --- 兼容Safari等浏览器的毛玻璃效果，作用同上。--- */
       height: 70px;
       /* --- 顶栏的高度。--- */
       padding-top: 50px;
       /* --- 在顶栏内部增加上边距，为手机顶部的“状态栏”（显示时间、电量的地方）预留出空间。--- */
       box-sizing: content-box;
       /* --- 计算方式：让padding和border不计入设定的height中，确保顶栏可见区域就是70px高。--- */
       width: 100%;
       /* --- 宽度撑满整个屏幕。--- */
       display: flex;
       /* --- 开启弹性布局，让内部的元素（如返回按钮和设置按钮）可以灵活对齐。--- */
       align-items: center;
       /* --- 垂直居中顶栏内的所有直接子元素。--- */
       justify-content: space-between;
       /* --- 水平方向上，让左右两侧的按钮分别贴向两边，中间的空间自动拉开。--- */
   }

   /* --- 聊天界面在无壁纸状态下的顶栏样式 --- */
   /* 这是一个备用规则，当聊天背景是纯色而不是壁纸时，可以在这里为顶栏添加分割线等样式，让它在纯色背景下也好看。 */
   #chat-interface-screen.no-wallpaper .header {
       /* 目前是空的，因为默认主题下不需要特别处理。*/
   }

   /* --- 顶栏中间的AI头像 --- */
   /* 控制悬浮在顶栏中间的那个圆形AI头像。 */
   #chat-header-ai-avatar {
       object-fit: cover;
       /* --- 保证图片在容器内被裁剪以填充，但不会拉伸变形。--- */
       border-radius: 50%;
       /* --- 将头像容器变为一个完美的圆形。--- */
       position: absolute;
       /* --- 同样使用“幽灵”模式，让它能独立于其他元素进行定位。--- */
       left: 50%;
       /* --- 步骤1: 先把头像的左边缘移动到屏幕正中间。--- */
       transform: translateX(-50%);
       /* --- 步骤2: 再把自己向左移动自身宽度的一半，这样就实现了完美的水平居中。--- */
       width: 55px !important;
       /* --- 头像的宽度。--- */
       height: 55px !important;
       /* --- 头像的高度。--- */
       top: 39px !important;
       /* --- 头像距离顶部的距离，数值越大越往下。--- */
   }

   /* --- 顶栏中间的AI名字 --- */
   /* 控制显示在AI头像下方的名字文本。 */
   #chat-interface-screen .header h1 {
       position: absolute;
       /* --- 同样使用绝对定位来居中。--- */
       transform: translateX(-50%);
       /* --- 同样使用transform来实现水平居中。--- */
       font-size: 14px !important;
       /* --- 名字的字体大小。--- */
       color: white !important;
       /* --- 名字的颜色。--- */
       left: 50%;
       /* --- 水平居中。--- */
       top: 104px;
       /* --- 距离顶部的距离，数值越大越往下。--- */
       font-weight: 550 !important;
       /* --- 字体粗细。--- */
       max-width: 60%;
       /* --- 限制一个最大宽度，防止名字太长时，与左右两边的按钮重叠。--- */
       white-space: nowrap;
       /* --- 强制名字在一行内显示，不换行。--- */
       overflow: hidden;
       /* --- 隐藏超出最大宽度的部分。--- */
       text-overflow: ellipsis;
       /* --- 当名字被隐藏时，在末尾显示省略号(...)。--- */
   }

   /* --- 顶栏左侧返回按钮的圆形背景 --- */
   /* 单独控制返回按钮那个有玻璃质感的圆形背景。 */
   #chat-interface-screen .header .header-icon[data-target="chat-list-screen"] {
       border-radius: 50%;
       /* --- 设置为圆形。--- */
       /* --- 核心：以下样式从输入框复制而来，以保持视觉统一的“玻璃质感” --- */
       background-color: rgba(255, 255, 255, 0.248);
       /* --- 半透明的白色背景。--- */
       box-shadow:
           /* --- 通过多层内阴影来模拟光照和边缘效果，增加立体感。--- */
           inset -2px 2px 4px rgba(255, 255, 255, 0.119),
           inset 1.22px 0 1.35px rgba(0, 0, 0, 0.11),
           inset 0 1px 1px rgba(255, 255, 255, 0.87),
           inset -1.22px 0 1.35px rgba(0, 0, 0, 0.11),
           inset 0 -1.36px 1px rgba(255, 255, 255, 0.87);
       backdrop-filter: blur(2px) saturate(106%) brightness(1.076);
       /* --- 再次应用毛玻璃效果，并微调饱和度和亮度。--- */
       -webkit-backdrop-filter: blur(2px) saturate(103%);
       position: relative;
       /* --- 开启相对定位，为移动自身和内部图标做准备。--- */
       top: 0px;
       /* --- 微调整个圆形背景的上下位置。--- */
       left: 7px;
       /* --- 微调整个圆形背景的左右位置。--- */
   }

   /* --- 返回按钮内部的箭头图标 --- */
   /* 单独控制箭头图标本身的位置，用来抵消背景移动带来的影响。 */
   #chat-interface-screen .header .header-icon[data-target="chat-list-screen"] svg {
       position: relative;
       top: 0px;
       /* --- 微调箭头图标的上下位置。--- */
       left: -3.2px;
       /* --- 微调箭头图标的左右位置。--- */
   }

   /* --- 返回按钮SVG图标微调 --- */
   #back-arrow-icon {
       margin-left: 5px;
       /* --- 给箭头图标本身一个左外边距，让它向右移动5px。--- */
   }

   /* --- 顶栏右侧设置按钮的图标微调 --- */
   #chat-settings-icon {
       margin-left: -20px;
       /* --- 一个旧的微调样式，让设置图标向左移动20px，我们暂时保留它。--- */
   }

   /* --- 顶栏右侧设置按钮的独立大小和颜色控制 --- */
   #chat-settings-btn svg {
       /* 这是一个备用样式区，可以解除注释来单独、强制地控制设置图标的大小和颜色。*/
       /* width: 28px; height: 28px; fill: #000000; */
   }


   /* --- 4.4.2 消息滚动区域 --- */

   /* --- 包裹所有消息的容器 --- */
   /* 这是聊天的主体部分，所有的消息气泡都在这个盒子里滚动。 */
   #message-container {
       flex-grow: 1;
       /* --- 核心：让它像海绵一样，自动填满顶栏和底栏之间的所有剩余垂直空间。--- */
       overflow-y: auto;
       /* --- 核心：当消息内容超出容器高度时，只允许这个区域出现垂直滚动条。--- */
       padding: 135px 19px 65px 19px;
       /* --- 容器的内边距 (上 右 下 左)，为悬浮的顶栏和底栏留出足够的空白空间，防止消息被遮挡。--- */
       background-color: transparent;
       /* --- 背景透明，这样才能显示出我们设置的聊天背景图。--- */
   }


   /* --- 4.4.3 底部输入区域 --- */

   /* --- 输入区域的总容器 --- */
   /* 包裹着输入框、加号按钮、发送按钮等所有底部控件。 */
   #input-area {
       position: absolute;
       /* --- 核心：同样使用“幽灵”模式，让整个输入区浮动在消息列表的底部。--- */
       bottom: 0;
       /* --- 贴紧屏幕底部。--- */
       left: 0;
       flex-shrink: 0;
       /* --- 防止被压缩。--- */
       z-index: 10;
       /* --- 确保层级在消息列表之上。--- */
       background: transparent !important;
       /* --- 背景透明。--- */
       border-top: 1.1px solid transparent !important;
       /* --- 顶部边框透明。--- */
       width: 100%;
       padding: 15px;
       box-sizing: border-box;
       display: flex;
       flex-direction: column;
       /* --- 核心：改为纵向排列，这样“功能面板”就可以显示在输入框行的下方。--- */
       gap: 10px;
       overflow: visible;
       /* --- 核心：允许内容溢出。否则展开的“功能面板”会被这个容器“剪切”掉而无法显示。--- */
   }

   /* --- 输入区域在无壁纸状态下的样式 --- */
   #chat-interface-screen.no-wallpaper #input-area {
       /* (这是一个备用规则) 当聊天背景是纯色时，可以在这里为输入区添加顶部分割线，让它和消息区分隔开。 */
   }

   /* --- 输入框和按钮的横向包裹行 --- */
   /* 这是输入区内部的一个横向行，用来排列输入框和旁边的按钮。*/
   #input-controls-row {
       display: flex;
       align-items: flex-end;
       /* --- 核心：让行内的所有元素（输入框、按钮）都以底部为基准对齐。--- */
       gap: 10px;
       width: 100%;
       position: relative;
       left: -15px;
       /* --- (全屏模式) 输入区整体位置微调，向左移动15px。--- */
       top: -5.8px;
       /* --- (全屏模式) 输入区整体位置微调，向上移动5.8px。--- */
   }

   /* --- 消息输入框本体 --- */
   #message-input {
       box-sizing: border-box;
       /* --- 计算方式：确保padding不会撑大输入框的宽度。--- */
       flex-grow: 1;
       /* --- 自动占据所有可用的水平空间，把按钮挤到旁边。--- */
       padding: 12px 26px 10px 16px;
       /* --- 内边距(上右下左)，在输入框内部留出空白，特别是为左右浮动的按钮留出空间。--- */
       border-radius: 20px;
       /* --- 输入框的圆角。--- */
       background-color: rgba(255, 255, 255, 0.066);
       /* --- 半透明的背景色。--- */
       color: rgb(255, 255, 255);
       /* --- 输入文字的颜色。--- */
       font-size: 16px;
       max-height: 600px;
       /* --- 限制最大高度，防止输入过多时无限伸长。--- */
       resize: none;
       /* --- 禁止用户手动拖拽右下角来调整输入框大小。--- */
       border: none;
       outline: none;
       /* --- 移除输入时那个默认的蓝色或橙色边框。--- */
       /* --- 核心：“玻璃拟态”风格的阴影和滤镜，同返回按钮。--- */
       box-shadow:
           inset -2px 2px 4px rgba(255, 255, 255, 0.119),
           inset 1.22px 0 1.35px rgba(0, 0, 0, 0.11),
           inset 0 1px 1px rgba(255, 255, 255, 0.87),
           inset -1.22px 0 1.35px rgba(0, 0, 0, 0.11),
           inset 0 -1.36px 1px rgba(255, 255, 255, 0.87);
       backdrop-filter: blur(2px) saturate(106%) brightness(1.076);
       -webkit-backdrop-filter: blur(2px) saturate(103%);
       position: relative;
   }

   /* --- 输入框内的提示文字 (例如 "Message...") --- */
   #message-input::placeholder {
       font-size: 14px;
       color: #ffffffba;
   }

   /* --- 输入区旁边的通用动作按钮 (如+号, 发送) --- */
   /* 这是一个通用的基础样式，被“更多”和“发送”等按钮继承。 */
   #input-area .action-button {
       width: 44px;
       /* --- 设定一个较大的点击区域，方便用户点击。--- */
       height: 44px;
       padding: 0;
       border: none;
       background-color: transparent;
       cursor: pointer;
       /* --- 鼠标悬浮时显示小手图标。--- */
       flex-shrink: 0;
       /* --- 防止按钮在空间不足时被压缩变形。--- */
       display: flex;
       align-items: center;
       justify-content: center;
   }

   /* --- 输入区按钮绝对定位与微调 --- */
   /* --- “更多”(+)按钮，绝对定位在输入框左侧 --- */
   #more-btn {
       position: absolute;
       /* --- 使用绝对定位，浮动在输入框上。--- */
       left: 8px;
       /* --- 距离左边8px。--- */
       bottom: 12px;
       /* --- 距离底部12px。--- */
   }

   /* --- “发送”按钮，绝对定位在输入框右侧 --- */
   #send-btn {
       position: absolute;
       display: flex;
       align-items: center;
       justify-content: center;
       right: 4px;
       /* --- 距离右边4px。--- */
       bottom: 0px;
       width: 44px;
       height: 44px;
   }

   /* --- “发送”按钮内部SVG图标微调 --- */
   #send-btn svg {
       position: relative;
       /* --- 开启相对定位，可以微调图标自身的位置。--- */
       top: 0px;
       left: -0.3px;
   }

   /* --- “生成”按钮，绝对定位在输入框右侧 --- */
   #generate-btn {
       position: absolute;
       right: 40px;
       /* --- 距离右边40px。--- */
       bottom: 0px;
   }


   /* --- 4.4.4 消息行与气泡 --- */

   /* --- 每一条消息行的外层包裹容器 --- */
   /* 这个容器包裹着头像和消息内容（气泡+时间戳）。*/
   .message-wrapper {
       display: flex;
       /* --- 开启弹性布局。--- */
       align-items: flex-start;
       /* --- 核心：让行内的头像和消息内容块以顶部为基准对齐。--- */
       margin-bottom: 10px;
       /* --- 和下一条消息的垂直间距。--- */
       gap: 12px;
       /* --- 头像和消息内容之间的水平间距。--- */
       position: relative;
       /* --- 开启相对定位，为后面的多选勾选框等浮动元素提供一个定位的“锚点”。--- */
   }

   /* --- 用户（我方）消息行的容器 --- */
   .user-wrapper {
       justify-content: flex-end;
       /* --- 让整行内容（头像+消息）作为一个整体，靠右对齐。--- */
   }

   /* --- AI（对方）消息行的容器 --- */
   .ai-wrapper {
       justify-content: flex-start;
       /* --- 让整行内容（头像+消息）作为一个整体，靠左对齐。--- */
   }

   /* --- 消息内容区（包裹气泡+时间戳） --- */
   .message-content-wrapper {
       flex-grow: 1;
       /* --- 自动填满除了头像之外的剩余水平空间。--- */
       display: flex;
       flex-direction: column;
       /* --- 让内部的元素（气泡、时间戳）从上到下垂直排列。--- */
       gap: 4px;
       /* --- 气泡和时间戳之间的垂直间距。--- */
   }

   /* --- 用户（右侧）消息的内容区 --- */
   .user-wrapper .message-content-wrapper {
       align-items: flex-end;
       /* --- 让内部的气泡和时间戳都靠右对齐。--- */
   }

   /* --- AI（左侧）消息的内容区 --- */
   .assistant-wrapper .message-content-wrapper {
       align-items: flex-start;
       /* --- 让内部的气泡和时间戳都靠左对齐。--- */
   }

   /* --- 聊天头像 --- */
   .chat-avatar {
       width: 40px;
       height: 40px;
       border-radius: 8px;
       /* --- 头像的圆角，这个值会被JS根据设置动态修改。--- */
       background-color: #eee;
       flex-shrink: 0;
       /* --- 防止头像在空间不足时被压缩变形。--- */
       object-fit: cover;
       /* --- 确保头像图片被裁剪填充，而不是拉伸。--- */
       transition: width 0.2s ease, margin 0.2s ease, padding 0.2s ease;
       /* --- 当隐藏/显示头像时，为大小和边距的变化添加平滑的动画效果。--- */
   }

   /* --- 连续消息的头像隐藏规则 --- */
   .user-wrapper+.user-wrapper .chat-avatar,
   .assistant-wrapper+.assistant-wrapper .chat-avatar {
       /* CSS选择器解释：(+)表示“紧邻的下一个兄弟”。所以这行代码的意思是：
       如果一个用户消息行的“紧邻的下一个兄弟”还是用户消息行，就对“下一个”消息行里的头像应用这个样式。*/
       visibility: hidden;
       /* --- 核心：只是把头像变透明，但它仍然占据着空间。这样做是为了防止消息向左或向右“跳动”，保持对齐。--- */
   }

   /* --- 全局关闭头像时的样式 --- */
   .no-avatars .chat-avatar {
       /* 规则解释：当总开关关闭时 (JS会给父容器添加.no-avatars类)，就彻底隐藏所有头像。 */
       width: 0 !important;
       /* --- 宽度设为0，彻底移除它占据的空间。--- */
       margin: 0 !important;
       padding: 0 !important;
       border: none !important;
       visibility: hidden;
   }

   /* --- 消息气泡基础样式 --- */
   .message-bubble {
       max-width: 70%;
       /* --- 限制一个最大宽度，防止气泡过长而撑满整个屏幕。--- */
       padding: 8px 14px;
       border-radius: 18px;
       width: fit-content;
       /* --- 核心：让气泡的宽度自适应内容的多少，而不是固定宽度。--- */
       word-wrap: break-word;
       /* --- 允许非常长的英文单词或URL地址在气泡内自动换行。--- */
       line-height: 1.5;
       /* --- 行高，控制文字的垂直间距。--- */
       position: relative;
       /* --- 开启相对定位，作为下面“小尾巴”的定位“锚点”。--- */
       /* --- 禁止在移动端长按时，弹出系统默认的复制/粘贴菜单，为我们自定义的菜单做准备。--- */
       -webkit-touch-callout: none;
       -webkit-user-select: none;
       -moz-user-select: none;
       -ms-user-select: none;
       user-select: none;
   }

   /* --- AI 消息气泡颜色 --- */
   .assistant-wrapper .message-bubble {
       background-color: #EBEBEB;
       /* --- 浅灰色背景 --- */
       color: #262626;
       /* --- 深灰色字体 --- */
   }

   /* --- 用户消息气泡颜色 --- */
   .user-wrapper .message-bubble {
       background-color: #007Aff;
       /* --- 蓝色背景 --- */
       color: white;
       /* --- 白色字体 --- */
   }

   /* --- 聊天气泡小尾巴 --- */
   /* --- 对方（AI）的气泡尾巴 --- */
   .assistant-wrapper .message-bubble::after {
       content: "";
       /* --- 伪元素必须要有这个属性。--- */
       position: absolute;
       /* --- 绝对定位，相对于气泡。--- */
       z-index: -1;
       /* --- 把它放在气泡后面，防止遮挡文字。--- */
       width: 20.3px;
       height: 20px;
       left: -9.3px;
       /* --- 精确定位到气泡的左侧。--- */
       bottom: 1.6px;
       background: inherit;
       /* --- 核心：自动继承气泡的背景颜色。--- */
       backdrop-filter: inherit;
       /* --- 核心：如果气泡有毛玻璃效果，尾巴也继承。--- */
       -webkit-backdrop-filter: inherit;
       /* --- 核心魔法：用SVG路径裁剪出一个特殊形状，并通过旋转和翻转来模拟iOS的尾巴效果。这是一种高级技巧。--- */
       clip-path: path('M-12,3 C5,4 -2,2 17,7 C5,13 5,12 0.9,18.8 Z');
       transform: rotate(68deg) scaleX(-0.9);
   }

   /* --- 你（用户）的气泡尾巴 --- */
   .user-wrapper .message-bubble::after {
       content: "";
       position: absolute;
       z-index: -1;
       width: 20.3px;
       height: 20px;
       right: -9.7px;
       /* --- 精确定位到气泡的右侧。--- */
       bottom: 3.7px;
       background: inherit;
       backdrop-filter: inherit;
       -webkit-backdrop-filter: inherit;
       clip-path: path('M-12,3 C5,4 -2,2 17,7 C5,13 5,12 0.9,18.8 Z');
       transform: rotate(-68deg) scaleX(0.9);
   }


   /* --- 4.4.5 聊天中的特殊消息体 --- */

   /* --- 聊天记录中的表情/贴图消息 --- */
   /* 这不是一个普通的气泡，而是一个专门用来显示大表情的透明容器。*/
   .message-wrapper .sticker-in-chat {
       max-width: 100px;
       max-height: 100px;
       background: none;
       /* --- 移除气泡背景，让它透明。--- */
       padding: 0;
       border-radius: 8px;
   }

   /* --- 用于“原地编辑”消息的文本输入框 --- */
   /* 当双击消息进行编辑时，会动态创建一个textarea来替换原来的文本，这个就是那个textarea的样式。*/
   .inplace-edit-textarea {
       width: 100%;
       height: auto;
       border: none;
       background: transparent;
       resize: none;
       outline: none;
       padding: 0;
       margin: 0;
       font-family: inherit;
       /* --- 核心：继承气泡的字体，让编辑时看起来和原来一样。--- */
       font-size: inherit;
       /* --- 核心：继承气泡的字号。--- */
       line-height: inherit;
       /* --- 核心：继承气泡的行高。--- */
       color: inherit;
       /* --- 核心：继承气泡的颜色。--- */
       overflow-y: hidden;
       /* --- 防止出现滚动条。--- */
   }


   /* --- 4.4.6 消息交互功能 (菜单、引用、多选等) --- */

   /* --- 消息时间戳与日期分隔 --- */
   .message-timestamp {
       color: #646464da;
       font-weight: 550;
       margin: 0 5px;
       font-size: 12.3px;
       white-space: nowrap;
       /* --- 防止时间文本（如 10:30）换行。--- */
       position: relative;
       top: 2px;
       /* --- 微调垂直位置。--- */
       left: 0;
   }

   /* --- 日期分隔符 (如 "今天" 或 "2025年10月9日") --- */
   .date-separator {
       text-align: center;
       /* --- 居中显示。--- */
       margin: 11.5px 0;
       /* --- 和上下消息的间距。--- */
   }

   /* --- 日期分隔符的文字样式 --- */
   .date-separator span {
       display: inline-block;
       padding: 4px 0;
       background-color: transparent;
       color: #4b4b4b;
       font-size: 13.63px;
       font-weight: 550;
   }

   /* --- 当有壁纸时，日期分隔显示背景 --- */
   #chat-interface-screen:not(.no-wallpaper) .date-separator span {
       /* CSS选择器解释：:not() 是一个否定伪类。这行代码的意思是：
       当聊天界面父元素“没有” .no-wallpaper 这个类时（也就是有壁纸时），应用此样式。 */
       padding: 2.6px 5px;
       background-color: #ffffff94;
       /* --- 半透明的白色背景，让它能和壁纸融合。--- */
       font-size: 12.63px;
       color: #2c2c2c;
       border-radius: 4px;
       /* --- 圆角。--- */
   }

   /* --- 查看历史消息按钮 --- */
   .history-loader {
       text-align: center;
       padding: 10px;
       cursor: pointer;
       font-size: 13.1px;
       color: #494949;
       font-weight: 500;
   }

   /* --- 查看历史消息按钮的胶囊样式 --- */
   .history-loader.boxed {
       background-color: #ececec;
       border-radius: 28px;
       width: fit-content;
       margin: 0 auto 10px auto;
       /* --- 居中显示。--- */
       padding: 6px 12px;
   }

   /* --- 消息长按右键菜单 --- */
   #message-context-menu {
       position: fixed;
       /* --- 相对于浏览器窗口定位，这样即使滚动页面，菜单位置也不变。--- */
       z-index: 1001;
       /* --- 确保在所有元素之上。--- */
       background-color: rgba(249, 249, 249, 0.9);
       backdrop-filter: blur(12px);
       /* --- 毛玻璃效果。--- */
       -webkit-backdrop-filter: blur(12px);
       border-radius: 14px;
       box-shadow: 0 6px 20px rgba(0, 0, 0, 0.18);
       padding: 5px;
       display: none;
       /* --- 默认隐藏。--- */
       flex-direction: column;
       gap: 3px;
       width: 210px;
       opacity: 0;
       /* --- 默认透明，用于动画。--- */
       transform: scale(0.95);
       /* --- 默认缩小，用于弹出动画。--- */
       transition: opacity 0.15s ease-out, transform 0.15s ease-out;
       /* --- 为显示/隐藏添加动画效果。--- */
   }

   /* --- 右键菜单显示时的样式 --- */
   #message-context-menu.visible {
       display: flex;
       /* --- 改为flex布局以显示。--- */
       opacity: 1;
       /* --- 完全不透明。--- */
       transform: scale(1);
       /* --- 恢复正常大小。--- */
   }

   /* --- 右键菜单的每一行 --- */
   .context-menu-row {
       display: flex;
       justify-content: space-around;
       /* --- 平均分布行内项目。--- */
   }

   /* --- 右键菜单的单个项目 --- */
   .context-menu-item {
       display: flex;
       flex-direction: column;
       /* --- 图标在上，文字在下。--- */
       align-items: center;
       justify-content: center;
       gap: 1.5px;
       cursor: pointer;
       border-radius: 8px;
       transition: background-color 0.2s;
       width: 46px;
       height: 42px;
   }

   /* --- 右键菜单项目点击时的效果 --- */
   .context-menu-item:active {
       background-color: rgba(0, 0, 0, 0.08);
       /* --- 点击时出现一个短暂的灰色背景。--- */
   }

   /* --- 右键菜单项目的图标 --- */
   .context-menu-item svg {
       height: 18px;
       margin-bottom: 2px;
   }

   /* --- 右键菜单项目的文字 --- */
   .context-menu-item span {
       font-size: 10px;
       color: #424242;
       font-weight: 550 !important;
   }

   /* --- 用于占位的空白菜单项，保持对齐 --- */
   .context-menu-item.placeholder {
       pointer-events: none;
       /* --- 让它变成“幽灵”，不可点击。--- */
       opacity: 0;
       /* --- 完全透明。--- */
   }

   /* --- 引用回复栏 (在输入框上方) --- */
   #reply-bar {
       display: none;
       /* --- 默认隐藏。--- */
       align-items: center;
       padding: 10px 15px 0px 15px;
       margin-bottom: 9px;
       /* --- 与下方输入框的间距。--- */
   }

   /* --- 引用回复栏的文字内容 --- */
   #reply-bar-content {
       flex-grow: 1;
       font-size: 13px;
       color: #666;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
       /* --- 引用内容过长时显示省略号。--- */
   }

   /* --- 取消引用按钮 --- */
   #cancel-reply-btn {
       background: none;
       border: none;
       cursor: pointer;
       padding: 0 0 0 10px;
   }

   /* --- 引用消息在气泡内的样式 --- */
   .message-bubble .reply-quote-box {
       background-color: rgba(128, 128, 128, 0.15);
       padding: 6px 10px;
       border-radius: 8px;
       margin-top: 6px;
       /* --- 和上方的主消息文本隔开一点距离。--- */
       font-size: 13px;
   }

   /* --- 引用消息的另一种样式(结构更复杂) --- */
   .message-bubble.default-style-reply {
       display: flex;
       flex-direction: column;
   }

   .message-bubble.default-style-reply .reply-content-wrapper {
       padding: 6px 10px;
       border-radius: 12px;
       background-color: rgba(0, 0, 0, 0.1);
       margin-bottom: 6px;
       font-size: 13px;
   }

   /* --- 引用消息的作者名字 --- */
   .reply-content-wrapper .reply-author {
       font-weight: 600;
       /* --- 加粗显示。--- */
   }

   /* --- 多选模式 --- */
   /* --- 多选模式下，隐藏所有原始顶栏元素 --- */
   #chat-interface-screen.multi-select-mode .header .header-icon,
   #chat-interface-screen.multi-select-mode .header h1,
   #chat-interface-screen.multi-select-mode .header #chat-settings-btn,
   #chat-interface-screen.multi-select-mode #chat-header-right-icons,
   #chat-interface-screen.multi-select-mode #chat-header-ai-avatar,
   #chat-interface-screen.multi-select-mode #pop-theme-header-title,
   #chat-interface-screen.multi-select-mode #chat-contact-status-container {
       display: none !important;
       /* --- 强制隐藏。--- */
   }

   /* --- 多选模式的顶栏操作区 (默认隐藏) --- */
   #chat-interface-screen .header .multi-select-actions {
       display: none;
       width: 100%;
       justify-content: space-between;
       align-items: center;
   }

   /* --- 多选模式下，显示操作区 --- */
   #chat-interface-screen.multi-select-mode .header .multi-select-actions {
       display: flex;
   }

   /* --- 多选模式顶栏的按钮 --- */
   .multi-select-btn {
       background-color: transparent;
       border: none;
       cursor: pointer;
       font-size: 15px;
       font-weight: 550 !important;
       padding: 10px 15px;
   }

   /* --- 多选-取消按钮 --- */
   #multi-select-cancel-btn {
       color: #252525;
   }

   /* --- 多选-删除按钮 --- */
   #multi-select-delete-btn {
       color: #df3546;
       /* --- 红色，表示这是一个危险操作。--- */
   }

   /* --- 多选计数器 ("已选择x条消息") --- */
   #multi-select-counter {
       font-size: 16px;
       font-weight: 540 !important;
       color: #2d2d2d;
   }

   /* --- 多选勾选图标 --- */
   .selection-checkmark {
       position: absolute;
       /* --- 绝对定位，浮动在消息行上。--- */
       bottom: -2px;
       width: 19px;
       height: 19px;
       background-color: #3f3f3f;
       border-radius: 50%;
       display: none;
       /* --- 默认隐藏。--- */
       justify-content: center;
       align-items: center;
       z-index: 10;
   }

   /* --- 当消息被选中时，显示勾选框 --- */
   #chat-interface-screen.multi-select-mode .message-wrapper.selected .selection-checkmark {
       display: flex;
   }

   /* --- 当消息被选中时，显示内部的SVG对勾图标 --- */
   .message-wrapper.selected .selection-checkmark svg {
       display: block;
   }

   /* --- AI方(左侧)的勾选框定位 --- */
   .assistant-wrapper .selection-checkmark {
       left: 28px;
   }

   /* --- 用户方(右侧)的勾选框定位 --- */
   .user-wrapper .selection-checkmark {
       right: 28px;
   }


   /* --- 4.4.7 功能面板 (加号展开) --- */

   /* --- 表情/功能面板的总容器 --- */
   #sticker-panel {
       margin: 0 -15px -15px -15px;
       /* --- 核心：用负外边距抵消父容器的内边距，让面板能100%撑满屏幕宽度。--- */
       width: calc(100% + 30px);
       /* --- 补偿因负外边距损失的宽度。--- */
       background-color: #f9f9f9;
       border-top: 1.2px solid #e0e0e0;
       /* --- 顶部分割线。--- */
       max-height: 0;
       /* --- 核心：默认高度为0，这样它就不占空间，是隐藏状态。--- */
       overflow: hidden;
       /* --- 隐藏超出的内容。--- */
       transition: max-height 0.3s ease-in-out;
       /* --- 核心：为高度变化添加动画，实现平滑的滑入滑出效果。--- */
       position: relative;
   }

   /* --- 功能面板显示时的样式 --- */
   #sticker-panel.visible {
       max-height: 185px;
       /* --- 核心：当JS给它添加.visible类时，将高度设为一个具体值，这样就会触发上面的动画。--- */
       overflow-y: auto;
       /* --- 如果内容超出，允许这个面板自己滚动。--- */
   }

   /* --- 功能面板的网格布局 --- */
   #sticker-grid {
       display: grid;
       /* --- 开启网格布局。--- */
       grid-template-columns: repeat(auto-fill, minmax(65px, 1fr));
       /* --- 核心：创建一个响应式的网格。它会自动填充尽可能多的列，每一列的最小宽度是65px。--- */
       gap: 15px;
       /* --- 网格项目之间的间距。--- */
       padding: 20px;
       box-sizing: border-box;
   }

   /* --- 单个功能/表情项目 --- */
   .sticker-item,
   .add-sticker-btn-wrapper {
       position: relative;
       aspect-ratio: 1 / 1;
       /* --- 核心：让每个项目的宽高比始终保持1:1，即正方形。--- */
       display: flex;
       justify-content: center;
       align-items: center;
       background-color: #fefefe;
       border-radius: 12px;
       border: 1px solid rgba(0, 0, 0, 0.04);
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
       cursor: pointer;
       /* --- 禁止长按时的系统默认行为 --- */
       -webkit-touch-callout: none;
       -webkit-user-select: none;
       -moz-user-select: none;
       -ms-user-select: none;
       user-select: none;
   }

   /* --- 功能/表情项目中的图片 --- */
   .sticker-item img {
       width: 100%;
       height: 100%;
       object-fit: contain;
       /* --- 保证图片完整显示且不形变，图片周围可能会有留白。--- */
       border-radius: 12px;
   }

   /* --- 表情删除按钮 (小叉号) --- */
   .sticker-delete-btn {
       position: absolute;
       top: -5px;
       right: -5px;
       width: 22px;
       height: 22px;
       border: none;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
       color: #888;
       opacity: 0;
       /* --- 默认透明，看不见。--- */
       pointer-events: none;
       /* --- 默认不可点击，像幽灵一样。--- */
       transition: opacity 0.2s ease;
       /* --- 为显示/隐藏添加淡入淡出动画。--- */
       z-index: 5;
       background-color: white;
       border-radius: 50%;
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
   }

   /* --- 当进入编辑模式时，显示删除按钮 --- */
   .sticker-item.show-delete .sticker-delete-btn {
       opacity: 1;
       /* --- 恢复不透明。--- */
       pointer-events: auto;
       /* --- 恢复可点击。--- */
   }


   /* --- 4.4.8 聊天界面内的弹窗 --- */

   /* --- 添加表情弹窗内的输入框 --- */
   .modal-input-field {
       width: 100%;
       box-sizing: border-box;
       padding: 12px;
       border-radius: 8px;
       border: 1px solid #ccc;
       font-size: 14px;
       background-color: #fff;
   }

   /* --- 添加表情弹窗内的上传按钮 --- */
   .modal-upload-btn {
       width: 100%;
       padding: 12px;
       background-color: #333;
       color: white;
       border: none;
       border-radius: 8px;
       cursor: pointer;
       font-size: 15px;
       font-weight: 500;
       display: flex;
       justify-content: center;
       align-items: center;
       gap: 8px;
   }

   /* --- 插入新消息弹窗 --- */
   #insert-message-card {
       height: 60vh;
       /* --- 高度为视口高度的60%。--- */
       max-height: 410px;
       /* --- 但最大不超过410px。--- */
   }

   #insert-modal-body {
       display: flex;
       flex-direction: column;
       padding: 11px 4px;
       gap: 10px;
       transform: scale(0.97);
       /* --- 将弹窗内容整体缩小一点点，看起来更精致。--- */
       transform-origin: top center;
       /* --- 缩放的中心点在顶部中央。--- */
   }

   #insert-actions-container {
       display: flex;
       justify-content: center;
       gap: 12px;
       flex-shrink: 0;
       padding-bottom: 15px;
   }

   .insert-action-btn {
       background-color: #f0f0f0;
       border-radius: 8px;
       padding: 7.5px 12.5px;
       display: flex;
       align-items: center;
       gap: 8px;
       cursor: pointer;
       color: #4b4b4b;
   }

   .insert-action-btn span {
       font-size: 12px !important;
       font-weight: 550;
   }

   #insert-preview-container {
       flex-grow: 1;
       /* --- 自动填满剩余的垂直空间。--- */
       overflow-y: auto;
       /* --- 内容超出时可滚动。--- */
       padding: 10px 0;
       display: flex;
       flex-direction: column;
       gap: 15px;
   }

   /* --- 插入弹窗内的消息行 --- */
   .insert-preview-item {
       display: flex;
       align-items: flex-start;
       gap: 10px;
       position: relative;
   }

   .insert-preview-item.user-wrapper {
       justify-content: flex-end;
   }

   .insert-preview-item.assistant-wrapper {
       justify-content: flex-start;
   }

   .insert-preview-item .chat-avatar {
       visibility: visible !important;
       /* --- 在弹窗内，所有头像都显示，不受连续消息规则影响。--- */
   }

   .insert-preview-item .message-content-wrapper {
       display: flex;
       align-items: flex-end;
       gap: 8px;
       max-width: calc(100% - 50px);
   }

   .insert-preview-item.user-wrapper .message-content-wrapper {
       flex-direction: row-reverse;
       /* --- 用户消息，时间戳在左边。--- */
   }

   .insert-preview-item.assistant-wrapper .message-content-wrapper {
       flex-direction: row;
       /* --- AI消息，时间戳在右边。--- */
   }

   .insert-preview-item .message-bubble {
       cursor: text;
       /* --- 提示内容可编辑。--- */
   }

   .insert-preview-item .message-timestamp {
       cursor: text;
       padding-bottom: -12px !important;
   }

   /* --- 插入弹窗内的删除按钮 --- */
   .insert-delete-btn {
       position: absolute;
       bottom: -2px;
       width: 18.5px;
       height: 18.5px;
       background-color: #3f3f3f;
       border-radius: 50%;
       display: none;
       /* --- 默认隐藏。--- */
       justify-content: center;
       align-items: center;
       cursor: pointer;
       z-index: 10;
   }

   /* --- 当进入可编辑状态时，显示删除按钮 --- */
   #insert-preview-container.editable .insert-delete-btn {
       display: flex;
   }

   /* --- AI方(左侧)的删除按钮定位 --- */
   .insert-preview-item.assistant-wrapper .insert-delete-btn {
       left: 28px;
   }

   /* --- 用户方(右侧)的删除按钮定位 --- */
   .insert-preview-item.user-wrapper .insert-delete-btn {
       right: 28px;
   }

   /* --- 4.5 设置页面 (Grouped) --- */

   /* --- 气泡样式设置弹窗内的“实时预览”区域 --- */
   #bubble-preview-area {
       display: flex;
       /* --- 布局方式：让内部的AI行和用户行可以灵活排列 --- */
       flex-direction: column;
       /* --- 主轴方向：设置为垂直排列，这样AI行就在用户行的上方 --- */
       gap: 10px;
       /* --- 间距：设置AI行和用户行之间的垂直间距 --- */
       padding: 15px;
       background-color: #f0f2f5;
       border-radius: 8px;
   }

   /* --- 预览区内的消息气泡（统一设置） --- */
   #bubble-preview-area .message-bubble {
       font-size: 12.5px;
       padding: 8px 14px;
   }

   /* --- 预览区内的头像（统一设置） --- */
   #bubble-preview-area .chat-avatar {
       width: 35px;
       height: 35px;
   }

   /* --- 预览区内的消息行容器（AI和用户通用） --- */
   #bubble-preview-area .user-wrapper,
   #bubble-preview-area .ai-wrapper {
       display: flex;
       /* --- 布局方式：让内部的头像和气泡可以水平排列 --- */
       align-items: flex-start;
       /* --- 交叉轴对齐：让头像和气泡的顶部对齐 --- */
       gap: 10px;
       /* --- 间距：设置头像和气泡之间的水平间距 --- */
   }

   /* --- 预览区内“用户”那一行 --- */
   #bubble-preview-area .user-wrapper {
       justify-content: flex-end;
       /* --- 主轴对齐：将整行内容（头像和气泡）推到容器的右侧末端 --- */
   }

   /* --- 主设置页 (#main-settings-container) --- */
   /* --- 主设置页的通用样式，用于移除背景和边框，实现极简风格 --- */
   #main-settings-container .settings-plate,
   #chat-settings-container .settings-plate,
   #appearance-settings-container .settings-plate {
       background-color: transparent;
       /* 移除白色背景 */
       box-shadow: none;
       /* 移除阴影 */
       margin-bottom: 0;
       /* 移除板块自己的下边距 */
       overflow: visible;
       /* 【核心修改】修复可能存在的显示问题 */
   }

   /* --- 主设置页和聊天设置页的项目间距 --- */
   #main-settings-container .settings-plate .settings-item,
   #chat-settings-container .settings-plate .settings-item {
       margin-bottom: 12px;
       /* 为每个项目添加独立的下方间距 */
   }

   /* --- 主设置页和聊天设置页移除项目分割线 --- */
   #main-settings-container .settings-plate .settings-item:not(:last-child),
   #chat-settings-container .settings-plate .settings-item:not(:last-child) {
       border-bottom: none;
       /* 移除项目之间的分割线 */
   }

   /* --- 主设置页项目标题文字颜色 --- */
   #main-settings-container .settings-item-title {
       color: #353333;
   }

   /* --- 主设置页项目容器 --- */
   .main-settings-item {
       padding-left: 20px;
       /* 统一左内边距 */
       gap: 18px;
       /* 图标和文字的间距 */
   }

   /* --- 主设置页项目图标 --- */
   .main-settings-item-icon {
       width: 26px;
       /* 固定图标容器宽度，让所有图标左侧对齐 */
       display: flex;
       justify-content: center;
       align-items: center;
   }

   /* --- 主设置页板块间距 --- */
   #main-settings-container .settings-plate:nth-of-type(2) {
       margin-top: 25px;
   }

   #main-settings-container .settings-plate:nth-of-type(3) {
       margin-top: 40px;
   }

   #main-settings-container .settings-plate:nth-of-type(2) .settings-item:first-child {
       margin-top: 25px;
       /* 调整回板块间的大间距 */
   }

   #main-settings-container .settings-plate:nth-of-type(3) .settings-item:first-child {
       margin-top: 40px;
   }

   /* --- 主设置页标题字体 --- */
   #main-settings-container .settings-item-title {
       font-size: 14.5px;
       /* 您可以在这里修改数值来调整大小 */
       font-weight: 550;
   }

   /* --- API KEY 输入框的文字 --- */
   .api-text {
       font-weight: 500;
       /* 这个数值控制粗细，可以改为 700 更粗 */
   }

   /* --- 聊天设置页 (#chat-settings-container) --- */
   /* --- 聊天设置页容器 --- */
   #chat-settings-container {
       padding: 20px;
   }

   /* --- 聊天设置页标题字体 --- */
   #chat-settings-container .settings-item-title {
       font-size: 14.5px;
       /* 修改这个数值来调整大小 */
       font-weight: 500;
       /* 修改这个数值来调整粗细 (普通是400, 粗体是700) */
   }

   /* --- “我的名字”显示区的占位符 --- */
   #user-settings-name-display:empty::before {
       content: "设置我的名字";
       /* 【新增】为“我的名字”显示区添加占位符样式 */
       color: #b0b0b0;
   }

   /* --- 聊天设置页名字输入框的提示文字 --- */
   #chat-settings-container .settings-name-input::placeholder {
       font-size: 15.5px;
       /* 设置与标题统一的字号 */
       font-weight: 500;
       /* 设置与标题统一的粗细 */
   }

   /* --- “清空聊天记录”按钮的文字样式 --- */
   #chat-settings-container #clear-history-btn span {
       font-size: 14px;
       font-weight: 550;
       color: #f1251ad6;
       /* 这是iOS系统风格的红色 */
   }

   /* --- 聊天设置页的通用输入框样式 --- */
   .settings-input-wrapper {
       display: flex;
       /* 让输入框和单位标签横向排列 */
       align-items: center;
       gap: 8px;
       /* 输入框和单位之间的间距 */
   }

   .settings-value-input {
       flex-grow: 0;
       /* 不拉伸 */
       width: 70px;
       /* 设定一个固定的、较短的宽度 */
       text-align: center;
       /* 文字居中显示 */
   }

   .settings-unit-label {
       font-size: 14px;
       color: #666;
       font-weight: 500;
   }

   /* --- 字体设置页 (#font-settings-screen) --- */
   #font-settings-screen .form-container {
       overflow-y: auto;
       /* 允许内容超出时垂直滚动 */
   }

   /* --- 字体设置页板块 --- */
   .font-settings-plate {
       padding: 15px 20px;
       /* 【修改】将上下的内边距从20px减小到15px */
       display: flex;
       flex-direction: column;
       gap: 25px;
       /* 各个设置板块之间的间距 */
   }

   /* --- 字体设置分组（标题+内容） --- */
   .font-setting-group {
       display: flex;
       flex-direction: column;
       gap: 8px;
       /* 标题和输入框的间距 */
   }

   .font-setting-group .group-title {
       font-size: 16px;
       font-weight: 600;
       color: #333;
       margin: 0;
   }

   .font-setting-group .group-subtitle {
       font-size: 13px;
       color: #888;
       margin: -4px 0 4px 0;
   }

   /* --- 字体预览框 --- */
   #font-settings-preview-box {
       width: 100%;
       box-sizing: border-box;
       padding: 20px;
       border-radius: 12px;
       border: 1.5px solid #e0e0e0;
       background-color: #f5f5f5;
       color: #555;
       font-size: 15px;
       transition: all 0.2s ease-in-out;
       /* 让所有变化都有平滑过渡 */
   }

   /* --- 字体输入行（字号+粗细） --- */
   .font-input-row {
       display: flex;
       justify-content: space-between;
       gap: 20px;
   }

   .font-input-row .font-setting-group {
       flex: 1;
       /* 让字号和粗细调节平分宽度 */
   }

   /* --- 字体输入框包裹容器 --- */
   .font-input-wrapper {
       display: flex;
       align-items: center;
       gap: 8px;
   }

   .font-input-wrapper input {
       width: 100px;
       /* 【修改】设定一个固定的宽度 */
       padding: 10px;
       border-radius: 8px;
       border: 1px solid #ccc;
       font-size: 14px;
       box-sizing: border-box;
       text-align: center;
   }

   .font-input-wrapper .unit-label {
       font-size: 14px;
       color: #666;
       font-weight: 500;
   }

   /* --- 字体链接输入区域 --- */
   .font-link-input-wrapper {
       display: flex;
       align-items: center;
       gap: 10px;
   }

   .font-link-input-wrapper input {
       flex-grow: 1;
       padding: 12px;
       border-radius: 10px;
       border: 1px solid #ccc;
       background-color: #f9f9f9;
   }

   .font-link-input-wrapper button {
       width: 44px;
       height: 44px;
       flex-shrink: 0;
       border: none;
       background: none;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
       position: relative;
       /* 【新增】开启相对定位，为移动做准备 */
       left: -8px;
       /* 【新增】向左移动 */
   }

   /* --- 已添加的字体列表 --- */
   #font-entry-list {
       display: flex;
       flex-direction: column;
       gap: 12px;
       /* 每个字体链接条之间的间距 */
       margin-top: 15px;
       min-height: 0px;
       /* 【修改】默认最小高度为0，不占空间 */
       transition: min-height 0.3s ease;
       /* 【新增】为高度变化添加动画 */
   }

   /* --- 单个字体条目 --- */
   .font-entry-item {
       display: flex;
       align-items: center;
       gap: 10px;
       padding: 8px;
       border: 1.5px solid #dcdcdc;
       border-radius: 12px;
       background-color: #fff;
   }

   .font-entry-name {
       font-weight: 500;
       color: #333;
       padding: 5px 8px;
       border-radius: 6px;
       cursor: pointer;
       min-width: 40px;
       /* 保证即使没字也能点 */
       text-align: center;
   }

   .font-entry-name:empty::before {
       content: "命名";
       color: #aaa;
       font-style: italic;
   }

   .font-entry-url {
       flex-grow: 1;
       padding: 5px 8px;
       border-radius: 6px;
       background-color: #f5f5f5;
       font-size: 12px;
       color: #555;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
   }

   .font-entry-actions {
       display: flex;
       align-items: center;
       gap: 8px;
   }

   .font-entry-actions button {
       width: 32px;
       height: 32px;
       border: none;
       background: none;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .font-entry-checkbox {
       width: 28px;
       height: 28px;
       border: 2px solid #ccc;
       border-radius: 8px;
       background-color: #f0f0f0;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
       transition: all 0.2s ease;
   }

   .font-entry-checkbox.checked {
       background-color: #353333;
       border-color: #353333;
   }

   .font-entry-checkbox.checked svg path {
       fill: #fff;
   }

   /* --- 字体设置页的按钮组 --- */
   .font-settings-buttons {
       display: flex;
       flex-direction: column;
       gap: 12px;
       margin-top: -12px;
       /* 【修改】减小与上方元素的间距，实现上移效果 */
   }

   .font-settings-buttons .form-button {
       margin-top: 0;
   }

   #restore-font-defaults-btn {
       background-color: #e5e5e5;
       color: #333;
   }

   #save-font-settings-btn {
       background-color: #32323c;
       /* 【新增】 */
       color: white;
       /* 【新增】 */
   }

   /* --- 外观设置页 (#appearance-style-screen) --- */
   #appearance-style-screen .header,
   #theme-change-screen .header {
       border-bottom: none;
       /* --- 【【【全新】】】移除特定页面的顶栏分割线 --- */
   }

   #appearance-style-container {
       padding: 20px;
       /* --- 个性装扮页 容器 --- */
       display: flex;
       flex-direction: column;
       gap: 35px;
       /* 设置两个大板块之间的垂直间距 */
   }

   /* --- “外观”和“通用”标题 --- */
   .appearance-section-title {
       font-size: 14.3px;
       font-weight: 500;
       color: #888;
       margin: 0 0 12px 15px;
       /* 标题与板块的间距 */
   }

   /* --- 外观设置页的板块 --- */
   .appearance-plate {
       background-color: #ffffff;
       border-radius: 22px;
       padding: 12px;
       display: flex;
       align-items: center;
       gap: 15px;
       /* 图标和文字的间距 */
       cursor: pointer;
   }

   .appearance-item-icon-wrapper {
       width: 48px;
       height: 48px;
       border-radius: 12px;
       flex-shrink: 0;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .appearance-item-text {
       flex-grow: 1;
       display: flex;
       flex-direction: column;
       gap: 4px;
       /* 主标题和副标题的间距 */
   }

   .appearance-item-title {
       font-size: 16px;
       font-weight: 550;
       color: #333;
   }

   .appearance-item-subtitle {
       font-size: 13px;
       color: #999;
   }

   .appearance-item-arrow {
       flex-shrink: 0;
       margin-right: 5px;
   }


   /* --- 更换主题页 (#theme-change-screen) --- */
   #theme-change-container {
       padding: 20px;
       /* --- 更换主题页 容器 --- */
       display: flex;
       flex-direction: column;
       gap: 20px;
       /* “当前主题”和“可选列表”之间的间距 */
   }

   /* --- “当前主题”和“可选列表”的白色容器 --- */
   #current-theme-display-wrapper,
   #other-themes-list-wrapper {
       background-color: #ffffff;
       border-radius: 18px;
       overflow: hidden;
   }

   /* --- 主题列表中的单个项目 --- */
   #other-themes-list-wrapper .theme-item {
       padding: 15px;
       display: flex;
       align-items: center;
       cursor: pointer;
       gap: 15px;
   }

   /* --- “当前主题”的特殊样式 --- */
   #current-theme-display-wrapper .theme-item {
       padding: 15px;
       display: flex;
       align-items: center;
       gap: 15px;
   }

   /* --- 主题图标预览 --- */
   .theme-item-icon-wrapper {
       width: 44px;
       height: 44px;
       border-radius: 11px;
       flex-shrink: 0;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   /* --- 主题名字 --- */
   .theme-item-title {
       font-size: 15px;
       font-weight: 550;
       color: #333;
   }

   /* --- 主题封面图标颜色 --- */
   .theme-icon-imessage-day {
       background-color: #ffffff;
       /* iMessage日间主题 */
   }

   .theme-icon-imessage-dark {
       background-color: #242424;
       /* iMessage夜间主题 */
   }

   .theme-icon-wechat {
       background: linear-gradient(to bottom, #19f957, #16ee53, #0de24a);
       /* 仿微信主题 (使用渐变) */
   }

   .theme-icon-ins {
       background-color: #383c3b;
       /* ins风主题 */
   }

   .theme-icon-pop {
       background-color: #feeff6;
       /* 仿pop主题 */
   }

   /* --- 更换应用图标页 (#app-icon-settings-screen) --- */
   #app-icon-settings-container {
       padding: 20px;
       display: flex;
       flex-direction: column;
       gap: 25px;
       /* 每个设置项之间的垂直间距 */
   }

   .app-icon-setting-item {
       display: flex;
       align-items: center;
       gap: 15px;
       /* 各个元素之间的水平间距 */
   }

   .app-icon-preview {
       flex-shrink: 0;
       width: 60px;
       height: 60px;
   }

   .app-icon-details {
       flex-grow: 1;
       display: flex;
       flex-direction: column;
       gap: 8px;
       /* 标题和输入框的间距 */
   }

   .app-icon-setting-title {
       font-size: 16px;
       font-weight: 500;
       color: #333;
   }

   .app-icon-url-input {
       width: 100%;
       box-sizing: border-box;
       padding: 8px 12px;
       border-radius: 8px;
       border: 1px solid #ddd;
       font-size: 13px;
       background-color: #f9f9f9;
   }

   .app-icon-actions {
       flex-shrink: 0;
       display: flex;
       flex-direction: column;
       align-items: center;
       gap: 8px;
   }

   .app-icon-btn {
       width: 60px;
       height: 32px;
       border-radius: 8px;
       border: none;
       cursor: pointer;
       font-size: 14px;
       font-weight: 500;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .app-icon-upload-btn {
       background-color: #353333;
       color: white;
   }

   /* --- 更换桌面壁纸弹窗 (#desktop-wallpaper-modal) --- */
   #desktop-wallpaper-modal .modal-card {
       max-height: 324px;
       /* 【【【全新】】】缩小“更换桌面壁纸”弹窗 */
       max-width: 314px;
   }

   #desktop-wallpaper-modal .modal-card-header h2 {
       font-size: 14px !important;
       font-weight: 550 !important;
       color: #363636;
   }

   /* --- 更换桌面壁纸弹窗内复用的预览样式 --- */
   .background-preview-clone {
       width: 100%;
       padding-top: 56.25%;
       /* 16:9 宽高比 */
       height: 0;
       border-radius: 10px;
       background-color: #fff;
       border: 2px dashed #ccc;
       cursor: pointer;
       background-size: cover;
       background-position: center;
       position: relative;
   }

   .remove-background-btn-clone {
       position: absolute;
       top: 5px;
       right: 5px;
       width: 24px;
       height: 24px;
       border-radius: 50%;
       border: none;
       background: rgba(0, 0, 0, 0);
       color: white;
       font-size: 16px;
       font-weight: bold;
       cursor: pointer;
       display: none;
   }

   .header h1 {
       flex-grow: 1;
       /* 【新增】让标题占据中间所有可用空间 */
       text-align: center;
       /* 【新增】文字居中 */
       margin: 0;
       font-size: 18px;
       max-width: 60%;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
   }

   .header .header-icon {
       background: none;
       border: none;
       cursor: pointer;
       padding: 0;
       display: flex;
       align-items: center;
       justify-content: center;
       width: 44px;
       height: 44px;
   }

   .header .header-icon svg {
       fill: #333;
   }

   .add-btn {
       background: none;
       border: none;
       cursor: pointer;
       padding: 0;
       width: 44px;
       height: 44px;
       display: flex;
       align-items: center;
       justify-content: center;
   }

   /* 分类结束 */



   #bubble-preview-area {
       padding: 15px;
       background-color: #f0f2f5;
       /* 设置浅灰色背景 */
       border-radius: 8px;
   }

   #bubble-preview-area .ai-bubble {
       margin-right: auto;
       margin-left: 0;
   }

   #bubble-preview-area .user-bubble {
       margin-left: auto;
       margin-right: 0;
   }

   #background-preview {
       width: 100%;
       padding-top: 56.25%;
       /* 16:9 宽高比 */
       height: 0;
       border-radius: 10px;
       background-color: #fff;
       border: 2px dashed #ccc;
       cursor: pointer;
       background-size: cover;
       background-position: center;
       position: relative;
   }

   #remove-background-btn {
       position: absolute;
       top: 5px;
       right: 5px;
       width: 24px;
       height: 24px;
       border-radius: 50%;
       border: none;
       background: rgba(0, 0, 0, 0);
       color: white;
       font-size: 16px;
       font-weight: bold;
       cursor: pointer;
       display: none;
   }


   /* 
        ===================================================================
         【全新 V1.73】情侣空间新布局专属样式
        ===================================================================
        */

   /* --- 整体内容区改造 --- */
   #couple-space-screen .couple-space-content {
       justify-content: flex-start;
       /* 改为从顶部开始排列 */
       padding-top: 20px;
       /* 增加一些顶部内边距 */
       position: relative;
       /* 为底部导航栏定位提供基准 */
       overflow: hidden;
       /* 隐藏主容器的滚动条 */
   }

   /* --- 拍立得相框容器 --- */
   #polaroid-container {
       display: flex;
       justify-content: center;
       align-items: flex-start;
       gap: 15px;
       /* 【修改】增加了拍立得之间的间距 */
       margin-bottom: 20px;
       /* 与下方头像的间距 */
       width: 100%;
       padding: 0 20px;
       box-sizing: border-box;
   }

   .polaroid-item {
       position: relative;
       width: 75px;
       /* 拍立得宽度 */
       height: 90px;
       /* 拍立得高度 */
       background-color: #ffffff;
       border-radius: 4px;
       padding: 6px;
       box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
       box-sizing: border-box;
       display: flex;
       /* 【新增】使用flex布局来控制内部照片区 */
       flex-direction: column;
       /* 【新增】让照片区在上方 */
       cursor: pointer;
       /* 【新增】添加小手指针，提示可以点击 */
   }

   /* 【修改】重构为照片区域，不再占满全部空间 */
   .polaroid-photo {
       width: 100%;
       height: 63px;
       /* 【核心修改】精确控制照片区域高度 */
       flex-shrink: 0;
       /* 【新增】防止被压缩 */
       background-color: #f1f1f1;
       border-radius: 2px;
       /* 【新增】让背景图能正常显示 */
       background-size: cover;
       background-position: center;
   }

   .polaroid-tape {
       position: absolute;
       top: -8px;
       left: 50%;
       transform: translateX(-50%);
       width: 30px;
       height: 16px;
       background-color: #f9e2a3;
       /* 黄色胶带 */
       border-radius: 3px;
       box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
       border-left: 1px solid rgba(255, 255, 255, 0.5);
       border-right: 1px solid rgba(255, 255, 255, 0.5);
   }

   /* 为每个拍立得和胶带设置不同的旋转角度 */
   #polaroid-item-1 {
       transform: rotate(-8deg);
   }

   #polaroid-item-2 {
       transform: rotate(5deg);
       top: -10px;
   }

   #polaroid-item-3 {
       transform: rotate(-4deg);
       top: -5px;
   }

   #polaroid-item-4 {
       transform: rotate(10deg);
   }

   #polaroid-item-1 .polaroid-tape {
       transform: translateX(-50%) rotate(3deg);
   }

   #polaroid-item-2 .polaroid-tape {
       transform: translateX(-50%) rotate(-5deg);
   }

   #polaroid-item-3 .polaroid-tape {
       transform: translateX(-50%) rotate(2deg);
   }

   #polaroid-item-4 .polaroid-tape {
       transform: translateX(-50%) rotate(-8deg);
   }

   /* --- 头像和提示语下移调整 --- */
   #couple-space-screen .couple-avatars-container {
       margin-top: 25px;
       /* 【修改】增加与拍立得的间距 */
   }

   #couple-space-screen .couple-space-prompt {
       /* 【核心修改】减小与头像的间距，实现上移 */
       margin-top: 13px !important;
   }

   #confirm-modal-text {
       font-size: 13.8px;
       font-weight: 550;
       color: #232323;
   }

   /* --- 全新底部导航栏 --- */
   .couple-bottom-nav {
       position: absolute;
       /* 定位在父容器底部 */
       bottom: 30px;
       left: 50%;
       transform: translateX(-50%);
       width: 90%;
       max-width: 300px;
       height: 59px;
       /* 【修改】将高度从 65px 进一步缩小到 55px (您可以按需调整) */
       background-color: #ffe5a5;
       border-radius: 28px;
       /* 【修改】圆角也相应缩小，让形状更协调 */
       box-shadow: 0 2px 8px rgba(138, 103, 0, 0.15);
       display: flex;
       justify-content: space-around;
       align-items: center;
       padding: 0 10px;
       box-sizing: border-box;
   }

   .nav-icon-wrapper {
       position: relative;
       /* 为滑块定位提供基准 */
       flex: 1;
       display: flex;
       justify-content: center;
       align-items: center;
       height: 100%;
       cursor: pointer;
       z-index: 2;
   }

   .nav-slider {
       position: absolute;
       top: 50%;
       left: 12.5%;
       /* 初始位置在第一个图标的中心 */
       transform: translate(-50%, -50%);
       width: 55px;
       /* 【修改】将滑块宽度从 52px 缩小到 46px */
       height: 46px;
       /* 【修改】将滑块高度从 52px 缩小到 46px */
       background-color: rgba(255, 255, 255, 0.5);
       border-radius: 25px;
       /* 【修改】圆角也相应缩小 */
       z-index: 1;
       transition: left 0.4s cubic-bezier(0.4, 0, 0.2, 1);
       /* 核心动画 */
   }


   /* --- 子页面切换容器 --- */
   .couple-main-content {
       width: 100%;
       flex-grow: 1;
       position: relative;
       /* 让子页面可以绝对定位 */
       /* 【【【关键修改】】】移除滚动能力，交还给子页面 */
       overflow: hidden;
   }

   /* 【【【关键新增】】】只为第一个页面开启滚动 */
   #couple-page-1 {
       height: 100%;
       /* 让其高度填满父容器 */
       overflow-y: auto;
       /* 允许自身垂直滚动 */
       position: absolute;
       /* 保持绝对定位以进行切换 */
       /* 确保其他属性继承或保持默认 */
       display: flex;
       /* 恢复 flex 布局 */
   }

   .couple-content-page {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       display: flex;
       flex-direction: column;
       align-items: center;
       /* 【修改】从居中对齐改为从顶部开始排列 */
       justify-content: flex-start;
       opacity: 0;
       visibility: hidden;
       transition: opacity 0.3s ease, visibility 0.3s;
       /* 【新增】为整个内容区添加顶部内边距，实现上移 */
       padding-top: 30px;
   }

   .couple-content-page.active {
       opacity: 1;
       visibility: visible;
   }

   /* 功能未开放提示语样式 */
   .couple-feature-locked-prompt {
       color: #ffd063;
       font-size: 16px;
       font-weight: 550;
       margin-bottom: 100px;
       /* 【新增】增加下边距，使其上移实现垂直居中 */
   }

   /* --- 顶栏“更多”按钮 --- */
   .couple-header .header-icon-right {
       /* 样式已经继承自 .header-icon, 无需额外代码 */
   }

   /* 
        ===================================================================
         【全新 V1.73】更换主题页面专属样式
        ===================================================================
        */
   #couple-theme-screen {
       background-color: #fff9eb;
       /* 同样使用专属背景色 */
   }

   #couple-theme-screen .form-container {
       padding: 20px;
       overflow-y: auto;
       display: flex;
       flex-direction: column;
       gap: 20px;
       /* 项目之间的间距 */
   }

   .theme-plate {
       display: grid;
       grid-template-columns: repeat(2, 1fr);
       /* 每行2个 */
       gap: 15px;
   }

   .theme-choice-item {
       /* 【修改】移除背景、边框和内边距 */
       display: flex;
       flex-direction: column;
       /* 【修改】改为垂直排列 */
       align-items: center;
       /* 【修改】居中对齐 */
       gap: 10px;
       /* 【修改】调整方块和文字的间距 */
       cursor: pointer;
       transition: transform 0.2s;
       /* 【修改】交互效果改为缩放 */
   }

   .theme-choice-item:hover {
       transform: scale(1.05);
       /* 【修改】鼠标悬浮时轻微放大 */
   }

   .theme-color-preview {
       width: 44px;
       height: 44px;
       border-radius: 8px;
       flex-shrink: 0;
       display: flex;
       /* 用于居中相机图标 */
       justify-content: center;
       align-items: center;
   }

   .theme-choice-item .theme-title {
       font-size: 16px;
       font-weight: 500;
       color: #1d1d1c;
   }

   .theme-action-buttons {
       display: grid;
       grid-template-columns: repeat(2, 1fr);
       gap: 15px;
       margin-top: 10px;
       align-items: center;
       /* 【新增】垂直对齐 */
   }

   .theme-action-btn {
       display: flex;
       flex-direction: column;
       align-items: center;
       gap: 10px;
       cursor: pointer;
       transition: transform 0.2s;
       font-size: 16px;
       font-weight: 500;
   }

   .theme-action-btn:hover {
       transform: scale(1.05);
   }

   #theme-reset-btn {
       background-color: #e9e9e9;
       color: #5b5b5b;
       border: none;
       /* 【核心修改】调整为更小尺寸 */
       width: 50%;
       /* 不占满格子 */
       justify-self: center;
       /* 在格子内水平居中 */
       padding: 10px 0;
       /* 使用内边距控制高度 */
       height: auto;
       /* 高度自适应 */
       border-radius: 12px;
       display: flex;
       justify-content: center;
       align-items: center;
       font-size: 16px;
       /* 确保字体大小一致 */
       font-weight: 500;
   }

   /* 【全新 V1.81】主题页右上角编辑按钮 */
   .header-edit-btn {
       background: none;
       border: none;
       cursor: pointer;
       font-size: 15px;
       /* 【【【修复】】】 将字体大小从 11px 恢复到 15px */
       font-weight: 500;
       /* 【【【修复】】】 将字重从 550（稍粗）调整为 500（正常） */
       color: #2c2c2c;
       padding: 0 10px;
       height: 40px;
       display: flex;
       align-items: center;
       justify-content: center;
       /* --- 【新增】相对定位，让按钮可以移动 --- */
       position: relative;
       /* --- 【新增】向左移动10px，您可以修改这个数值 --- */
       right: 10px;
   }

   /* 【全新 V1.81】删除图标通用样式 */
   .polaroid-delete-btn,
   .avatar-delete-btn {
       position: absolute;
       width: 19px;
       height: 19px;
       border-radius: 50%;
       background-color: rgba(53, 53, 53, 0.148);
       display: flex;
       justify-content: center;
       align-items: center;
       cursor: pointer;
       z-index: 10;
       /* 默认隐藏 */
       opacity: 0;
       pointer-events: none;
       transition: opacity 0.2s ease;
   }

   /* 【全新 V1.81】编辑模式下，为已自定义的元素显示删除按钮 */
   .edit-mode-active .is-customized .polaroid-delete-btn,
   .edit-mode-active .is-customized .avatar-delete-btn {
       opacity: 1;
       pointer-events: auto;
   }

   /* 【全新 V1.81】为每个拍立得的删除按钮设置独立的位置和旋转 */
   #polaroid-item-1 .polaroid-delete-btn {
       top: -8px;
       right: -6px;
       transform: rotate(-10deg);
   }

   #polaroid-item-2 .polaroid-delete-btn {
       top: -12px;
       right: -6px;
       transform: rotate(8deg);
   }

   #polaroid-item-3 .polaroid-delete-btn {
       top: -10px;
       right: -6px;
       transform: rotate(-5deg);
   }

   #polaroid-item-4 .polaroid-delete-btn {
       top: -8px;
       right: -6px;
       transform: rotate(12deg);
   }

   /* 【全新 V1.81】为头像的删除按钮设置位置 */
   .my-avatar-wrapper .avatar-delete-btn {
       top: 6px;
       right: 8px;
       transform: rotate(10deg);
   }

   /* 
        ===========================================================
         【新增】情侣空间底部导航图标独立微调区
        ===========================================================
        说明：
        - 修改下方 left 的 px 值，可以单独移动每个图标。
        - 正数向右移动，负数向左移动。
        */
   #couple-nav-icon-1 {
       position: relative;
       left: -7px;
   }

   #couple-nav-icon-2 {
       position: relative;
       left: -2px;
   }

   #couple-nav-icon-3 {
       position: relative;
       left: 3px;
   }

   #couple-nav-icon-4 {
       position: relative;
       left: 8.4px;
   }


   /* --- 【V2.31 新增】弹窗在手机框内的定位 --- */
   body.phone-frame-visible .modal-overlay {
       position: absolute;
       /* 关键：从fixed改为absolute */
       z-index: 2000;
       /* 确保在最顶层 */
   }


   /* 【【【全新】】】全局移除输入框和可编辑元素的聚焦边框 */
   input:focus,
   textarea:focus,
   [contenteditable]:focus {
       outline: none;
   }


   /* 
        ===================================================================
         【【【全新 V2.62】】】情侣空间绑定后 & 状态详情页专属样式
        ===================================================================
        */

   /* --- 1. 情侣空间绑定后UI样式 --- */
   .breakup-popup {
       position: absolute;
       top: 7px;
       right: -19px;
       width: 34px;
       height: 32px;
       border-radius: 50%;
       display: flex;
       justify-content: center;
       align-items: center;
       padding: 0;
       gap: 0;
       /* 动画的起点（隐藏状态） */
       transform: translate(-5%, -5%) scale(0);
       /* 【【【核心修改1】】】收起动画的基点：在中心 */
       transform-origin: center;
       background-color: #ffe694;
       z-index: 20;
       opacity: 0;
       transition: transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1), opacity 0.3s ease-out;
   }

   /* 当头像被点击时，显示小气泡 */
   .couple-avatar-wrapper.popup-active .breakup-popup {
       /* 动画的终点（可见状态） */
       transform: translate(0, 0) scale(1);
       opacity: 1;
       /* 【【【核心修改2】】】弹出动画的基点：在左下角 */
       transform-origin: bottom left;
   }

   /* 弹出的小气泡上的关闭按钮 */
   .breakup-close-btn {
       background: none;
       border: none;
       padding: 0;
       cursor: pointer;
       line-height: 1;
       /* 确保SVG垂直居中 */
       /* [新增] 为关闭按钮也增加一个容器，确保点击区域足够大 */
       width: 100%;
       height: 100%;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   /* 弹出小气泡的尾巴 */
   .breakup-popup::after {
       content: '';
       position: absolute;
       /* [修改] 定位到圆形的右下角内侧 */
       bottom: 6px;
       top: 19.7px;
       left: 3.4px;
       /* [修改] 旋转角度，使其指向头像中心 */
       transform: rotate(180deg);
       /* [保留] 尺寸和颜色 */
       width: 11px;
       height: 11px;
       background-color: #ffe694;
       border-radius: 2px;
       /* [新增] 把它放在圆形下方，避免穿透 */
       z-index: -1;
   }

   /* 当头像被点击时，显示小气泡 */
   .couple-avatar-wrapper.popup-active .breakup-popup {
       /* [修改] 动画的最终状态，回到正常位置和大小 */
       transform: translate(0, 0) scale(1);
       opacity: 1;
   }

   .couple-space-prompt {
       /* 【修复问题2】实现天数居中显示 */
       text-align: center;
   }

   .couple-message-list {
       /* 这是全屏模式下的默认样式 */
       width: 100%;
       /* 宽度先撑满可用空间 */
       max-width: 380px;
       /* 【关键】给一个固定的最大宽度，比手机框宽 */
       margin: 0 auto;
       /* 【关键】让列表在宽屏下水平居中 */
       padding: 0;
       /* 居中后，不再需要左右内边距 */
       box-sizing: border-box;
       display: flex;
       flex-direction: column;
       gap: 15px;
   }

   /* 【【【全新 V3.3 修复】】】 手机框模式下的专属样式 */
   body.phone-frame-visible .couple-message-list {
       /* 还原为您在手机框模式下满意的样式 */
       width: 92%;
       max-width: none;
       /* 【关键】移除最大宽度限制 */
       margin: 0;
       /* 【关键】移除居中 */
       padding: 0 20px;
       /* 【关键】恢复您原来的左右边距 */
   }

   .couple-message-item {
       background-color: #ffffffef;
       border-radius: 14px;
       padding: 15px;
       display: flex;
       align-items: center;
       gap: 12px;
       cursor: pointer;
       transition: transform 0.2s ease-out;
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
   }

   .couple-message-item:active {
       transform: scale(0.97);
   }

   .message-item-icon-wrapper {
       width: 38px;
       height: 38px;
       background-color: #ffe49a;
       /* 黄色背景 */
       border-radius: 12px;
       display: flex;
       justify-content: center;
       align-items: center;
       flex-shrink: 0;
       z-index: 1;
   }

   .message-item-content {
       flex-grow: 1;
       overflow: hidden;
       z-index: 1;
   }

   .message-item-title {
       /* --- 【修改】在这里调整字体大小 --- */
       font-size: 14.2px;
       font-weight: 550;
       color: #3b3b3b;
       margin: 0 0 4px 0;
   }

   .message-item-subtitle {
       font-size: 13px;
       color: #999;
       margin: 0;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
   }

   .message-item-timestamp {
       font-size: 12px;
       color: #aaa;
       flex-shrink: 0;
       display: none;
       /* 默认不显示 */
       z-index: 1;
   }

   /* 【【【全新 V3.4 微调区】】】 解除关系小气泡上的 “x” 图标位置微调 */
   .breakup-close-btn svg {
       position: relative;
       /* 修改下面的 left 值来左右移动图标，正数向右，负数向左 */
       left: -0.6px;
   }

   /* --- 3. 状态详情页专属样式 (V2.62重构版) --- */
   #couple-status-detail-screen {
       background-color: #fafafaec;
       /* 纯白背景 */
       /* 【新增】确保顶栏和输入框固定，只有中间消息区滚动 */
       display: flex;
       flex-direction: column;
   }

   #couple-status-detail-screen .couple-status-header {
       background-color: #ffffff !important;
       box-shadow: 0 1.18px 3.65px rgb(39, 39, 39, 0.1);
       flex-shrink: 0;
       /* 防止被压缩 */
   }

   #couple-status-message-container {
       flex-grow: 1;
       overflow-y: auto;
       padding: 20px 15px 125px 15px;
       /* 【核心修改】保留/增加底部内边距，为浮动输入框留出空间 */
       display: flex;
       flex-direction: column;
       gap: 18px;
   }

   /* 【【【核心动画修改区】】】 */

   /* 输入区域总容器：现在是定位的“舞台” */
   #couple-status-input-area {
       position: absolute;
       /* 【【【核心修改】】】改为 absolute，使其脱离文档流，实现幽灵浮动 */
       bottom: 0;
       left: 0;
       width: 100%;
       padding: 15px 0 30px 0;
       display: flex;
       justify-content: center;
       align-items: flex-end;
       background-color: transparent !important;
       /* position: relative;  【【【核心修改】】】移除多余的 relative，因为 absolute 已经可以作为子绝元素的定位基准 */
   }

   /* 【【【全新】】】为提示语文字本身添加入场动画 */
   #status-input-placeholder span {
       animation: fadeIn 0.32s ease-out;
   }

   /* 小输入提示框：样式不变 */
   #status-input-placeholder {
       width: 70%;
       height: 44px;
       background-color: #f0f2f5;
       border-radius: 18px;
       display: flex;
       align-items: center;
       justify-content: center;
       font-size: 15px;
       color: #aaa;
       cursor: text;
       position: relative;
   }

   #status-input-placeholder::after {
       content: '';
       position: absolute;
       bottom: -5px;
       left: 50%;
       transform: translateX(-50%) rotate(45deg);
       width: 10px;
       height: 10px;
       background-color: #f0f2f5;
       border-radius: 3px;
   }

   /* 大输入框容器：动画主体，样式不变 */
   #status-input-active-wrapper {
       position: relative;
       width: 70%;
       height: 44px;
       max-height: 200px;
       background-color: #f0f2f5;
       border-radius: 18px;
       display: flex;
       flex-direction: column;
       padding: 15px;
       box-sizing: border-box;
       transition: height 0.3s cubic-bezier(0.4, 0, 0.2, 1);
   }

   #status-input-active-wrapper.input-active {
       height: 19vh;
   }

   #status-message-input {
       flex-grow: 1;
       background-color: transparent;
       border: none;
       font-size: 16px;
       resize: none;
       outline: none;
       text-align: center;
       padding-top: 20px;
       opacity: 0;
       transition: opacity 0.2s ease-in-out;
   }

   #status-input-active-wrapper.input-active #status-message-input {
       opacity: 1;
   }

   #status-input-active-wrapper::after {
       content: '';
       position: absolute;
       bottom: -5px;
       left: 50%;
       transform: translateX(-50%) rotate(45deg);
       width: 10px;
       height: 10px;
       background-color: #f0f2f5;
       border-radius: 3px;
   }

   /* 【【【发送按钮全新定位与动画】】】 */
   #status-send-btn {
       /* 【核心1】绝对定位，相对于父容器 #couple-status-input-area */
       position: absolute;
       /* 【核心2】精确定位到大输入框的右侧外部 */
       bottom: 20px;
       /* 从底部微调，使其与输入框底部对齐 */
       right: 5%;
       /* 定位在屏幕右侧的空白区域，你可以微调这个百分比 */
       width: 44px;
       height: 44px;
       border: none;
       background: none;
       cursor: pointer;
       padding: 0;
       /* 【动画】默认状态：透明、缩小、不可点击 */
       opacity: 0;
       transform: scale(0.8);
       pointer-events: none;
       transition: opacity 0.2s ease, transform 0.2s ease;
   }

   /* 【【【动画联动】】】 */
   /* 当大输入框被激活时，使用 ~ 选择器找到它后面的发送按钮兄弟，并让其显示 */
   #status-input-active-wrapper.input-active~#status-send-btn {
       opacity: 1;
       transform: scale(1);
       pointer-events: auto;
   }

   /* 【【【全新 V3.2.1 修复】】】确保编辑时消息气泡能自动换行 */
   .message-bubble[contenteditable="true"] {
       /* 核心：覆盖掉 width: fit-content，让 max-width 正常生效 */
       width: auto;
       /* 确保文字可以正常断行和换行 */
       white-space: normal;
       word-wrap: break-word;
       /* 优化体验：在编辑时显示文本光标 */
       cursor: text;
   }

   /* --- 4. 状态详情页内的消息气泡 --- */
   .status-message-wrapper {
       display: flex;
       max-width: 80%;
   }

   .status-message-wrapper.user {
       margin-left: auto;
       flex-direction: row-reverse;
       /* 时间戳在左边 */
   }

   .status-message-wrapper.ai {
       margin-right: auto;
   }

   .status-message-bubble {
       padding: 10px 15px;
       position: relative;
       word-wrap: break-word;
       word-break: break-all;
       /* 【新增】强制英文或数字长串换行 */
   }

   /* 用户气泡 */
   .status-message-bubble.user {
       background-color: #007Aff;
       color: #ffffff;
       border-radius: 18px 18px 8px 18px;
       /* 右上角更尖锐 */
   }

   /* AI气泡 */
   .status-message-bubble.ai {
       background-color: #EBEBEB;
       color: #262626;
       border-radius: 8px 18px 18px 18px;
       /* 左上角更尖锐 */
   }

   .status-message-timestamp {
       align-self: flex-end;
       /* 垂直底部对齐 */
       font-size: 11px;
       color: #b0b0b0;
       margin: 0 8px;
       padding-bottom: 2px;
       white-space: nowrap;
   }

   /* --- 5. 状态详情页右上角菜单 --- */
   #couple-status-context-menu {
       position: absolute;
       top: 110px;
       /* 初始位置在顶栏下方 */
       right: 15px;
       background-color: #ffffff;
       border-radius: 12px;
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
       padding: 8px;
       display: flex;
       flex-direction: column;
       gap: 4px;
       z-index: 100;
       /* 弹性动画准备 */
       transform: scale(0.8);
       opacity: 0;
       transform-origin: top right;
       transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1), opacity 0.2s;
       visibility: hidden;
   }

   #couple-status-context-menu.visible {
       transform: scale(1);
       opacity: 1;
       visibility: visible;
   }

   /* 菜单的三角形气泡指针 */
   #couple-status-context-menu::before {
       content: '';
       position: absolute;
       top: -6px;
       right: 15px;
       /* 对准右上角按钮 */
       width: 14px;
       height: 14px;
       background-color: #ffffff;
       transform: rotate(45deg);
       border-radius: 2px;
   }

   .status-menu-item {
       display: flex;
       align-items: center;
       gap: 10px;
       padding: 10px;
       border-radius: 8px;
       font-size: 14px;
       color: #3f3f3f;
       cursor: pointer;
   }

   .status-menu-item svg {
       flex-shrink: 0;
   }

   /* --- 【【【全新 V3.4 修复】】】确保状态页编辑时消息气泡能自动换行 --- */
   .status-message-bubble[contenteditable="true"] {
       /* 核心：让 max-width 正常生效 */
       width: auto;
       /* 确保文字可以正常断行和换行 */
       white-space: normal;
       word-wrap: break-word;
       /* 优化体验：在编辑时显示文本光标 */
       cursor: text;
   }

   /* 
        ===================================================================
         【【【全新】】】状态详情页消息交互 (菜单、多选)
        ===================================================================
        */

   /* --- 7.1 消息交互小卡片 (编辑/删除) --- */
   #status-message-context-card {
       position: absolute;
       /* 由JS控制位置 */
       z-index: 101;
       background-color: #ffffff;
       border-radius: 10px;
       /* 【修改】圆角变小 */
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
       padding: 4px;
       /* 【修改】内边距变小 */
       display: flex;
       flex-direction: column;
       gap: 4px;
       /* 【修改】项目间距变小 */
       opacity: 0;
       transform: scale(0.85);
       /* [修改] 初始状态缩得更小一点 */
       /* 【核心修改】移除了固定的 transform-origin，将由JS动态设置 */
       /* [修改] 优化动画曲线，加入回弹效果，并让淡入淡出更平滑 */
       transition: opacity 0.2s ease-out, transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
       visibility: hidden;
       pointer-events: none;
   }

   #status-message-context-card.visible {
       opacity: 1;
       transform: scale(1);
       visibility: visible;
       pointer-events: auto;
   }

   .status-card-menu-item {
       padding: 6px 12px;
       /* 【修改】内边距变小 */
       font-size: 14px;
       /* 【修改】字体变小 */
       font-weight: 550;
       color: #3f3f3f;
       cursor: pointer;
       border-radius: 8px;
       transition: background-color 0.2s;
   }

   .status-card-menu-item:hover {
       background-color: #f0f0f0;
   }

   /* --- 7.2 多选模式下的顶栏变化 --- */
   #couple-status-detail-screen.multi-select-mode .couple-status-header .header-icon,
   #couple-status-detail-screen.multi-select-mode .couple-status-header h1,
   #couple-status-detail-screen.multi-select-mode .couple-status-header #couple-status-options-btn {
       display: none;
   }

   #couple-status-detail-screen .multi-select-actions {
       display: none;
       width: 100%;
       justify-content: space-between;
       align-items: center;
   }

   #couple-status-detail-screen.multi-select-mode .multi-select-actions {
       display: flex;
   }

   /* 【新增】为状态页的多选按钮设置独立颜色 */
   #status-multi-select-cancel-btn {
       color: #252525;
   }

   #status-multi-select-delete-btn {
       color: #df3546;
   }

   /* 
        ===================================================================
         【【【全新】】】情侣空间绑定后新UI专属样式
        ===================================================================
        */

   /* 【【【核心修复】】】 只有在绑定后，才让内容从顶部开始排列 */
   .couple-space-bound .couple-content-page {
       justify-content: flex-start;
   }

   /* 1. 绑定后，主内容页需要变成相对定位，作为头像的定位基准 */
   .couple-space-bound #couple-page-1 {
       position: relative;
   }

   /* 2. 新增的自定义背景区域样式 */
   #couple-custom-background-area {
       display: none;
       position: absolute;
       top: -64px;
       width: 100%;
       height: 270px;
       background-color: #fffdf5 !important;
       z-index: 1;
       cursor: pointer;
       background-size: cover;
       background-position: center;
   }

   /* 3. 绑定后，才显示自定义背景区域 */
   .couple-space-bound #couple-custom-background-area {
       display: block;
   }

   /* 4. 绑定后，拍立得容器需要设置更高的层级，并微调位置 */
   .couple-space-bound #polaroid-container {
       position: relative;
       z-index: 2;
       /* 【核心修复 V3.8.3】将上边距增加20px，以抵消顶栏负边距带来的上移效果 */
       margin-top: 20px;
   }

   /* 5. 绑定后，头像容器的全新位置 */
   .couple-space-bound .couple-avatars-container {
       position: absolute;
       top: 105px;
       left: 42px;
       margin-top: 0;
       z-index: 3;
       width: 150px;
       height: 80px;
   }

   /* 6. 绑定后，两个头像的新布局 */
   .couple-space-bound .my-avatar-wrapper {
       width: 84px;
       height: 84px;
       left: -6px;
   }

   .couple-space-bound .partner-avatar-wrapper {
       width: 84px;
       height: 84px;
       right: 2px;
   }

   /* 7. 绑定后，隐藏旧的提示文字 */
   .couple-space-bound .couple-space-prompt {
       display: none !important;
   }

   /* 8. 【【【全新】】】绑定后的新天数计数器容器 */
   .couple-days-counter-bound {
       display: none;
       /* 【核心修正】默认必须是none */
       position: absolute;
       top: 250px;
       left: 49px;
       z-index: 3;
       font-size: 15px;
       font-weight: 550;
       align-items: baseline;
   }

   /* 9. 【【【全新】】】绑定后才显示新的计数器 */
   .couple-space-bound .couple-days-counter-bound {
       display: flex;
   }

   /* 10. 【【【全新】】】为计数器的每个部分设置样式 */
   .couple-days-counter-bound .days-prefix {
       color: #ffe49c;
       margin-right: 12px;
   }

   .couple-days-counter-bound .days-number {
       color: #ffd063;
       font-size: 15.8px;
       margin-right: 12px;
   }

   .couple-days-counter-bound .days-suffix {
       color: #ffd865;
   }

   /* 11. 【【【全新】】】分割线样式 */
   .couple-section-divider {
       display: none;
       /* 【核心修正】默认必须是none */
       position: absolute;
       top: 285px;
       left: 50%;
       transform: translateX(-50%);
       width: 85%;
       height: 1.9px;
       background-color: #fff4d8;
       z-index: 3;
   }

   /* 12. 【【【全新】】】绑定后才显示分割线 */
   .couple-space-bound .couple-section-divider {
       display: block;
   }

   /* 13. 【【【全新】】】“发动态”按钮 */
   #post-status-btn {
       display: none;
       /* 【核心修正】默认必须是none */
       position: absolute;
       top: 220px;
       right: 40px;
       z-index: 3;
       background-color: #ffe5a5;
       border: none;
       border-radius: 10px;
       padding: 9px 14px;
       align-items: center;
       gap: 6px;
       cursor: pointer;
       box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
   }

   #post-status-btn span {
       color: white;
       font-size: 13.6px;
       font-weight: 550;
   }

   /* 14. 【【【全新】】】绑定后才显示“发动态”按钮 */
   .couple-space-bound #post-status-btn {
       display: flex;
   }

   /* 15. 【【【全新】】】动态/相册 选项卡容器 */
   .couple-tabs-container {
       display: none;
       /* 【核心修正】默认必须是none */
       position: absolute;
       top: 290px;
       left: 49px;
       z-index: 3;
   }

   /* 16. 【【【全新】】】绑定后才显示选项卡 */
   .couple-space-bound .couple-tabs-container {
       display: block;
   }

   /* 17. 【【【全新】】】选项卡内的文字项包裹器 */
   .couple-tab-items-wrapper {
       display: flex;
   }

   .couple-tab-item {
       font-size: 13.5px;
       font-weight: 500;
       color: #ffe8ab;
       padding: 5px;
       margin-right: 15px;
       cursor: pointer;
   }

   /* 18. 【【【全新】】】下方的滑块指示条 */
   .couple-tab-slider {
       width: 28px;
       height: 3px;
       background-color: #ffe8ab;
       border-radius: 1.5px;
       margin-top: 2px;
       margin-left: 5px;
   }

   /* --- 7.3 消息气泡上的勾选图标 --- */
   /* 【新增】为消息外层容器添加相对定位，作为勾选图标的“锚点” */
   .status-message-wrapper {
       position: relative;
   }

   .status-selection-checkmark {
       position: absolute;
       top: -4px;
       right: -4px;
       width: 18px;
       height: 18px;
       /* 【修改】颜色统一改为深灰色 */
       background-color: #3f3f3f;
       border-radius: 50%;
       display: none;
       justify-content: center;
       align-items: center;
       z-index: 10;
   }

   /* 【删除】不再需要为AI气泡单独设置颜色 */

   /* 核心显示逻辑：当屏幕处于多选模式，且消息被选中时，才显示 */
   #couple-status-detail-screen.multi-select-mode .status-message-wrapper.selected .status-selection-checkmark {
       display: flex;
   }

   /* --- 6. 解除关系弹窗样式 --- */
   #breakup-confirm-modal {
       /* 复用通用弹窗样式 */
   }

   .breakup-popup-card {
       background: white;
       padding: 25px 20px 20px 20px;
       border-radius: 14px;
       box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
       width: 80%;
       max-width: 280px;
       text-align: center;
   }

   #breakup-confirm-text {
       font-size: 16px;
       margin: 0 0 20px 0;
       color: #333;
   }

   .breakup-popup-actions {
       display: flex;
       justify-content: space-between;
       gap: 12px;
   }

   .breakup-popup-actions button {
       flex: 1;
       padding: 10px;
       border-radius: 8px;
       border: none;
       font-size: 15px;
       font-weight: 550;
       cursor: pointer;
   }

   #breakup-cancel-btn {
       background-color: #e5e5e5;
       color: #333;
   }

   #breakup-confirm-btn {
       background-color: #f1251ad6;
       color: white;
   }

   /* 
        ===================================================================
         【【【全新 V3.8.4】】】动态评论功能专属样式
        ===================================================================
        */
   .status-post-comments-list {
       margin-top: 15px;
       /* 评论区与上方爱心/删除图标的间距 */
       margin-bottom: 15px;
       /* 【核心新增】增加评论区与下方分割线的间距 */
       display: flex;
       flex-direction: column;
       gap: 4px;
       /* 每条评论之间的间距 */

       /* --- 【新增】在这里调整评论区的左右位置 --- */
       /* 修改下面的值，正数向内缩进，负数向外扩张 */
       margin-left: 0px;
       margin-right: 0px;
   }

   .comment-item {
       display: flex;
       /* 使用flex布局，让评论内容和删除按钮能对齐 */
       justify-content: space-between;
       /* 两端对齐 */
       align-items: flex-start;
       /* 顶部对齐 */
       gap: 10px;
       /* 内容和删除按钮的间距 */
       font-size: 13px;
       /* 评论字体大小 */
       color: #555;
       line-height: 1.5;
       margin-left: 12px;
   }

   .comment-content {
       flex-grow: 1;
       /* 让评论内容占据尽可能多的空间 */
       word-wrap: break-word;
       /* 允许长单词换行 */
   }

   .comment-content .commenter-name {
       font-weight: 550;
       /* 评论人ID加粗 */
       color: #333;
   }

   .comment-delete-btn {
       flex-shrink: 0;
       /* 防止删除按钮被压缩 */
       cursor: pointer;
       /* 为了让它和爱心旁边的删除按钮在视觉上右对齐，给它一个固定的容器尺寸 */
       width: 15px;
       height: 15px;
       display: flex;
       align-items: center;
       justify-content: center;
   }

   /* 
        ===================================================================
         【【【全新 V3.8】】】动态点赞功能专属样式
        ===================================================================
        */

   /* 1. 定义一个名为 "like-bounce" 的动画 */
   @keyframes like-bounce {
       0% {
           transform: scale(1);
       }

       50% {
           transform: scale(1.4);
       }

       /* 先放大到1.4倍 */
       100% {
           transform: scale(1);
       }

       /* 再恢复原状 */
   }

   /* 2. 爱心图标的容器样式 */
   .like-btn-wrapper {
       cursor: pointer;
       /* 鼠标悬浮时显示小手图标 */
       transition: transform 0.2s;
       /* 为点击时增加轻微的缩放过渡效果 */
       display: flex;
       /* 让内部SVG居中 */
       align-items: center;
       justify-content: center;
   }

   .like-btn-wrapper:active {
       transform: scale(0.9);
       /* 点击时轻微缩小 */
   }

   /* 3. 默认状态下，显示描边爱心，隐藏实心爱心 */
   .like-btn-wrapper .heart-outline {
       display: block;
   }

   .like-btn-wrapper .heart-filled {
       display: none;
   }

   /* 4. 当容器有 .liked 类时，反转显示状态，并为实心爱心应用动画 */
   .like-btn-wrapper.liked .heart-outline {
       display: none;
   }

   .like-btn-wrapper.liked .heart-filled {
       display: block;
       animation: like-bounce 0.4s ease-out;
       /* 应用我们定义的动画 */
   }

   /* 
        ===================================================================
         【【【全新】】】发布动态弹窗专属样式
        ===================================================================
        */
   #post-status-modal .status-modal-card {
       background-color: #fefefe;
       border-radius: 16px;
       width: 85%;
       max-width: 340px;
       box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
       display: flex;
       flex-direction: column;
       overflow: hidden;
       /* 沿用您现有弹窗的入场动画 */
       transform: scale(0.95);
       transition: transform 0.2s ease-in-out;
   }

   #post-status-modal.visible .status-modal-card {
       transform: scale(1);
   }

   #post-status-modal .status-modal-header {
       display: flex;
       justify-content: space-between;
       align-items: center;
       padding: 20px 20px 15px 20px;
   }

   #post-status-modal .status-modal-header h2 {
       margin: 0;
       font-size: 16px;
       font-weight: 550;
       color: #484848;
   }

   #post-status-modal .status-modal-close-btn {
       background: none;
       border: none;
       cursor: pointer;
       padding: 5px;
   }

   #post-status-modal .status-modal-body {
       padding: 0px 20px 20px 20px;
       display: flex;
       flex-direction: column;
       gap: 15px;
       /* 输入框和照片按钮的间距 */
   }

   #post-status-modal .status-modal-textarea {
       width: 100%;
       height: 120px;
       /* 您可以调整这个高度 */
       border: none;
       border-radius: 12px;
       background-color: #f7f7f7;
       padding: 15px;
       box-sizing: border-box;
       resize: none;
       font-size: 14px !important;
       color: #333;
   }

   #post-status-modal .status-modal-textarea::placeholder {
       color: #cbcbcb;
   }

   #post-status-modal .status-modal-photo-btn {
       width: fit-content;
       /* 宽度自适应内容 */
       background-color: #ffe495;
       border: none;
       border-radius: 8px;
       /* 8px的小圆角 */
       padding: 8px 12px;
       display: flex;
       align-items: center;
       gap: 6px;
       cursor: pointer;
   }

   #post-status-modal .status-modal-photo-btn span {
       color: white;
       font-size: 14px;
       font-weight: 500;
   }

   #post-status-modal .status-modal-footer {
       display: flex;
       justify-content: flex-end;
       /* 按钮靠右对齐 */
       gap: 12px;
       /* 按钮之间的间距 */
       padding: 0px 20px 20px 20px;
   }

   #post-status-modal .status-modal-action-btn {
       border: none;
       border-radius: 8px;
       padding: 6px 15px;
       font-size: 12.5px;
       font-weight: 550;
       color: #ffffff;
       cursor: pointer;
   }

   #post-status-modal .status-modal-action-btn.cancel {
       background-color: #ffebb5;
   }

   #post-status-modal .status-modal-action-btn.publish {
       background-color: #ffe495;
   }

   /* 
        ===================================================================
         【【【全新】】】情侣空间动态卡片与滚动布局专属样式 (最终修复版)
        ===================================================================
        */

   /* 【核心修复 1】移除父容器的 overflow: hidden 限制 */
   .couple-space-bound .couple-space-content {
       flex-grow: 1;
       /* 【【【关键修改】】】将 overflow: hidden 改为 overflow: visible */
       overflow: visible;
       display: flex;
       flex-direction: column;
   }

   /* 【核心修复 2】让 page-1 成为真正的、唯一的滚动容器 */
   .couple-space-bound #couple-page-1 {
       flex-grow: 1;
       /* 让它填满父容器的剩余空间 */
       overflow-y: auto;
       /* 【【【关键】】】允许它自己垂直滚动 */
       display: block;
       /* 覆盖掉 flex 布局，让其内部元素按正常文档流排列 */
   }

   /* 【【【关键新增】】】定义我们新创建的“舞台”容器的样式 */
   .couple-space-header-content {
       position: relative;
       /* 成为内部所有绝对定位元素的定位基准 */
       height: 320px;
       /* 给予一个固定的高度，足以容纳所有元素。您可以微调这个值。 */
       flex-shrink: 0;
       /* 防止在布局中被意外压缩 */
   }

   /* 【核心修复 3】动态流容器，现在只是一个普通的、带边距的块 */
   #couple-status-feed {
       /* 移除所有 flex 和 overflow 属性 */
       padding-top: 20px;
       /* 与上方的“舞台”隔开一点距离 */
       padding-bottom: 160px;
       /* 底部留出空间，防止被底栏遮挡 */
   }

   /* 【【【最终修复】】】专门用于居中“未绑定”状态下的头像容器 */
   #couple-space-screen:not(.couple-space-bound) .couple-avatars-container {
       position: relative;
       left: 50%;
       transform: translateX(-50%);
   }

   .status-post-card {
       display: none;
       width: 74%;
       margin: 0 auto 20px auto;
       background-color: #fefefe;
       border-radius: 14px;
       /* --- 【修改】减小上下的内边距来让卡片变矮 --- */
       padding: 13px 15px;
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
   }

   .couple-space-bound .status-post-card {
       display: block;
   }

   .status-post-header {
       display: flex;
       align-items: flex-start;
       gap: 12px;
   }

   .status-post-avatar {
       width: 40px;
       height: 40px;
       border-radius: 50%;
       object-fit: cover;
       border: 1.5px solid white;
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
       margin-top: 10px;
       margin-left: 7px;
   }

   .status-post-user-info {
       flex-grow: 1;
   }

   .status-post-username {
       /* 动态卡片用户名称 */
       font-size: 14px;
       font-weight: 550;
       color: #333;
       margin: 0 0 4px 0;
       margin-top: 12px;
       margin-left: 2px;
   }

   .status-post-timestamp {
       font-size: 11px;
       color: #aaa;
       margin-left: 2.4px;
   }

   .status-post-content {
       margin: 15px 0 5px 0;
       font-size: 13.3px;
       color: #2b2b2b;
       line-height: 1.6;
       white-space: pre-wrap;
       margin-left: 14px;
       margin-top: 20px;
   }

   .status-post-actions {
       display: flex;
       gap: 15px;
       justify-content: flex-end;
       /* --- 【修改】减小下边距，让图标靠近分割线 --- */
       margin-bottom: 12px;

       /* --- 【新增】增加右内边距，让图标整体向左移动 --- */
       padding-right: 5px;
   }

   .status-post-actions svg {
       margin-top: 10px;
       cursor: pointer;
   }

   .status-post-divider {
       height: 1.7px;
       background-color: #f7f7f7;
       margin: 0 0 10px 0;
   }

   .status-post-comment-area {
       display: flex;
       align-items: center;
       gap: 10px;
   }

   .status-post-comment-avatar {
       width: 32px;
       height: 32px;
       border-radius: 50%;
       object-fit: cover;
       flex-shrink: 0;
   }

   .status-post-comment-input {
       flex-grow: 1;
       background-color: #f8f8f7;
       border-radius: 10px;
       padding: 8px 12px !important;
       font-size: 13.4px !important;
       color: #333;
       border: none;
       outline: none;
       height: 36px;
       box-sizing: border-box;
       min-width: 0;
   }

   .status-post-comment-input::placeholder {
       color: #9f9f9f;
   }

   .status-post-comment-send {
       font-size: 13px;
       font-weight: 500;
       color: #505050;
       cursor: pointer;
       flex-shrink: 0;

   }

   /* 
        ===================================================================
         【【【全新 V3.9】】】添加状态弹窗及新状态消息专属样式
        ===================================================================
        */

   /* --- 1. 添加状态弹窗主体 --- */
   #add-status-card {
       width: 85%;
       max-width: 340px;
       /* 尺寸参考“发布动态”弹窗 */
       max-height: 480px;
       /* 【【【微调】】】限制最大高度，让弹窗稍微变矮 */
       height: auto;
       /* 【【【微调】】】高度自适应内容 */
   }

   #add-status-header h2 {
       color: #484848;
   }

   #add-status-body {
       padding: 15px 20px 20px 20px;
       display: flex;
       flex-direction: column;
       gap: 18px;
       /* 各个表单组之间的垂直间距 */
   }

   .add-status-form-group {
       display: flex;
       flex-direction: column;
       gap: 8px;
       /* 标题和输入框的间距 */
   }

   .add-status-form-group label {
       font-size: 14px;
       font-weight: 500;
       color: #555;
       padding-left: 5px;
       /* 标题左侧稍微缩进 */
   }

   /* --- 2. 自定义下拉框 --- */
   .status-dropdown-container {
       position: relative;
   }

   .status-dropdown-header {
       display: flex;
       align-items: center;
       background-color: #f7f7f7;
       border: 1.5px solid #e0e0e0;
       border-radius: 12px;
       padding: 12px 15px;
       cursor: pointer;
       height: 48px;
       box-sizing: border-box;
   }

   .status-dropdown-selected-icon {
       width: 22px;
       /* 为图标预留空间 */
       height: 22px;
       margin-right: 10px;
       flex-shrink: 0;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .status-dropdown-selected-text {
       flex-grow: 1;
       color: #333;
       font-size: 15px;
   }

   .status-dropdown-selected-text:empty::before {
       content: " ";
       /* 占位，防止空的时候塌陷 */
   }

   /*
         * 【【【这里是您要找的小三角动画】】】
         *  - transform: rotate(0deg) 是初始状态（正三角）
         *  - transition: transform 0.3s ease-in-out; 控制动画效果，您可以修改 0.3s 来调整速度。
         */
   .status-dropdown-arrow {
       flex-shrink: 0;
       transform: rotate(0deg);
       /* 【【【微调】】】初始是正三角 */
       transition: transform 0.3s ease-in-out;
   }

   .status-dropdown-container.expanded .status-dropdown-arrow {
       transform: rotate(0deg);
       /* 【【【微调】】】展开时是倒三角 */
   }

   .status-dropdown-list {
       position: absolute;
       top: 105%;
       /* 紧贴在header下方 */
       left: 0;
       width: 100%;
       background-color: #ffffff;
       border: 1.5px solid #e0e0e0;
       border-radius: 12px;
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
       max-height: 150px;
       /* 约等于3个item的高度 */
       overflow-y: auto;
       z-index: 1001;
       /* 确保在弹窗内容之上 */
       opacity: 0;
       visibility: hidden;
       transform: translateY(-10px);
       transition: opacity 0.2s ease, transform 0.2s ease, visibility 0.2s;
   }

   .status-dropdown-container.expanded .status-dropdown-list {
       opacity: 1;
       visibility: visible;
       transform: translateY(0);
   }

   .status-dropdown-item {
       display: flex;
       align-items: center;
       padding: 12px 15px;
       cursor: pointer;
   }

   .status-dropdown-item:hover {
       background-color: #f5f5f5;
   }

   .status-dropdown-item-icon {
       width: 22px;
       height: 22px;
       margin-right: 10px;
       flex-shrink: 0;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .status-dropdown-item-text {
       font-size: 15px;
   }

   /* --- 3. 其他输入控件 --- */
   .add-status-row {
       display: flex;
       justify-content: space-between;
       gap: 15px;
   }

   .add-status-row .add-status-form-group {
       flex: 1;
       /* 平分宽度 */
   }

   .add-status-subject-btn,
   .add-status-input {
       width: 100%;
       height: 48px;
       box-sizing: border-box;
       background-color: #f7f7f7;
       border: 1.5px solid #e0e0e0;
       border-radius: 12px;
       padding: 12px 15px;
       font-size: 15px;
       text-align: center;
   }

   .add-status-subject-btn {
       cursor: pointer;
   }

   #add-status-time-input::placeholder,
   #add-status-content-input::placeholder {
       color: #cbcbcb;
   }

   /* --- 4. 全新的居中状态消息样式 --- */
   .system-status-wrapper {
       text-align: center;
       margin: 9px 0;
       /* 【【【微调】】】将上下边距从 18px 减小到 12px，让消息间距更近 */
       display: flex;
       flex-direction: column;
       align-items: center;
       gap: 8px;
       /* 时间戳和灰色矩形的间距 */
   }

   .system-status-timestamp {
       font-size: 13px;
       font-weight: 500;
       color: #8e8e93;
   }

   .system-status-bubble {
       display: inline-flex;
       /* 核心：让其宽度自适应内容 */
       align-items: center;
       gap: 8px;
       /* 图标和文字的间距 */
       background-color: #f0f2f5;
       border-radius: 18px;
       padding: 6px 12px;
       max-width: 85%;
       /* 防止内容过长时撑满屏幕 */
   }

   .system-status-icon {
       width: 18px;
       height: 18px;
       flex-shrink: 0;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .system-status-content {
       font-size: 13px;
       color: #323232;
       line-height: 1.5;
       text-align: left;
       /* 确保矩形内的文字是左对齐的 */
   }

   /* --- 5. 【V3.9.1 新增】状态页历史消息加载按钮 --- */
   .status-history-loader {
       margin: 0 auto 20px auto;
       cursor: pointer;
       background-color: #f0f2f5;
       border-radius: 18px;

       /* 【核心修改】不再自适应内容，而是给一个固定的尺寸 */
       width: 40px;
       height: 24px;

       /* 【核心修改】开启相对定位，作为内部SVG的定位锚点 */
       position: relative;
   }

   /* 【【【全新】】】专门控制SVG图标的样式和位置 */
   .status-history-loader svg {
       /* 1. 使用绝对定位实现完美居中 */
       position: absolute;
       top: 50%;
       left: 50%;
       transform: translate(-50%, -50%);

       /* 
             * --- 【这里是您可以精确微调上下左右位置的地方】 ---
             * 在已经居中的基础上，您可以通过修改下面的 top 和 left 值进行微调。
             *
             * === 上下位置微调 ===
             * - 负数 (例如 top: -2px;) 会将图标向上移动。
             * - 正数 (例如 top: 2px;) 会将图标向下移动。
             *
             * === 左右位置微调 ===
             * - 负数 (例如 left: -2px;) 会将图标向左移动。
             * - 正数 (例如 left: 2px;) 会将图标向右移动。
             *
             * 我将 top 和 left 的初始值都设为50%，您可以直接在后面增减像素值
             * 例如: top: calc(50% - 1px);
             * 为了简单，我们直接修改 transform 里的值。
             */
       transform: translate(calc(-50% + 0px), calc(-50% + 0px));
   }


   /* 
        ===================================================================
         【【【全新 V3.9.5 最终解决方案】】】状态详情页快捷删除模式专属样式
        ===================================================================
        */

   /* --- 1. 右上角按钮容器 (保持不变) --- */
   .header-actions-wrapper {
       display: flex;
       align-items: center;
       height: 100%;
   }

   /* --- 2. 新增的“删除模式”按钮 --- */
   #status-direct-delete-btn {
       /* --- 【您可以修改这里的 top 和 right 值来微调按钮位置】 --- */
       position: relative;
       top: 0px;
       /* 正数向下, 负数向上 */
       right: 0px;
       /* 正数向左, 负数向右 */
   }

   /* --- 3. 当进入普通多选模式时，隐藏我们的新按钮 (保持不变) --- */
   #couple-status-detail-screen.multi-select-mode .header-actions-wrapper {
       display: none;
   }

   /* --- 4. 【【【核心修正】】】让状态条自身成为定位锚点 --- */
   .system-status-bubble {
       position: relative;
       /* <-- 关键：让状态条自己成为锚点 */
   }

   /* --- 5. 【【【核心修正】】】状态条旁边的删除叉号图标，使用绝对定位 --- */
   .status-direct-delete-icon {
       position: absolute;
       /* <-- 关键：使用绝对定位，脱离文档流 */

       /* --- 【您可以修改这里的 top 和 left 值来微调叉号位置】 --- */
       top: 50%;
       /* 垂直居中 */
       left: 100%;
       /* 定位到状态条的右侧外边缘 */
       transform: translateY(-50%);
       /* 垂直居中修正 */
       margin-left: 4px;
       /* 与状态条的间距 */

       /* 基础样式 */
       width: 24px;
       height: 24px;
       cursor: pointer;
       display: flex;
       align-items: center;
       justify-content: center;

       /* 默认“隐身”，不占据空间也不可见 */
       display: none;
   }

   /* --- 6. 【【【核心修正】】】当页面进入快捷删除模式时，让图标“现身” --- */
   #couple-status-detail-screen.direct-delete-mode .status-direct-delete-icon {
       display: flex;
   }

   /* 
        ===================================================================
         【【【全新 V3.9.7 最终修复】】】状态详情页顶栏标题绝对居中
        ===================================================================
        */
   #couple-status-detail-screen .couple-header h1 {
       /* 1. 将标题从文档流中“拎”出来 */
       position: absolute;

       /* 2. 将标题的左边缘对齐到父容器的正中心 */
       left: 50%;
       top: 64px;

       /* 3. 再将标题向左移动自身宽度的一半，实现完美居中 */
       transform: translateX(-50%);

       /* 4. 【安全措施】防止标题过长时与按钮重叠 */
       max-width: 60%;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
   }

   /* --- 【V4.0 新增】聊天列表页专属样式 (最终修正版) --- */
   #chat-list-screen {
       background-color: #fafafa;
       /* 核心：确保整个页面是flex布局，为内容滚动做准备 */
       display: flex;
       flex-direction: column;
   }

   /* 移除聊天列表页顶栏的边框，并设置为flex-shrink: 0防止被压缩 */
   #chat-list-screen .header {
       border-bottom: none !important;
       flex-shrink: 0;
       position: relative;
       /* 【【【核心新增】】】 */
   }

   /* 【V4.1 最终修复】标题使用绝对定位居中，与菜单栏标题方案统一 */
   #chat-list-screen .header h1 {
       position: absolute;
       left: 50%;
       top: 50%;
       /* 先定位到父容器中心 */
       transform: translate(-50%, -50%);
       /* 再根据自身大小进行微调，实现完美居中 */
       padding-top: 40px;
       /* 根据您的顶栏高度微调，确保垂直居中 */
       box-sizing: border-box;
       width: 60%;
       /* 限制最大宽度，防止与左右按钮重叠 */
       text-align: center;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
   }

   /* 【V4.1 核心修正】主内容区域，用于容纳可切换的页面 */
   #chat-list-main-content {
       flex-grow: 1;
       /* 占据头部和导航栏之间的所有空间 */
       position: relative;
       overflow: hidden;
       /* 防止子页面溢出导致整个屏幕滚动 */
   }

   /* 【V4.1 核心修正】可切换的子页面 */
   .chat-list-page {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       /* 继承父容器的高度 */
       display: none;
       /* 【【【核心修复】】】 默认不显示，彻底杜绝重叠BUG */
       flex-direction: column;
   }

   /* 【【【全新最终修复】】】 当任何子页面被激活时，让它正确显示出来 */
   .chat-list-page.active {
       display: flex;
   }

   /* 【V4.1 核心修正】真正滚动的列表容器 */
   #chat-list-container {
       height: 100%;
       /* 撑满父页面容器 */
       overflow-y: auto;
       /* 允许自身垂直滚动 */
       padding: 22.5px 27px 135px 27px;
       /* 增加底部padding，为浮动导航栏留出空间 */
       display: flex;
       flex-direction: column;
       gap: 30px;
   }

   /* 置顶和普通板块的通用样式 */
   .chat-section-plate {
       background-color: #ffffff;
       border-radius: 25px;
       overflow: hidden;
       flex-shrink: 0;
       /* 防止板块在flex布局中被压缩 */
   }

   /* 移除聊天列表页所有联系人项的分割线 */
   #chat-list-screen .contact-item {
       border-bottom: none !important;
   }

   /* 联系人项内部布局调整 */
   #chat-list-screen .contact-item {
       padding: 12px 15px;
       position: relative;
   }

   /* 联系人名字 */
   #chat-list-screen .contact-item .name {
       font-size: 17px;
       font-weight: 500;
   }

   /* 最后一条消息 */
   #chat-list-screen .contact-item .last-message {
       margin-top: 5px;
       font-size: 13.5px !important;
   }

   /* 联系人列表时间戳样式 */
   .contact-timestamp {
       position: absolute;
       top: 14px;
       right: 25px;
       font-size: 12.5px;
       color: #8e8e93;
       white-space: nowrap;
   }

   /* 【V4.1 核心修正】底部浮动导航栏样式 */
   #chat-list-bottom-nav {
       position: absolute;
       bottom: 30px;
       left: 50%;
       transform: translateX(-50%);
       width: 86%;
       max-width: 380px;
       height: 68px;
       background-color: rgba(255, 255, 255, 0.85);
       backdrop-filter: blur(10px);
       -webkit-backdrop-filter: blur(10px);
       border-radius: 34px;
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
       display: flex;
       justify-content: space-around;
       align-items: center;
       padding: 0 10px;
       box-sizing: border-box;
       border-top: none;
       z-index: 10;
       /* 确保在内容之上 */
   }

   /* --- 【【【请在这里新增下面的代码】】】 --- */
   #chat-list-bottom-nav .nav-item svg {
       height: 28px;
       /* 强制所有图标的高度统一为28px */
       display: flex;
       /* 让图标在自己的小空间里垂直居中 */
       align-items: center;
   }

   /* --- 【【【新增结束】】】 --- */

   .nav-item {
       display: flex;
       flex-direction: column;
       align-items: center;
       gap: 4px;
       cursor: pointer;
       flex: 1;
   }

   .nav-item .nav-title {
       font-size: 11px;
       font-weight: 500;
       color: #333333;
       transition: color 0.2s;
   }

   .nav-item svg path {
       fill: #333333;
       transition: fill 0.2s;
   }

   /* 选中状态的样式 */
   .nav-item.active .nav-title {
       color: #007cff;
   }

   .nav-item.active svg path {
       fill: #007cff;
   }

   /* 
        ===================================================================
         【【【全新 V4.2】】】未读消息红点专属样式
        ===================================================================
        */

   /* --- 1. 包裹联系人头像的容器，作为红点定位的“锚点” --- */
   .contact-avatar-wrapper {
       position: relative;
       /* 关键：开启相对定位 */
       flex-shrink: 0;
       /* 防止在flex布局中被压缩 */
   }

   /* --- 2. 未读消息红点的通用样式 --- */
   .unread-badge {
       position: absolute;
       /* 关键：脱离文档流，浮动在父元素之上 */
       top: -2px;
       /* 距离顶部的距离，可微调 */
       right: 9px;
       /* 距离右侧的距离，可微调 */
       min-width: 20px;
       /* 最小宽度，确保单个数字也能撑起圆形 */
       height: 20px;
       background-color: #f94242;
       /* 您指定的红色 */
       color: #ffffff;
       /* 您指定的白色 */
       border-radius: 10px;
       /* 高度一半的圆角，形成完美圆形 */
       display: flex;
       justify-content: center;
       align-items: center;
       font-size: 12px;
       font-weight: 500;
       padding: 0 5px;
       /* 左右留白，让多位数也好看 */
       box-sizing: border-box;
       border: 1.5px solid #ffffff;
       /* 白色描边，增加质感 */
       z-index: 5;
       /* 确保在头像之上 */
   }

   /* --- 3. 底部导航栏图标的包裹容器，同样用作“锚点” --- */
   .nav-icon-badge-wrapper {
       position: relative;
       /* 关键：开启相对定位 */
       display: flex;
       /* 确保内部SVG能正常显示 */
       justify-content: center;
       align-items: center;
   }

   /* --- 4. 针对底部导航栏红点的微调 --- */
   .nav-icon-badge-wrapper .unread-badge {
       top: -5px;
       /* 位置微调 */
       right: -8px;
   }

   /* 
        ===================================================================
         【【【全新 V4.3】】】“Me”页面异形顶栏专属样式
        ===================================================================
        */

   /* --- 1. “Me”页面的内容区基础样式 --- */
   #me-page .me-page-content {
       flex-grow: 1;
       /* 让内容区填满剩余空间 */
       padding: 20px;
       text-align: center;
       color: #888;
   }

   /* --- 2. 异形顶栏的容器 (白色矩形部分) --- */
   #me-page .me-page-header {
       width: 100%;
       height: 120px;
       /* 您可以根据需要调整顶栏的高度 */
       background-color: #ffffff;
       /* 顶栏的背景色是白色 */
       position: relative;
       /* 【【【核心】】】开启相对定位，这是让“挖洞”成功的关键 */
       flex-shrink: 0;
       /* 防止被压缩 */
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
       /* 添加一个非常淡的底部阴影增加质感 */
   }

   /* --- 3. 实现“挖洞”效果的伪元素 (最关键的部分) --- */
   #me-page .me-page-header::after {
       content: '';
       /* 伪元素必须有 content 属性 */
       position: absolute;
       /* 绝对定位，相对于 me-page-header */

       /* --- 【您可以微调这里的数值来改变“凹陷”的大小】 --- */
       width: 44px;
       /* “凹陷”的宽度 */
       height: 44px;
       /* “凹陷”的高度 */

       bottom: 0;
       /* 定位到父容器的底部 */
       left: 0;
       /* 定位到父容器的左边 */

       /* 【【【魔法所在】】】背景色必须和页面背景色(#fafafa)完全一样！ */
       background-color: #fafafa;

       /* 【【【画龙点睛】】】只给右上角设置圆角，形成弧线效果 */
       border-top-right-radius: 22px;
       /* 圆角大小，通常是宽高的一半 */
   }

   /* 
        ===================================================================
         【【【全新 V4.3】】】“Me”页面专属样式
        ===================================================================
        */

   /* --- 1. “Me”页面激活时，隐藏聊天列表的顶栏元素 --- */
   #chat-list-screen.me-page-active .header .header-icon,
   #chat-list-screen.me-page-active .header h1,
   #chat-list-screen.me-page-active .header .add-btn {
       display: none !important;
       /* 强制隐藏 */
   }

   /* --- 2. “Me”页面主内容容器 --- */
   #me-page {
       /* 覆盖掉 .chat-list-page 的 flex 布局，让我们自己控制 */
       /* 【【【核心修复】】】 移除了 display: block; 这一行，以解决首次加载时的覆盖问题 */
       padding: 0;
       overflow-y: auto;
       /* 如果内容超出一屏，允许滚动 */
   }

   #me-page-content {
       padding: 40px 20px;
       /* 上下左右的内边距 */
       display: flex;
       flex-direction: column;
       gap: 15px;
       /* 各个大板块之间的垂直间距 */
   }

   /* --- 3. 顶部个人信息区域 --- */
   .me-profile-section {
       display: flex;
       flex-direction: column;
       align-items: center;
       /* 所有内容居中对齐 */
       gap: 12px;
       /* 头像、名字、签名之间的间距 */
   }

   .me-avatar {
       width: 85px;
       height: 85px;
       border-radius: 50%;
       object-fit: cover;
       border: 2px solid white;
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
       margin-top: -40px;
       cursor: pointer;
   }

   #me-page-name {
       font-size: 16px;
       font-weight: 550;
       color: #2a2a2a;
       margin: 4px 0 0 0;
       /* 名字和头像的间距微调 */
   }

   #me-page-signature {
       font-size: 14px;
       color: #aaa;
       /* 浅灰色 */
       margin: 0;
   }

   /* --- 4. 中间白色胶囊容器 --- */
   .me-settings-plate {
       /* 【【【核心修复】】】 恢复所有胶囊默认的白色背景 */
       background-color: #ffffff;
       border-radius: 28px;
       overflow: hidden;
       /* 确保内部分割线不会超出圆角 */
   }

   /* 【【【全新最终修复】】】 使用相邻兄弟选择器(+)，精确地将第二个胶囊容器的背景去掉 */
   #me-page-content .me-settings-plate+.me-settings-plate {
       background-color: transparent;
       overflow: visible;
   }


   /* 【【【核心新增】】】 为第二个设置板块（个人/个性装扮）添加一个较大的上边距 */
   #me-page-content .me-settings-plate:nth-of-type(2) {
       margin-top: 10px;
       /* 这个值可以微调，它决定了与上方Pay胶囊的距离 */
   }


   .me-settings-item {
       display: flex;
       align-items: center;
       /* 【【【核心修改】】】 我们将统一的 padding 拆分开来，只增加左内边距 */
       padding: 16px 16px 16px 26px;
       /* 上 右 下 左 */
       cursor: pointer;
       position: relative;
       /* 为箭头定位提供基准 */

       /*
             * --- 【【【全新】】】 图标与标题统一右移微调区 ---
             * 说明：
             * - 修改上方 padding 属性的最后一个值 (当前是 26px)，即可将图标和标题整体向右移动。
             * - 将 26px 改为更大的值（如 36px），会向右移动更多。
             * - 将 26px 改为比原始值 16px 更小的值，会向左移动。
            */
   }


   .me-settings-item-icon {
       width: 20px;
       /* 固定图标容器宽度，让图标左对齐 */
       margin-right: 15px;
       /* 图标和文字的间距 */
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .me-settings-item-title {
       font-size: 14px;
       font-weight: 550;
       color: #333333e7;
       /* 你指定的颜色 */
       flex-grow: 1;
       /* 占据所有剩余空间 */
   }

   /* --- 【【【全新】】】 “Pay and Services”箭头位置微调区 --- */
   #me-page-content .me-settings-plate:first-of-type .me-settings-item-arrow {
       /* 
             * 说明：
             * - 修改下面的 top 值可以微调箭头的上下位置。
             * - 正数会将箭头向下移动，负数会将箭头向上移动。
             * - 例如：top: 2px;
            */
       position: relative;
       top: 10px;
   }

   .me-settings-item-arrow {
       position: absolute;
       right: 20px;
       /* 距离右边框的距离 */
       top: 55%;
       transform: translateY(-50%);
   }

   /* --- 【【【全新最终修复】】】 “Pay and Services”箭头位置微调区 --- */
   #me-page-content .me-settings-plate:first-of-type .me-settings-item-arrow {
       /* 
             * 说明：
             * - 修改下面的 0px 可以微调箭头的上下位置。
             * - 正数 (例如 2px) 会将箭头向下移动。
             * - 负数 (例如 -2px) 会将箭头向上移动。
            */
       top: calc(50% + 0px);
   }

   /* --- 5. 原地编辑输入框的样式 (复用你已有的) --- */
   .temp-edit-input {
       background-color: rgba(240, 240, 240, 0.8);
       border: 1px solid #ccc;
       border-radius: 5px;
       padding: 2px 5px;
       font-size: inherit;
       /* 继承父元素的字体大小 */
       font-weight: inherit;
       /* 继承父元素的字体粗细 */
       color: #333;
       text-align: center;
       width: 80%;
       /* 占据父容器80%宽度 */
       box-sizing: border-box;
       outline: none;
       /* 移除默认的蓝色边框 */
   }


   /* 
        ===================================================================
         【【【全新】】】聊天界面右上角头像样式
        ===================================================================
        */
   /* --- 【【【新增】】】聊天界面顶栏右侧头像样式 --- */
   #chat-settings-btn {

       /* 防止图片拉伸变形 */
       /* 继承自 .settings-avatar 的边框和阴影效果，让它更精致 */


       /* 【微调】为了让它更靠右，可以添加相对定位 */
       position: relative;
       margin-right: 16.8px;
       /* 负数向右移动 */
   }

   /* =================================================================== */
   /* 【【【全新】】】聊天界面顶栏右侧图标容器 */
   /* =================================================================== */
   #chat-header-right-icons {
       display: flex;
       align-items: center;
       gap: 5px;
       /* 设置两个图标之间的间距，您可以微调这个数值 */

       /* 微调整个图标组的位置，让它们更靠右 */
       position: relative;
       right: 0px;
       /* --- 【【【核心新增】】】 --- */
       /* 设定一个最小宽度和高度，确保背景胶囊有足够的空间显示 */
       min-width: 90px;
       height: 44px;
   }

   /* --- 单独微调新加的视频图标位置 --- */
   #chat-video-btn {
       position: relative;
       top: 0px;
       left: 10px;
       /* 正数向下, 负数向上 */
   }

   /* =================================================================== */
   /* 【【【全新】】】右上角图标组的背景胶囊样式 */
   /* =================================================================== */
   #chat-header-right-icons::before {
       content: '';
       /* 伪元素必须有这个属性才能显示 */
       position: absolute;
       /* 绝对定位，脱离文档流，浮动起来 */
       z-index: -1;
       /* 将它置于图标下方，作为背景 */

       /* --- 【【【 您可以在这里单独调整胶囊背景的大小和圆角 】】】 --- */
       width: 90px;
       /* 胶囊的宽度 */
       height: 45px;
       /* 胶囊的高度 */
       border-radius: 38px;
       /* 圆角大小，通常是高度的一半 */
       /* ----------------------------------------------------------- */

       /* 将胶囊在父容器(#chat-header-right-icons)中完美居中 */
       top: 50%;
       left: 50%;

       /* --- 【【【 核心修改：您可以在这里单独微调胶囊的位置 】】】 --- */
       /* 
             * 说明：
             * calc(-50% + Xpx) 控制左右移动：
             *   - X为正数 (如 +5px) 会向右移动
             *   - X为负数 (如 -5px) 会向左移动
             * 
             * calc(-50% + Ypx) 控制上下移动：
             *   - Y为正数 (如 +5px) 会向下移动
             *   - Y为负数 (如 -5px) 会向上移动
            */
       transform: translate(calc(-50% + -5px), calc(-50% + 0px));
       /* ------------------------------------------------------------- */

       /* 【核心】以下样式从返回按钮复制而来，以保持视觉统一 */
       background-color: rgba(255, 255, 255, 0.358);
       box-shadow:
           inset -2px 2px 4px rgba(255, 255, 255, 0.119),
           inset 1.22px 0 1.35px rgba(0, 0, 0, 0.11),
           inset 0 1px 1px rgba(255, 255, 255, 0.87),
           inset -1.22px 0 1.35px rgba(0, 0, 0, 0.11),
           inset 0 -1.36px 1px rgba(255, 255, 255, 0.87);
       backdrop-filter: blur(2px) saturate(106%) brightness(1.076);
       -webkit-backdrop-filter: blur(2px) saturate(103%);
   }

   /* =================================================================== */
   /* 【【【全新】】】在多选模式下，隐藏右上角图标组的背景胶囊 */
   /* =================================================================== */
   #chat-interface-screen.multi-select-mode #chat-header-right-icons::before {
       display: none;
   }

   /* =================================================================== */
   /* 【【【全新】】】聊天顶栏中间的AI头像样式 */
   /* =================================================================== */
   #chat-header-ai-avatar {
       /* 1. 基础样式 */
       width: 42px;
       /* 头像大小 */
       height: 42px;
       border-radius: 50%;
       /* 圆形 */
       object-fit: cover;
       /*border: 1.5px solid rgba(255, 255, 255, 0.8);*/
       /* 白色描边 
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);*/
       /* 轻微阴影 */

       /* 2. 绝对定位，实现浮动和独立移动 */
       position: absolute;

       /* 3. 水平居中 */
       left: 50%;
       transform: translateX(-50%);

       /* 4. 初始垂直位置 */
       top: 60px;
   }

   /* 
        ===================================================================
         【【【全新】】】仿微信 (WeChat) 主题专属样式
        ===================================================================
        说明：
        - 以下所有样式仅在 body 标签具有 'theme-wechat' 类名时生效。
        - 它们会覆盖掉默认的 iMessage 样式，实现主题切换。
        - 每个区域都有详细的中文注释，方便您后续自行微调。
        */

   /* --- 1. 图标切换核心逻辑 --- */
   /* 在微信主题下，隐藏所有iOS图标 */
   body.theme-wechat .icon-ios {
       display: none !important;
   }

   /* 在微信主题下，显示所有微信图标 */
   body.theme-wechat .icon-wechat {
       display: block !important;
   }

   /* 隐藏iOS主题下的图标组 */
   body.theme-wechat .icon-set-ios {
       display: none !important;
   }


   /* --- 2. 顶栏 (Header) 改造 --- */

   /* 顶栏容器：从幽灵浮动改回文档流 */
   body.theme-wechat #chat-interface-screen .header {
       position: relative;
       /* 改为 relative，进入文档流 */
       background: rgba(246, 246, 246, 0.92) !important;
       /* 设置为微信顶栏的浅灰色 */
       backdrop-filter: blur(4px) !important;
       -webkit-backdrop-filter: blur(4px) !important;
       /* 移除毛玻璃效果 */
       -webkit-backdrop-filter: none !important;
       border-bottom: 0.6px solid #dcdcdc !important;
       /* 添加细灰色分割线 */
       height: 46px !important;
       /* 调整为微信风格的顶栏高度 */
       padding-top: 45px !important;
       /* 调整内边距以适应新高度 */
   }

   /* 顶栏标题：垂直居中并调整样式 */
   body.theme-wechat #chat-interface-screen .header h1 {
       position: absolute;
       /* 保持绝对定位以实现完美居中 */
       left: 49.1%;
       top: 50%;
       transform: translate(-50%, -50%);
       /* 水平垂直居中 */
       padding-top: 35px;
       /* 增加这个值让标题下移，实现视觉上的垂直居中 */
       color: #202020 !important;
       /* 标题颜色改为深黑色 */
       font-size: 16px !important;
       /* 稍微调大字体 */
       font-weight: 500 !important;
       /* 加粗 */
   }

   /* 隐藏顶栏中间的AI头像 */
   body.theme-wechat #chat-header-ai-avatar {
       display: none !important;
   }

   /* 移除返回按钮的圆形背景 */
   body.theme-wechat #chat-interface-screen .header .header-icon[data-target="chat-list-screen"] {
       background: none !important;
       box-shadow: none !important;
       backdrop-filter: none !important;
       -webkit-backdrop-filter: none !important;
       left: 0;
       /* 位置重置 */
   }

   /* 移除右侧图标组的胶囊背景 */
   body.theme-wechat #chat-header-right-icons::before {
       display: none !important;
   }

   /* 调整右侧图标组的位置 */
   body.theme-wechat #chat-header-right-icons {
       right: -10px;
       /* 向左移动一点 */
   }

   /* --- 3. 消息区域 (Message Container) 调整 --- */
   body.theme-wechat #message-container {
       padding-top: 20px !important;
       /* 减小与顶栏的间距 */
       padding-bottom: 20px !important;
       /* 减小与底栏的间距 */
   }

   /* --- 4. 底栏输入区 (Input Area) 改造 --- */

   /* 底栏容器：从幽灵浮动改回文档流 */
   body.theme-wechat #input-area {
       position: relative !important;
       /* 改为 relative，进入文档流 */
       background: rgba(246, 246, 246, 0.92) !important;
       /* 设置为微信顶栏的浅灰色 */
       backdrop-filter: blur(4px) !important;
       -webkit-backdrop-filter: blur(4px) !important;
       /* 设置为微信底栏的灰色 */
       border-top: 0.5px solid #e2e2e2 !important;
       /* 添加细灰色分割线 */
       padding: 12px 16px !important;
       /* 调整内边距，使其更紧凑 */
       min-height: 60px;
       /* 设置一个最小高度 */
       box-sizing: border-box;
   }

   /* 输入控制行：重置微调样式，并使用flex布局 */
   /* 输入控制行：重置微调样式，并使用flex布局 */
   body.theme-wechat #input-controls-row {
       /* 
            ===========================================================
             【【【全新的】】】微信模式输入框长度（宽度）调节处
            ===========================================================
            说明：
            - 修改下面的 width 值，就可以直接控制输入框的长度。
            - 100% 代表和屏幕一样宽，大于100%（如108%）就会变长。
            */
       width: 85%;
       /* 您可以在这里自由调节 */
       /* ----------------------------------------------------- */

       position: relative;

       /* 
            ===========================================================
             【【【全新的】】】微信模式输入区左右移动调节处
            ===========================================================
            说明：
            - 修改下面的 left 值，就可以将加长后的输入框区域整体左右移动。
            - 负数向左移（比如-20px），正数向右移（比如5px）。
            */
       left: -15px;
       /* 您可以在这里自由调节 */
       /* -------------------------------------------------------- */

       top: 0 !important;
       transform: none !important;
       gap: 8px;
       align-items: flex-end;
   }

   /* 输入框本体改造 */
   body.theme-wechat #message-input {
       background-color: #ffffff !important;
       border-radius: 5px !important;
       box-shadow: none !important;
       backdrop-filter: none !important;
       -webkit-backdrop-filter: none !important;
       color: #000000 !important;
       font-size: 16px !important;

       /* 
            ===========================================================
             【【【核心修复】】】解决文字被遮挡 & 统一控制内边距
            ===========================================================
            说明：
            - 我们将 padding 拆分为四个值：上、右、下、左。
            - 将第三个值（下内边距）设置得比第一个值（上内边距）稍大一点，
              就能解决最后一行文字被遮挡的问题。
            */
       top: -7.8px !important;
       padding: 5.5px 5px 8px 8px !important;
       /* 上 右 下 左 */

       /* 
            ===========================================================
             【【【全新的】】】微信模式输入框初始高度调节处
            ===========================================================
            说明：
            - 修改下面的 min-height 值，就可以控制输入框的初始高度。
            - 数值越大，输入框就越高。单位是 px (像素)。
            */
       min-height: 10px !important;
       /* 您可以在这里自由调节 */
       /* ----------------------------------------------------- */
   }

   /* 输入框提示文字颜色 (改为透明以隐藏) */
   body.theme-wechat #message-input::placeholder {
       color: transparent !important;
   }

   /* 【【【全新增补】】】 */
   /* 强制修改微信主题下，视频图标的颜色，使其与“更多”按钮统一 */
   body.theme-wechat #chat-video-btn svg path {
       fill: #353333 !important;
       /* 这个颜色值与“更多”按钮的图标颜色一致 */
   }

   /* --- 5. 输入区按钮改造 (全新 V2 - 绝对定位方案) --- */

   /* 
        ===========================================================
         【【【全新的】】】微信模式输入区整体左右移动调节处
        ===========================================================
        说明：
        - 修改下面 translateX(0px) 中的 0px 这个值，就可以将整个
          输入区域（包括输入框和所有按钮）进行整体的左右平移。
        - 负数 (例如: -10px) 会将整个区域向左移动。
        - 正数 (例如: 10px) 会将整个区域向右移动。
        */
   body.theme-wechat #input-controls-row {
       transform: translateX(-10px) !important;
   }

   /* ----------------------------------------------------- */

   /* 将输入框本体拉长，并为右侧的浮动按钮留出空间 */
   body.theme-wechat #message-input {
       padding-right: -4px !important;
       /* 核心：在右侧留出88px的空白区域 */
   }

   /* 移除所有按钮的圆形背景 */
   body.theme-wechat #more-btn::before,
   body.theme-wechat #generate-btn::before,
   body.theme-wechat #send-btn::before {
       display: none !important;
   }

   /* 移除“更多”按钮的旋转效果 */
   body.theme-wechat #more-btn.rotated {
       transform: none !important;
   }

   /* 微信主题下的“语音”按钮 (原more-btn) - 改回文档流定位 */
   body.theme-wechat #more-btn {
       left: 5px !important;
       top: -4px !important;
   }

   /* 【核心修改】将“表情”和“加号”按钮改为绝对定位，让它们浮动起来 */
   body.theme-wechat #generate-btn,
   body.theme-wechat #send-btn {
       position: absolute !important;
       /* 核心：变为浮动元素 */
       bottom: 4.3px !important;
   }

   /* 精确定位“表情”按钮的位置 */
   body.theme-wechat #generate-btn {
       right: -48px;
       /* 距离右边50px */
   }

   /* 精确定位“加号”按钮的位置 */
   body.theme-wechat #send-btn {
       right: -84px;
       /* 距离右边8px */
   }

   /* 【【【全新增补】】】为所有主题的文本内容应用换行 */
   .message-text-content {
       white-space: pre-wrap;
   }


   /* 
===================================================================
 【【【全新】】】仿微信 (WeChat) 主题专属样式
===================================================================
*/

   /* --- 1. 强制显示所有头像，并移除描边和阴影 --- */
   body.theme-wechat .user-wrapper+.user-wrapper .chat-avatar,
   body.theme-wechat .assistant-wrapper+.assistant-wrapper .chat-avatar {
       visibility: visible;
       /* 强制显示连续消息的头像 */
   }

   body.theme-wechat .chat-avatar {
       border: none !important;
       /* 移除头像描边 */
       box-shadow: none !important;
       /* 移除头像阴影 */
   }

   /* --- 1.5. 聊天界面背景色 --- */
   body.theme-wechat #chat-interface-screen {
       background-color: #f3f3f3 !important;
   }

   /* --- 2. 气泡样式改造：颜色、形状 --- */
   body.theme-wechat .message-bubble {
       border-radius: 5px;
       /* 设置气泡的圆角值 */
       color: #333333;
       /* 统一将字体颜色设为黑色 */
       padding-top: 9.8px;
       /* 【新增】单独控制上内边距 */
       padding-bottom: 9.8px;
       /* 【新增】单独控制下内边距 */
   }

   /* 对方(AI)的气泡：白色背景 */
   body.theme-wechat .assistant-wrapper .message-bubble {
       background-color: #ffffff;
       border: 0.15px solid #cccccc2b;
       box-shadow: 0 0.4px 2px rgba(0, 0, 0, 0.01);

   }

   /* 你(用户)的气泡：绿色背景 */
   body.theme-wechat .user-wrapper .message-bubble {
       background-color: #a5f067;
       border: 0.15px solid #cccccc2b;
       box-shadow: 0 0.4px 2px rgba(0, 0, 0, 0.01);
   }

   /* --- 3. 气泡小尾巴改造：用CSS画一个圆角三角形 --- */

   /* 移除旧的复杂尾巴样式 */
   body.theme-wechat .message-bubble::after {
       clip-path: none;
       transform: none;
       z-index: 0;
       /* 确保尾巴在气泡后面 */
   }

   /* 对方(AI)的尾巴，在左边 */
   body.theme-wechat .assistant-wrapper .message-bubble::after {
       content: "";
       position: absolute;
       width: 10px;
       /* 尾巴的尺寸 */
       height: 10px;
       /* 尾巴的尺寸 */
       background: inherit;
       /* 自动继承气泡的背景色 */
       top: 15px;
       /* 尾巴的垂直位置 */
       left: -5px;
       /* 让尾巴的一半伸出去 */
       transform: rotate(45deg);
       /* 旋转成菱形 */
       border-radius: 2px;
       /* 给尾巴一点点圆角 */
   }

   /* 你(用户)的尾巴，在右边 */
   body.theme-wechat .user-wrapper .message-bubble::after {
       content: "";
       position: absolute;
       width: 10px;
       height: 10px;
       background: inherit;
       top: 15px;
       right: -5px;
       /* 定位到右侧 */
       transform: rotate(45deg);
       border-radius: 2px;
   }

   /* --- 4. 微信模式下，隐藏时间戳、增加间距、加粗字体 --- */

   /* 隐藏时间戳 */
   body.theme-wechat .message-timestamp {
       display: none !important;
   }

   /* 增加每条消息之间的垂直间距 */
   body.theme-wechat .message-wrapper {
       margin-bottom: 18px;
       /* 您可以修改这个 18px 来调整间距大小 */
   }


   body.theme-wechat #message-container .message-bubble,
   body.theme-wechat #message-container .message-bubble span {
       font-weight: 550 !important;
       /* 550是中等粗细，您可以改为 600 或 700 更粗 */
   }


   /* --- 【【【全新增补】】】为pop主题的气泡文字设置同样的加粗效果 --- */
   body.theme-pop #message-container .message-bubble,
   body.theme-pop #message-container .message-bubble span {
       font-weight: 550 !important;
   }

   /* 【【【全新增补】】】为微信主题的文本内容也加上换行效果 */
   body.theme-wechat .message-text-content {
       white-space: pre-wrap;
   }


   /* --- 6. 微信主题下的引用消息样式 (V3 - 动态颜色最终版) --- */

   /* a. (保持不变) 把包含引用的气泡“架子”掏空 */
   body.theme-wechat .message-bubble.default-style-reply {
       display: flex;
       flex-direction: column;
       background-color: transparent !important;
       padding: 0 !important;
       border: none !important;
       box-shadow: none !important;
   }

   body.theme-wechat .message-bubble.default-style-reply::after {
       display: none !important;
   }

   /* b. (保持不变) 重新为“主消息文本”添加气泡样式 */
   body.theme-wechat .message-bubble.default-style-reply .message-text {
       padding: 9.8px 14px;
       border-radius: 5px;
       position: relative;
       width: fit-content;
       color: #333333;
       /* 确保字体颜色正确 */
   }

   body.theme-wechat .user-wrapper .message-bubble.default-style-reply .message-text {
       background-color: #acf372;
       align-self: flex-end;
   }

   body.theme-wechat .user-wrapper .message-bubble.default-style-reply .message-text::after {
       content: "";
       position: absolute;
       width: 10px;
       height: 10px;
       background: inherit;
       top: 10px;
       right: -5px;
       transform: rotate(45deg);
       border-radius: 1px;
       z-index: -1;
   }

   body.theme-wechat .assistant-wrapper .message-bubble.default-style-reply .message-text {
       background-color: #ffffff;
       align-self: flex-start;
   }

   body.theme-wechat .assistant-wrapper .message-bubble.default-style-reply .message-text::after {
       content: "";
       position: absolute;
       width: 10px;
       height: 10px;
       background: inherit;
       top: 10px;
       left: -5px;
       transform: rotate(45deg);
       border-radius: 1px;
       z-index: -1;
   }

   /* c. 【【【核心修改】】】为“引用框”设置全新的、包含动态颜色逻辑的样式 */
   body.theme-wechat .reply-content-wrapper {
       order: 2;
       /* 【默认样式 - 有壁纸时】半透明深色背景 */
       background-color: rgba(249, 249, 249, 0.597) !important;
       color: #555;
       /* 深灰色文字，保证对比度 */

       /* --- 布局和尺寸样式 (保持不变) --- */
       padding: 9px 12px !important;
       border-radius: 5px !important;
       margin-top: 8px;
       font-size: 13.5px;
       width: fit-content;
       max-width: 100% !important;

       /* --- 长文截断功能 (保持不变) --- */
       display: -webkit-box;
       -webkit-box-orient: vertical;
       -webkit-line-clamp: 2;
       overflow: hidden;
       text-overflow: ellipsis;
       word-break: break-all;
       line-height: 1.4;
       max-height: 2.63em;
   }

   /* d. (保持不变) 引用文本的作者/内容样式 */
   body.theme-wechat .reply-content-wrapper .reply-author,
   body.theme-wechat .reply-content-wrapper .reply-text {
       display: inline;
   }

   /* e. 【【【核心新增】】】当没有壁纸时，覆盖引用框的颜色 */
   body.theme-wechat #chat-interface-screen.no-wallpaper .reply-content-wrapper {
       background-color: #ebebeb !important;
       /* 恢复为不透明的浅灰色 */
       color: #888 !important;
       /* 恢复为颜色稍浅的文字 */
   }

   /* f. (保持不变) 用户侧的引用框也需要靠右 */
   body.theme-wechat .user-wrapper .reply-content-wrapper {
       align-self: flex-end;
   }

   /* d. 实现引用文本的“最多两行省略号”效果 */
   body.theme-wechat .reply-content-wrapper .reply-author,
   body.theme-wechat .reply-content-wrapper .reply-text {
       display: inline;
       /* 让作者和内容能在一行显示 */
   }

   body.theme-wechat #message-container {
       padding-bottom: 2px !important;
       /* 减小底部的内边距 */
   }

   /* 
===================================================================
 【【【全新修正版】】】仿 pop 主题专属样式
===================================================================
*/

   /* --- 1. 图标切换核心逻辑 --- */
   /* 在pop主题下，隐藏所有iOS和微信图标 */
   body.theme-pop .icon-ios,
   body.theme-pop .icon-wechat {
       display: none !important;
   }

   /* 在pop主题下，显示所有pop图标 */
   body.theme-pop .icon-pop {
       display: block !important;
   }

   /* 隐藏iOS主题下的图标组 */
   body.theme-pop .icon-set-ios {
       display: none !important;
   }


   /* --- 2. 顶栏 (Header) 改造 (基于微信主题) --- */

   /* 顶栏容器：保持微信主题的文档流布局和背景 */
   body.theme-pop #chat-interface-screen .header {
       position: relative;
       background: #fcfcfc !important;
       backdrop-filter: blur(4px) !important;
       -webkit-backdrop-filter: blur(4px) !important;
       border-bottom: 0.6px solid #dcdcdc !important;
       height: 46px !important;
       padding-top: 45px !important;
   }

   /* 顶栏标题：保持微信主题的居中和样式 */
   body.theme-pop #chat-interface-screen .header h1 {
       position: absolute;
       left: 49.1%;
       top: 50%;
       transform: translate(-50%, -50%);
       padding-top: 35px;
       color: #202020 !important;
       font-size: 16px !important;
       font-weight: 500 !important;
   }

   /* 隐藏顶栏中间的AI头像 */
   body.theme-pop #chat-header-ai-avatar {
       display: none !important;
   }

   /* 移除返回按钮的圆形背景，并强制显示图标 */
   body.theme-pop #chat-interface-screen .header .header-icon[data-target="chat-list-screen"] {
       background: none !important;
       box-shadow: none !important;
       backdrop-filter: none !important;
       -webkit-backdrop-filter: none !important;
       left: 0;
   }

   /* 【修复】强制显示返回箭头的iOS图标 */
   body.theme-pop #chat-interface-screen .header .header-icon[data-target="chat-list-screen"] .icon-ios {
       display: block !important;
   }

   /* 【pop主题需求1 & 箭头替换】显示pop主题的新箭头，并隐藏其他箭头 */
   body.theme-pop #chat-interface-screen .header .header-icon[data-target="chat-list-screen"] .icon-pop {
       display: block !important;
   }

   body.theme-pop #chat-interface-screen .header .header-icon[data-target="chat-list-screen"] .icon-ios,
   body.theme-pop #chat-interface-screen .header .header-icon[data-target="chat-list-screen"] .icon-wechat {
       display: none !important;
   }

   /* 移除右侧图标组的胶囊背景 */
   body.theme-pop #chat-header-right-icons::before {
       display: none !important;
   }

   /* --- 【pop主题需求2 & 3】改造右上角“更多”按钮为头像 --- */
   /* 隐藏摄像头图标 */
   body.theme-pop #chat-video-btn {
       display: none !important;
   }

   /* 将“更多”按钮变成一个圆形的头像 */
   body.theme-pop #chat-settings-btn {
       width: 40px !important;
       height: 40px !important;
       border-radius: 50% !important;
       background-size: cover !important;
       background-position: center !important;
       /* 通过背景图来显示头像 */
       background-image: var(--pop-theme-avatar-url);
       position: relative !important;
       top: 4px !important;
       right: -30px !important;
       /* 向左移动一点以对齐 */
       border: none !important;
       /* 确保没有多余边框 */
       box-shadow: none !important;
       /* 确保没有阴影 */
   }

   /* 隐藏按钮内部原有的SVG图标 */
   body.theme-pop #chat-settings-btn svg {
       display: none !important;
   }


   /* --- 3. 消息区域 (Message Container) 调整 --- */
   body.theme-pop #message-container {
       padding-top: 20px !important;
       /* 【【【新增功能2：调整pop主题底部距离】】】 */
       /* 我将底部内边距从20px增加到了50px，你可以根据喜好修改这个数值 */
       padding-bottom: 14px !important;
   }

   /* --- 4. 底栏输入区 (Input Area) 改造 (基于微信主题) --- */

   /* 底栏容器：保持微信主题的文档流布局和背景 */
   body.theme-pop #input-area {
       position: relative !important;
       background: #fcfcfc !important;
       backdrop-filter: blur(4px) !important;
       -webkit-backdrop-filter: blur(4px) !important;
       border-top: 0.5px solid #e2e2e2 !important;
       padding: 12px 16px !important;
       min-height: 60px;
       box-sizing: border-box;
   }

   /* 输入控制行：保持微信主题的布局 */
   body.theme-pop #input-controls-row {
       width: 85%;
       position: relative;
       left: -15px;
       top: 0 !important;
       transform: translateX(-10px) !important;
       gap: 8px;
       align-items: flex-end;
   }

   /* 【pop主题需求4】输入框本体改造 */
   body.theme-pop #message-input {
       background-color: #ffffff !important;
       border-radius: 22px !important;
       /* 加大圆角值 */
       border: 1.4px solid #e0e0e0 !important;
       /* 添加浅灰色描边 */
       box-shadow: none !important;
       backdrop-filter: none !important;
       -webkit-backdrop-filter: none !important;
       color: #000000 !important;
       font-size: 16px !important;
       top: -7px !important;
       padding: 5px 5px 8px 8px !important;
       min-height: 2px !important;
   }

   body.theme-pop #message-input::placeholder {
       color: #c7c7c7 !important;
       font-size: 14px !important;
       /* 修改为您需要的大小 */
       /* 【【【核心新增】】】 */
       padding-top: 3px !important;
       /* 增加顶部内边距，让文字下移，实现垂直居中 */
       padding-left: 2px !important;
       /* 稍微增加左边距，让文字右移一点 */
       position: relative;
       /* 开启相对定位，确保padding生效 */
   }

   /* --- 5. 输入区按钮改造 (保持微信主题的位置逻辑) --- */

   /* 将输入框本体拉长，为右侧的浮动按钮留出空间 */
   body.theme-pop #message-input {
       padding-right: -4px !important;
   }

   /* 移除所有按钮的圆形背景 */
   body.theme-pop #more-btn::before,
   body.theme-pop #generate-btn::before,
   body.theme-pop #send-btn::before {
       display: none !important;
   }

   /* 移除“更多”按钮的旋转效果 */
   body.theme-pop #more-btn.rotated {
       transform: none !important;
   }

   /* 按钮位置 (与微信主题一致) */
   body.theme-pop #more-btn {
       left: 5px !important;
       top: -4px !important;
   }

   body.theme-pop #generate-btn,
   body.theme-pop #send-btn {
       position: absolute !important;
       bottom: 4.3px !important;
   }

   body.theme-pop #generate-btn {
       right: -48px;
   }

   body.theme-pop #send-btn {
       right: -84px;
   }

   /* --- 6. 【pop主题需求5】气泡样式改回日间模式 --- */

   /* 清理掉微信主题的气泡颜色和小尾巴 */
   body.theme-pop .message-bubble {
       border: none !important;
       box-shadow: none !important;
   }

   body.theme-pop .message-bubble::after {
       display: block !important;
       /* 确保尾巴显示 */
       clip-path: path('M-12,3 C5,4 -2,2 17,7 C5,13 5,12 0.9,18.8 Z') !important;
       z-index: -1 !important;
   }

   /* 复制日间模式的AI气泡颜色和尾巴 */
   body.theme-pop .assistant-wrapper .message-bubble {
       background-color: #ffffff !important;
       color: #2e2e2e !important;
       font-weight: 500 !important;
       font-size: 13.9px !important;
       /* --- 【修正】对方气泡：右上角为锐角，并增加内边距 --- */
       border-radius: 16px 19px 19px 19px !important;
       padding-right: 16px !important;
       padding-left: 14px !important;
       /* 为“勾+时间戳”留出更宽的右侧空间 */
       position: relative;
       /* 确保小尾巴能正确定位 */
       padding-top: 7px !important;
       padding-bottom: 7.5px !important;
   }

   body.theme-pop .assistant-wrapper .message-bubble::after {
       left: -9.3px !important;
       bottom: 1.6px !important;
       transform: rotate(68deg) scaleX(-0.9) !important;
   }

   /* 复制日间模式的用户气泡颜色和尾巴 */
   body.theme-pop #message-container .user-wrapper .message-bubble {
       background-color: #fedae8;
       color: #2e2e2e;
       font-size: 13.6px !important;
       font-weight: 500 !important;
       /* --- 【新增】我方气泡：左上角为锐角，并增加内边距 --- */
       border-radius: 19px 14px 19px 19px;
       padding-right: 15px;
       padding-left: 15px;
       /* 为“勾+时间戳”留出更宽的右侧空间 */
       position: relative;
       /* 确保小尾巴能正确定位 */
       padding-top: 7px;
       padding-bottom: 7.5px;
       /* 为时间戳留出下方空间 */
   }

   body.theme-pop .user-wrapper .message-bubble::after {
       right: -9.7px;
       bottom: 3.7px !important;
       transform: rotate(-68deg) scaleX(0.9) !important;
   }

   /* 还原日间模式的时间戳和间距 */
   body.theme-pop .message-timestamp {
       display: block !important;
   }

   body.theme-pop .message-wrapper {
       margin-bottom: 10px !important;
   }

   body.theme-pop #message-container .message-bubble {
       font-weight: normal !important;
       /* 恢复正常字体粗细 */
   }

   /* --- 【【【全新】】】pop主题返回箭头旁的“消息”文字样式 --- */
   body:not(.theme-pop) #pop-theme-header-title {
       display: none;
       /* 在非pop主题下，彻底隐藏这个文字 */
   }

   body.theme-pop #pop-theme-header-title {
       display: block;
       /* 在pop主题下，让它显示出来 */
       position: absolute;
       /* 开启绝对定位，让它浮动起来 */
       left: 37px;
       /* 距离左侧的距离，您可以微调这个值 */
       top: 56px;
       /* 距离顶部的距离，您可以微调这个值 */
       font-size: 15.4px;
       /* 与标题一样的大小 */
       color: #f855a7;
       /* 您指定的颜色 */
       font-weight: 550;
       /* 您指定的粗细 */
       pointer-events: none;
       /* 让它变成“幽灵”，不影响下方元素的点击 */
   }

   /* --- 【【【新增】】】pop主题下，强制显示所有头像 --- */
   body.theme-pop .user-wrapper+.user-wrapper .chat-avatar,
   body.theme-pop .assistant-wrapper+.assistant-wrapper .chat-avatar {
       visibility: visible;
   }


   /* =================================================================== */
   /* 【【【全新 V5.5 最终修复】】】 照片消息样式彻底分离（pop主题兼容版） */
   /* =================================================================== */

   /* --- 1. “拍摄”功能（翻转卡片）的包裹层样式 --- */
   .message-bubble.photo-bubble {
       width: 140px;
       height: 140px;
       padding: 0 !important;
       background: none !important;
       border: none !important;
       box-shadow: none !important;
       perspective: 1000px;
       cursor: pointer;
   }

   /* --- 2. “照片”功能（真实图片）的包裹层样式 --- */
   .message-bubble.real-photo-bubble {
       background: none !important;
       padding: 0 !important;
       border: none !important;
       box-shadow: none !important;
       max-width: 180px;
       width: auto;
       height: auto;
   }

   /* 3. 隐藏所有照片类消息的小尾巴 */
   .message-bubble.photo-bubble::after,
   .message-bubble.real-photo-bubble::after {
       display: none !important;
   }

   /* 4. 为聊天中的真实图片本身设置样式 */
   .photo-in-chat {
       max-width: 100%;
       max-height: 280px;
       border-radius: 5px;
       object-fit: cover;
       display: block;
       cursor: pointer;
   }

   /* 5. 【主题兼容修复】强制让两种照片消息在 pop 和 微信 主题下隐藏包裹层背景 */
   body.theme-wechat .message-bubble.photo-bubble,
   body.theme-pop .message-bubble.photo-bubble,
   body.theme-wechat .message-bubble.real-photo-bubble,
   body.theme-pop .message-bubble.real-photo-bubble {
       background: none !important;
   }

   /* 6. 【【【pop主题核心修复】】】 */
   /* 强制覆盖pop主题的flex布局和padding，让照片类消息恢复为普通块级容器 */
   body.theme-pop .message-bubble.photo-bubble,
   body.theme-pop .message-bubble.real-photo-bubble {
       display: block !important;
       padding: 0 !important;
   }

   /* 7. 【【【pop主题核心修复】】】 */
   /* 强制隐藏照片类消息在pop主题下多出来的内部时间戳 */
   body.theme-pop .message-bubble.photo-bubble .internal-timestamp-wrapper,
   body.theme-pop .message-bubble.real-photo-bubble .internal-timestamp-wrapper {
       display: none !important;
   }

   /* 8. 在微信和pop主题下，隐藏外部时间戳（这段保留） */
   body.theme-wechat .message-wrapper:has(.photo-bubble) .message-timestamp,
   body.theme-pop .message-wrapper:has(.photo-bubble) .message-timestamp,
   body.theme-wechat .message-wrapper:has(.real-photo-bubble) .message-timestamp,
   body.theme-pop .message-wrapper:has(.real-photo-bubble) .message-timestamp {
       display: none !important;
   }

   /* 
        ===================================================================
         【【【全新 V2 - 最终修正版】】】pop主题内部时间戳专属样式
        ===================================================================
        */

   /* 1. 在pop主题下，强制隐藏掉原来在气泡外的时间戳 */
   body.theme-pop .message-timestamp {
       display: none !important;
   }



   /* 3. 默认隐藏所有气泡内部的时间戳容器 (保持不变) */
   .internal-timestamp-wrapper {
       display: none;
   }

   /* 4. 当pop主题激活时，让气泡变成flex布局 (保持不变) */
   body.theme-pop .message-bubble {
       display: flex;
       justify-content: space-between;
       align-items: flex-end;
       gap: 8px;
   }

   /* 5. 让消息文字可以自动换行 (保持不变) */
   body.theme-pop .message-text-content {
       word-break: break-word;
       white-space: pre-wrap;
       /* <-- 核心：在这里添加换行属性 */
   }

   /* 6. 当pop主题激活时，显示内部时间戳容器 (保持不变) */
   body.theme-pop .internal-timestamp-wrapper {
       display: flex;
       align-items: center;
       gap: 4px;
       flex-shrink: 0;
       position: relative;
   }

   /* 7. 【【【核心修改】】】把我方(user)的时间戳和勾的顺序反转 */
   body.theme-pop .user-wrapper .internal-timestamp-wrapper {
       flex-direction: row-reverse;
       /* 这一行代码就把时间和勾的位置换过来了！ */
   }

   /* 8. 设置内部时间戳的文字样式 (保持不变) */
   body.theme-pop .internal-timestamp {
       font-size: 9.9px !important;
       white-space: nowrap;
   }

   /* 9. 设置“我方”时间戳颜色 (保持不变) */
   body.theme-pop .user-wrapper .internal-timestamp {
       color: #c9658c;
   }

   /* 10. 设置“对方”时间戳颜色 (保持不变) */
   body.theme-pop .assistant-wrapper .internal-timestamp {
       color: #9e9e9e;
   }

   /* 11. 隐藏“对方”气泡里的勾选图标 (保持不变) */
   body.theme-pop .assistant-wrapper .internal-timestamp-wrapper svg {
       display: none;
   }

   /* --- 【【【全新 V3.2.1 修复】】】确保编辑时消息气泡能自动换行 --- */
   .message-bubble[contenteditable="true"] {
       /* 核心：覆盖掉 width: fit-content，让 max-width 正常生效 */
       width: auto;
       /* 确保文字可以正常断行和换行 */
       white-space: normal;
       word-wrap: break-word;
       /* 优化体验：在编辑时显示文本光标 */
       cursor: text;
   }

   /* 
        ===========================================================
         【【【全新的】】】pop主题时间戳独立微调区
        ===========================================================
        */

   /* --- 我方(user)的时间戳微调 --- */
   body.theme-pop .user-wrapper .internal-timestamp-wrapper {
       /* 
             * 说明：
             * - 修改 top 值可以上下移动 (正数向下, 负数向上)。
             * - 修改 right 值可以左右移动 (正数向左, 负数向右)。
            */
       top: 2px;
       /* 上下位置，你可以在这里修改 */
       right: -8.5px;
       /* 左右位置，你可以在这里修改 */
   }

   /* --- 对方(ai)的时间戳微调 --- */
   body.theme-pop .assistant-wrapper .internal-timestamp-wrapper {
       /* 
             * 说明：
             * - 修改 top 值可以上下移动 (正数向下, 负数向上)。
             * - 修改 right 值可以左右移动 (正数向左, 负数向右)。
            */
       top: 2px;
       /* 上下位置，你可以在这里修改 */
       right: -2px;
       /* 左右位置，我帮你稍微向右移了一点，你可以在这里修改 */
   }

   /* 【【【pop主题专属】】】移除头像描边和阴影 */
   body.theme-pop .chat-avatar {
       border: none !important;
       box-shadow: none !important;
   }



   /* 
        ===================================================================
         【【【pop主题专属 - V4 最终修复版】】】区分连续消息与换人消息的间距
        ===================================================================
        */

   /* --- 仅在pop主题 & 关闭头像时，调整消息区的左右内间距 (此部分保持不变) --- */
   body.theme-pop #message-container.no-avatars {
       padding-left: 5px !important;
       padding-right: 5px !important;
   }

   /* --- 【【【核心修复1：更精确的紧凑间距】】】 --- */
   /* 规则：仅当一个“普通文本消息”紧跟着另一个来自同一人的“普通文本消息”时，才应用紧凑间距。*/
   body.theme-pop #message-container.no-avatars .user-wrapper:not(:has(.sticker-in-chat, .photo-bubble, .real-photo-bubble, .message-bubble-voice, .message-bubble-transfer, .couple-status-card))+.user-wrapper:not(:has(.sticker-in-chat, .photo-bubble, .real-photo-bubble, .message-bubble-voice, .message-bubble-transfer, .couple-status-card)),
   body.theme-pop #message-container.no-avatars .assistant-wrapper:not(:has(.sticker-in-chat, .photo-bubble, .real-photo-bubble, .message-bubble-voice, .message-bubble-transfer, .couple-status-card))+.assistant-wrapper:not(:has(.sticker-in-chat, .photo-bubble, .real-photo-bubble, .message-bubble-voice, .message-bubble-transfer, .couple-status-card)) {
       margin-top: -5px !important;
   }

   /* --- 【【【核心修复2：更全面的较大间距】】】 --- */
   /* 规则：只要出现“换人说话” 或 “任何特殊消息（卡片、图片等）”，就应用较大间距。*/
   body.theme-pop #message-container.no-avatars .user-wrapper+.assistant-wrapper,
   body.theme-pop #message-container.no-avatars .assistant-wrapper+.user-wrapper,
   body.theme-pop #message-container.no-avatars .message-wrapper:has(.sticker-in-chat, .photo-bubble, .real-photo-bubble, .message-bubble-voice, .message-bubble-transfer, .couple-status-card),
   body.theme-pop #message-container.no-avatars .message-wrapper+.message-wrapper:has(.sticker-in-chat, .photo-bubble, .real-photo-bubble, .message-bubble-voice, .message-bubble-transfer, .couple-status-card) {
       margin-top: 15px !important;
   }

   /* --- 【【【核心修复3：统一所有情况下的间距】】】 --- */
   /* 规则：为所有主题下，换人或出现情侣卡片时，提供一个基础的、非紧凑的间距。这条规则会被上面的 .no-avatars 规则覆盖，但在显示头像时生效。*/
   body.theme-pop .user-wrapper+.assistant-wrapper,
   body.theme-pop .assistant-wrapper+.user-wrapper,
   body.theme-pop .message-wrapper.is-couple-card-wrapper {
       margin-top: 10px !important;
   }


   /* 【【【pop主题专属】】】修复气泡宽度和文字换行问题 (浮动方案) */
   body.theme-pop .message-bubble {
       display: block !important;
       /* 保持块状，让宽度自适应 */
       position: relative !important;
       /* 保持相对定位 */
       padding-right: 14px !important;
       /* 只需要一个标准的气泡右边距，不再需要巨大留白 */
   }

   body.theme-pop .internal-timestamp-wrapper {
       float: right;
       /* 【核心】让时间戳向右浮动，文字会自动环绕 */
       clear: both;
       /* 防止影响下方元素 */
       margin-top: 4px;
       /* 与上方文字的最小距离 */
       margin-left: 12px;
       /* 与左侧文字的最小距离 */
       position: relative;
       /* 同样开启相对定位，为了下一步的微调 */
   }


   /* 
        ===================================================================
         【【【全新 V3 - 纯粹渐显冒出动画】】】消息气泡入场动画
        ===================================================================
        */

   /* 1. 定义一个纯粹的“渐显+上移”动画 */
   @keyframes message-fade-in-up {
       0% {
           opacity: 0;
           /* 开始时，完全透明 */
           transform: translateY(21px);
           /* 从下方15px处开始 (你可以修改这个值) */
       }

       80% {
           opacity: 0.89;
           /* 动画中途就完全不透明 */
       }

       100% {
           opacity: 1;
           /* 结束时，完全不透明 */
           transform: translateY(0);
           /* 移动到最终位置 */
       }
   }


   /* 2. 创建一个调用新动画的CSS类 */
   .message-pop-in {
       /* 
             * 说明：
             * - message-fade-in-up: 我们新动画的名字。
             * - 0.35s: 动画时长，你可以改大让它变慢，改小让它变快。
             * - ease-out: 动画节奏，开始快，结束慢，感觉流畅自然。
            */
       animation: message-fade-in-up 0.32s ease-out forwards;
   }

   /* 
        ===================================================================
         【【【V5 补充修正】】】设置正确的动画缩放锚点
        ===================================================================
        */

   /* --- 为 AI方（左侧）的气泡设置左下角为动画锚点 --- */
   .assistant-wrapper.message-pop-in {
       transform-origin: bottom left;
   }

   /* --- 为 我方（右侧）的气泡设置右下角为动画锚点 --- */
   .user-wrapper.message-pop-in {
       transform-origin: bottom right;
   }

   /* --- 【【【全新】】】pop主题顶栏“在线”状态文字样式 --- */
   #chat-contact-status {
       display: none;
       /* 默认隐藏 */
   }

   body.theme-pop #chat-contact-status {
       display: block;
       /* 仅在pop主题下显示 */
       position: absolute;
       left: 50%;
       transform: translateX(-50%);
       /* 水平居中 */

       /* 
            ===========================================================
             【【【全新的】】】“在线”状态独立微调区
            ===========================================================
            说明：
            - 在这里修改 top 和 left 值来单独移动“在线”这两个字。
            - top:  数值越大越往下。
            - left: 在已经居中的基础上，正数向右，负数向左。
            */
       top: 73px;
       /* 您可以在这里修改上下位置 */
       left: calc(50% + -3px);
       /* 您可以在这里修改左右位置 */

       /* --- 您也可以在这里修改字体样式 --- */
       font-size: 11.5px !important;
       /* 字体大小 */
       color: #f855a7;
       /* 玫红色 */
       font-weight: 500;
       /* 字体粗细 */
   }

   /* 
        ===========================================================
         【【【全新的】】】pop主题顶栏标题独立微调区
        ===========================================================
        */
   body.theme-pop #chat-interface-screen .header h1 {
       /* 
             * 说明：
             * - 在这里修改 top 值来单独移动对方的名字。
             * - 数值越大，名字越往下移动。
             * - 数值越小（甚至为负数），名字越往上移动。
            */
       top: 44%;
       /* 您可以在这里修改这个值 */
   }

   /* 
        ===================================================================
         【【【全新】】】pop主题专属引用样式
        ===================================================================
        */

   /* 1. 将包含引用的气泡设为flex布局，让内部元素垂直排列 */
   body.theme-pop .message-bubble.has-quote {
       display: flex;
       flex-direction: column;
       gap: 8px;
       /* 引用区和正文区的垂直间距 */
   }

   /* 2. 引用区域的容器，核心是左边的竖线 */
   body.theme-pop .pop-theme-quote-wrapper {
       border-left: 2px solid #f855a7;
       /* 【您可以在这里修改】竖线的粗细和颜色 */

       /* 
            ===========================================================
             【【【全新的】】】引用区微调区
            ===========================================================
            */
       /* 通过调整下外边距来控制与下方正文的距离 */
       margin-bottom: 5px;
       /* 增加这个值，与正文的间距会变大 */

       /* 通过调整上下内边距来控制竖线的高度 */
       padding-top: -18px;
       /* 增加这个值，竖线会向上伸长 */
       padding-bottom: -18px;
       /* 增加这个值，竖线会向下伸长 */

       /* 通过调整左内边距来控制竖线和引用文字的距离 */
       padding-left: 6px;
   }



   /* 3. 引用作者的名字样式 */
   body.theme-pop .pop-theme-quote-author {
       font-size: 13px;
       font-weight: 550;
       /* 加粗 */
       color: inherit;
       /* 继承气泡的字体颜色 */
       margin-bottom: -1px;
       /* 名字和内容的间距 */
   }

   /* 4. 引用内容的样式，核心是“最多两行省略号” */
   body.theme-pop .pop-theme-quote-content {
       font-size: 12.6px;
       color: inherit;
       /* 继承气泡的字体颜色 */


       /* --- 以下是实现“最多两行省略号”的关键代码 --- */
       display: -webkit-box;
       -webkit-box-orient: vertical;
       -webkit-line-clamp: 2;
       overflow: hidden;
       text-overflow: ellipsis;
       word-break: break-all;
       line-height: 1.4;
       /* 调整行高，防止文字重叠 */
       max-height: 2.63em;
       /* 限制一个最大高度，确保兼容性 */
   }

   /* 
        ===================================================================
         【【【全新】】】pop主题顶栏“在线/正在输入”状态动画专属样式
        ===================================================================
        */

   /* 1. 动画关键帧：从上往下淡入 */
   @keyframes status-fade-in {
       0% {
           opacity: 0;
           transform: translateY(-100%);
       }

       80% {
           opacity: 0.82;
           /* 动画中途就完全不透明 */
       }

       100% {
           opacity: 1;
           transform: translateY(0);
       }
   }


   /* 2. 动画关键帧：从当前位置往下淡出 */
   @keyframes status-fade-out {
       from {
           opacity: 1;
           transform: translateY(0);
       }

       80% {
           opacity: 0.82;
           /* 动画中途就完全不透明 */
       }

       to {
           opacity: 0;
           transform: translateY(100%);
       }
   }

   /* 3. 包裹两个状态的容器 */
   #chat-contact-status-container {
       display: none;
       /* 默认隐藏，仅在pop主题下由JS控制显示 */
       position: absolute;
       left: 50%;
       transform: translateX(-50%);

       /* --- 【【【全新的】】】“在线/正在输入”状态独立微调区 --- */
       /* 说明：这里的 top 和 left 值完全复制自您旧的 #chat-contact-status 样式 */
       top: 73px;
       left: calc(50% + -3px);

       /* --- 容器尺寸与字体样式 --- */
       width: 100px;
       /* 给予一个足够宽的容器 */
       height: 15px;
       /* 限制一个高度，防止文字跳动 */
       text-align: center;
       font-size: 11.5px !important;
       color: #f855a7;
       font-weight: 550 !important;

       /* --- 动画核心 --- */
       perspective: 50px;
       /* 增加一点3D透视，让动画更平滑 */
       overflow: hidden;
       /* 隐藏跑出容器的动画元素 */
   }

   /* 4. pop主题下，显示这个新容器 */
   body.theme-pop #chat-contact-status-container {
       display: block;
   }

   /* 5. 内部的文本元素 ("在线" 和 "正在输入") */
   .status-text {
       position: absolute;
       width: 100%;
       left: 0;
       display: none;
       /* 默认都隐藏 */
   }

   /* 6. 当前激活显示的文本 */
   .status-text.active {
       display: block;
   }

   /* 7. 应用动画的类 */
   .status-text.anim-in {
       display: block;
       animation: status-fade-in 0.3s ease-out forwards;
   }

   .status-text.anim-out {
       display: block;
       animation: status-fade-out 0.3s ease-out forwards;
   }

   /* 
        ===================================================================
         【【【全新】】】“正在输入”动画效果 (三个点)
        ===================================================================
        */

   /* 1. 三个点的动画关键帧 */
   @keyframes dot-pulse {

       0%,
       100% {
           transform: scale(0.9);
           opacity: 0.6;
       }

       50% {
           transform: scale(1.1);
           opacity: 1;
       }
   }

   /* 2. 包裹“正在输入”和三个点的容器，用于整体右移对齐 */
   .typing-content-wrapper {
       /* 
             *  说明：使用相对定位，将“正在输入”和三个点作为一个整体向右移动。
             *  移动的距离大约是半个中文字符的宽度，目的是让“正”字与“在线”的“在”字左侧对齐。
             *  因为“在线”是2个字，“正在输入”是4个字，在居中显示时，“正”会比“在”更靠左。
             */
       position: relative;
       /* 【【【核心修改：重新对齐】】】使用 calc() 函数，在原有偏移基础上，加上三个点的宽度 ( (4px宽+3px间距)*3 = 21px ) */
       left: calc(0.55em + -3px);
       display: inline-flex;
       align-items: baseline;

   }

   /* 3. 单个点的样式 */
   .typing-dot {
       display: inline-block;
       width: 4.1px;
       height: 4.1px;
       background-color: #f855a7;
       border-radius: 50%;
       position: relative;
       top: -2px;
       margin-right: 4px;
       /* 【【【修改点】】】从 margin-left 改为 margin-right，确保点与点、点与文字之间有间距 */

       /* 【【【修改点】】】应用动画，并将周期从 1.4s 缩短为 1.0s，让动画变快 */
       animation: dot-pulse 0.715s infinite ease-in-out;
   }

   /* 4. 为每个点设置不同的动画延迟，形成波浪效果 */
   .typing-content-wrapper .typing-dot:nth-of-type(1) {
       animation-delay: 0s;
   }

   .typing-content-wrapper .typing-dot:nth-of-type(2) {
       animation-delay: 0.2s;
   }

   .typing-content-wrapper .typing-dot:nth-of-type(3) {
       animation-delay: 0.4s;
   }

   /* 
        ===================================================================
         【【【全新】】】AI语音消息与引用回复专属样式
        ===================================================================
        */

   /* --- 1. AI语音消息样式 --- */

   /* AI语音气泡内的图标和秒数顺序反转 */
   body:not(.theme-pop) .assistant-wrapper .voice-content-wrapper,
   body.theme-wechat .assistant-wrapper .voice-content-wrapper {
       flex-direction: row-reverse;
       /* 核心：将内部元素水平翻转 */
   }

   /* AI语音声波图标水平镜像 */
   .voice-icon.mirrored {
       transform: scaleX(-1);
       /* 核心：将图标水平翻转 */
   }

   /* --- 2. AI引用回复样式 (iMessage/默认主题) --- */

   /* 将AI气泡也变成flex布局，以便控制内部顺序 */
   .assistant-wrapper .message-bubble.default-style-reply {
       display: flex;
       flex-direction: column;
   }

   /* 让引用框在AI气泡内靠左对齐 */
   .assistant-wrapper .reply-content-wrapper {
       align-self: flex-start;
   }

   /* --- 3. AI引用回复样式 (微信主题) --- */

   /* 让微信主题下的AI气泡也能垂直排列主消息和引用框 */
   body.theme-wechat .assistant-wrapper .message-bubble.default-style-reply {
       display: flex;
       flex-direction: column;
   }

   /* 让微信主题下的AI引用框在主消息下方，并靠左对齐 */
   body.theme-wechat .assistant-wrapper .reply-content-wrapper {
       order: 2;
       /* 确保在主消息下方 */
       align-self: flex-start;
       /* 靠左对齐 */
   }

   /* --- 4. AI引用回复样式 (pop主题) --- */

   /* 确保pop主题下AI的引用框也能正确显示 */
   body.theme-pop .assistant-wrapper .message-bubble.has-quote {
       display: flex;
       flex-direction: column;
       gap: 8px;
   }

   /* 确保pop主题下AI的引用框内部时间戳能正确显示和定位 */
   body.theme-pop .assistant-wrapper .internal-timestamp-wrapper {
       display: flex;
   }

   /* 
        ===================================================================
         【【【全新】】】重新生成弹窗专属样式
        ===================================================================
        */
   #regenerate-card {
       /* 尺寸参考 “添加状态” 弹窗，但高度更小 */
       width: 85%;
       max-width: 340px;
       max-height: 320px;
       /* 减小最大高度以适应内容 */
       height: auto;
   }

   #regenerate-card .modal-card-body {
       /* 减小内边距和元素间距，使其更紧凑 */
       padding: 15px 20px 20px 20px;
       gap: 5px;
       /* 【核心】减小标题和输入框的间距 */
   }

   #regenerate-card .modal-plate-title {
       /* 【核心】修改副标题“备注要求”的样式 */
       font-size: 13px !important;
       /* 调小字体 */
       font-weight: 550 !important;
       color: #888;
       /* 改为灰色 */
       margin: 0 0 3px 0;
       /* 保持与输入框的间距 */
   }

   #regenerate-card .modal-card-header h2 {
       /* 【核心】修改“重新生成”这个标题的样式 */
       font-size: 15px !important;
       /* 您可以在这里修改数值来调整大小 */
       font-weight: 550 !important;
       color: #333333;
       /* 您可以在这里修改粗细 (400=正常, 700=粗) */
   }

   #regenerate-card #regenerate-prompt-input::placeholder {
       /* 【核心】修改提示文字（placeholder）的样式 */
       font-size: 14px !important;
       /* 您可以在这里修改数值来调整大小 */
       color: #c5c5c5 !important;
       /* 您可以在这里修改颜色 */
   }

   /* --- 【【【全新】】】添加表情弹窗大小与内部组件调整 --- */
   /* 1. 调整弹窗主体大小，参考“重新生成”弹窗 */
   #sticker-add-modal .modal-card {
       width: 85%;
       max-width: 318px;
       max-height: 364px;
       /* 比“重新生成”稍高一点，以容纳三个组件 */
       height: auto;
   }

   /* 2. 调整弹窗内部body的间距，使其更紧凑 */
   #sticker-add-modal .modal-card-body {
       gap: 12px;
       /* 减小各个组件之间的间距 */
       padding-top: 15px;
       /* 减小顶部内边距 */
   }

   /* 3. 调整弹窗内小标题的样式 */
   #sticker-add-modal .modal-plate-title {
       font-size: 13px !important;
       font-weight: 550 !important;
       color: #888;
       margin-bottom: 5px;
       /* 减小与下方输入框的间距 */
   }

   /* 4. 调整弹窗主标题的样式 */
   #sticker-add-modal .modal-card-header h2 {
       font-size: 15px !important;
       font-weight: 550 !important;
       color: #333333;
   }

   /* 5. 调整输入框的样式和提示文字大小 */
   #sticker-add-modal .modal-input-field {
       padding: 10px 12px;
       /* 减小内边距，让输入框变矮 */
       font-size: 14px;
       /* 减小输入文字大小 */
   }

   #sticker-add-modal .modal-input-field::placeholder {
       font-size: 13px;
       /* 减小提示文字大小 */
   }

   /* 6. 调整上传按钮的样式 */
   #sticker-add-modal .modal-upload-btn {
       padding: 10px 11.8px;
       /* 减小内边距，让按钮变矮 */
       font-size: 14px !important;
       /* 减小按钮文字大小 */
   }


   /* =================================================================== */
   /* 【【【全新】】】缩小“气泡样式”弹窗及内部组件 */
   /* =================================================================== */

   /* 1. 缩小弹窗主体 */
   #bubble-style-modal .modal-card {
       max-height: 370px;
       /* 将最大高度从450px减小到400px */
       width: 90%;
       /* 宽度稍微收窄 */
       max-width: 334px;


   }

   /* --- 【【【全新】】】调整弹窗主标题“气泡样式设置”的大小 --- */
   #bubble-style-modal .modal-card-header h2 {
       /* 在这里修改数值来调整大小 */
       font-size: 14px !important;
       /* 减小标题字体 */
       font-weight: 550 !important;
       color: #363636;
   }

   /* --- 【【【全新】】】调整弹窗内小标题（如“自定义颜色”）的上下位置 --- */
   #bubble-style-modal .modal-plate-title {
       position: relative;
       /* 开启相对定位，允许移动 */
       /* 
     * 说明：
     * - 修改下面的 top 值，正数向下移动，负数向上移动。
     * - 例如: top: 5px; (向下移动5像素)
     * - 例如: top: -3px; (向上移动3像素)
    */
       top: 5px;
       left: 4px;
   }

   /* 2. 缩小内部元素的间距 */
   #bubble-style-modal .modal-card-body {
       gap: 15px;
       /* 减小各个板块之间的间距 */
       padding-top: 15px;
   }

   /* 3. 缩小所有小标题的字体和间距 */
   #bubble-style-modal .modal-plate-title {
       font-size: 14px !important;
       margin: 0 0 10px 0;
       font-weight: 550 !important;
       color: #4d4d4d;
   }

   /* 4. 缩小颜色设置项的文字 */
   #bubble-style-modal .color-setting-item span {
       font-size: 14px !important;
       /* 减小标题字体 */
       font-weight: 550 !important;
       color: #363636;

   }

   /* 5. 缩小CSS输入框的高度 */
   #bubble-style-modal .modal-textarea {
       min-height: 100px;
   }

   /* 6. 缩小预览区气泡的大小 */
   #bubble-style-modal #bubble-preview-area .message-bubble {
       font-size: 12px;
       padding: 6px 12px;
   }

   #bubble-style-modal #bubble-preview-area .chat-avatar {
       width: 32px;
       height: 32px;
   }


   /* =================================================================== */
   /* 【【【全新】】】缩小“设置聊天背景”弹窗 */
   /* =================================================================== */

   #background-modal .modal-card {
       max-height: 324px;
       /* 减小最大高度 */
       max-width: 314px;
       /* 减小最大宽度 */
   }

   #background-modal .modal-card-header h2 {
       font-size: 14px !important;
       /* 减小标题字体 */
       font-weight: 550 !important;
       color: #363636;
   }




   /* =================================================================== */
   /* 【【【全新】】】缩小“更换锁屏壁纸”弹窗 */
   /* =================================================================== */

   #lockscreen-wallpaper-modal .modal-card {
       max-height: 324px;
       /* 减小最大高度 */
       max-width: 314px;
       /* 减小最大宽度 */
   }

   #lockscreen-wallpaper-modal .modal-card-header h2 {
       font-size: 14px !important;
       /* 减小标题字体 */
       font-weight: 550 !important;
       color: #363636;
   }

   /* --- 【【【全新】】】调整气泡样式弹窗内，CSS输入框的示例文字大小 --- */
   #custom-css-input::placeholder {
       /* 在这里修改数值来调整大小 */
       font-size: 13px !important;
   }

   /* =================================================================== */
   /* 【【【全新】】】缩小“确认操作”与“创建联系人”弹窗 */
   /* =================================================================== */

   /* 1. 缩小弹窗主体 */
   #add-contact-modal .modal-content,
   #confirm-modal .modal-content {
       max-width: 230px !important;
       ;
       /* 控制弹窗的整体宽度 */
       padding: 21px 21px 16px 16px !important;
       ;
       /* 减小上下内边距，让弹窗变矮 */
       gap: 10px !important;
       ;
       /* 减小标题、文字、按钮之间的垂直间距 */
   }

   /* 2. 缩小内部的按钮 */
   #add-contact-modal .modal-actions button,
   #confirm-modal .modal-actions button {
       padding: 6px 8px !important;
       ;
       /* 减小按钮的上下和左右内边距 */
       font-size: 12px !important;
       /* 减小按钮上的文字大小 */
       flex: 0 1 65px !important;
       ;
       /* 调整按钮的基础宽度 */
   }


   /* =================================================================== */
   /* 【【【全新】】】调整“确认操作”弹窗提示文字 */
   /* =================================================================== */
   #confirm-modal-text {
       /* 
     * 说明：
     * - 在这里修改 font-size 的数值来调整字体大小。
     * - 在这里修改 font-weight 的数值来调整字体粗细 (400=正常, 500=稍粗, 700=加粗)。
    */
       font-size: 13.1px !important;
       font-weight: 550 !important;
       color: #363636;
   }


   /* =================================================================== */
   /* 【【【全新】】】调整“创建联系人”弹窗内部样式 */
   /* =================================================================== */

   /* 1. 调整标题 "创建新联系人" */
   #add-contact-modal .modal-content h2 {
       /* 
     * 说明：
     * - 在这里修改 font-size 来调整标题大小。
     * - 在这里修改 font-weight 来调整标题粗细。
    */
       font-size: 14.7px !important;
       font-weight: 550 !important;
       color: #363636;

   }

   /* 2. 调整输入框的大小和长度 */
   #new-contact-name-input {
       /* 
     * 说明：
     * - 修改下面的 padding 值可以调整输入框的“高矮”。第一个值是上下，第二个值是左右。
     * - 修改下面的 width 值可以调整输入框的“长短”。100%代表撑满。
    */
       padding: 5px 8px;
       width: 100%;
   }

   /* 3. 调整输入框内提示文字 "请输入Ta的名字..." */
   #new-contact-name-input::placeholder {
       /* 
     * 说明：
     * - 在这里修改 font-size 来调整提示文字的大小。
    */
       font-size: 12px !important;
   }


   /* =================================================================== */
   /* 【【【全新 V5.3 修复】】】语音转文字与拍摄照片弹窗共享样式 */
   /* =================================================================== */
   #voice-to-text-card,
   #photo-description-card {
       /* 尺寸参考 “重新生成” 弹窗 */
       width: 85%;
       max-width: 340px;
       max-height: 320px;
       height: auto;
   }

   #voice-to-text-card .modal-card-body,
   #photo-description-card .modal-card-body {
       padding: 15px 20px 20px 20px;
       gap: 5px;
   }

   #voice-to-text-card .modal-card-header h2,
   #photo-description-card .modal-card-header h2 {
       font-size: 15px !important;
       font-weight: 550 !important;
       color: #333333;
   }

   #voice-to-text-card .modal-plate-title,
   #photo-description-card .modal-plate-title {
       font-size: 13px !important;
       font-weight: 550 !important;
       color: #888;
       margin: 0 0 3px 0;
   }

   #voice-to-text-card #voice-content-input::placeholder,
   #photo-description-card #photo-description-input::placeholder {
       font-size: 14px !important;
       color: #c5c5c5 !important;
   }

   /* =================================================================== */
   /* 【【【全新修复 & V4.5 新增】】】语音消息与语音转文字专属样式 */
   /* =================================================================== */

   /* 1. 控制语音气泡本身的大小和布局 */
   .message-bubble-voice {
       width: 50px;
       /* 核心：在这里设置固定的宽度 */
       display: flex !important;
       justify-content: space-between;
       align-items: center;
       cursor: pointer;
       /* 新增：提示用户这是一个可点击的元素 */
   }

   /* 2. 【【【新增】】】语音转文字的文本框样式 */
   .voice-text-box {
       display: none;
       /* 默认隐藏 */
       background-color: #ffffff !important;
       border-radius: 8px;
       padding: 8px 12px;
       margin-top: 8px;
       /* 与上方气泡的间距 */
       border: 0.6px solid #eee;
       box-shadow: 0 0.1px 3px rgba(0, 0, 0, 0.021);
       max-width: 70%;
       word-wrap: break-word;
       line-height: 1.5;
       font-size: 13.6px;
       font-weight: 550;
       color: #333333 !important;
       white-space: pre-wrap;
       /* 保留换行 */
   }

   /* 3. 【【【新增】】】当消息行有 'show-voice-text' 类时，显示文本框 */
   .message-wrapper.show-voice-text .voice-text-box {
       display: block;
   }

   /* 4. 【【【新增】】】为日间/iMessage主题设置特殊布局 */
   /* 仅在body上没有任何 theme-* 类名时生效 */
   body:not([class*="theme-"]) .message-wrapper.show-voice-text .message-content-wrapper {
       flex-direction: column;
       /* 让内部元素垂直排列 */
   }

   /* AI方（左侧）的消息，保持左对齐 */
   body:not([class*="theme-"]) .assistant-wrapper.show-voice-text .message-content-wrapper {
       align-items: flex-start;
   }

   /* 用户方（右侧）的消息，改为右对齐 */
   body:not([class*="theme-"]) .user-wrapper.show-voice-text .message-content-wrapper {
       align-items: flex-end;
   }

   /* 使用 order 属性重新排序：气泡(1) -> 文本框(2) -> 时间戳(3) */
   body:not([class*="theme-"]) .message-wrapper.show-voice-text .message-bubble {
       order: 1;
   }

   body:not([class*="theme-"]) .message-wrapper.show-voice-text .voice-text-box {
       order: 2;
       margin-top: 6px;
       /* 微调与气泡的间距 */
       margin-bottom: -2px;
       /* 微调与时间戳的间距 */
   }

   body:not([class*="theme-"]) .message-wrapper.show-voice-text .message-timestamp {
       order: 3;
   }

   /* 5. 【【【新增】】】为日间/iMessage主题的语音图标设置白色 */
   body:not([class*="theme-"]) .message-bubble-voice .voice-icon svg path {
       fill: #ffffff !important;
   }

   /* =================================================================== */
   /* 【【【全新 V4.6 修复】】】针对微信与pop主题的语音转文字框位置修复 */
   /* =================================================================== */

   /* 1. 当语音文本框显示时，强制微信和pop主题的消息内容区垂直排列 */
   body.theme-wechat .message-wrapper.show-voice-text .message-content-wrapper,
   body.theme-pop .message-wrapper.show-voice-text .message-content-wrapper {
       flex-direction: column;
   }

   /* 2. 针对用户（右侧）消息，让垂直排列的内容靠右对齐 */
   body.theme-wechat .user-wrapper.show-voice-text .message-content-wrapper,
   body.theme-pop .user-wrapper.show-voice-text .message-content-wrapper {
       align-items: flex-end;
   }

   /* 3. 针对AI（左侧）消息，让垂直排列的内容靠左对齐 */
   body.theme-wechat .assistant-wrapper.show-voice-text .message-content-wrapper,
   body.theme-pop .assistant-wrapper.show-voice-text .message-content-wrapper {
       align-items: flex-start;
   }

   /* 4. 【核心】使用 'order' 属性重新排序，将文本框强制移动到气泡下方 */
   body.theme-wechat .message-wrapper.show-voice-text .message-bubble,
   body.theme-pop .message-wrapper.show-voice-text .message-bubble {
       order: 1;
       /* 气泡排第一 */
   }

   body.theme-wechat .message-wrapper.show-voice-text .voice-text-box,
   body.theme-pop .message-wrapper.show-voice-text .voice-text-box {
       order: 2;
       /* 文本框排第二 */
       margin-top: 6px;
       /* 增加一点与上方气泡的间距 */
   }

   /* 5. 确保时间戳（如果可见）排在最后 */
   body.theme-wechat .message-wrapper.show-voice-text .message-timestamp,
   body.theme-pop .message-wrapper.show-voice-text .message-timestamp {
       order: 3;
       /* 时间戳排第三 */
   }

   /* 2. 控制语音内容（秒数+图标）的内部布局 */
   .voice-content-wrapper {
       display: flex;
       align-items: center;
       gap: 4px;
       /* 秒数和图标之间的间距 */
   }

   /* 3. 单独控制秒数的字体大小 */
   .voice-duration {
       font-size: 12.7px;
   }

   /* 4. 【关键修复】在非pop主题下，强制让语音内容整体靠右 */
   body:not(.theme-pop) .message-bubble-voice {
       justify-content: flex-end;
       /* 强制所有内容靠右 */
   }

   /* =================================================================== */
   /* 【【【全新】】】语音消息内容独立微调区 */
   /* =================================================================== */

   /* --- 1. 单独移动“秒数”文字 --- */
   .voice-duration {
       position: relative;
       /* 开启相对定位，允许我们移动它 */

       /* 
     * === 上下位置微调 ===
     * 修改下面的 top 值来控制文字的垂直位置。
     * - 负数 (例如 top: -2px;) 会将文字向上移动。
     * - 正数 (例如 top: 2px;) 会将文字向下移动。
    */
       top: -0.6px;

       /* 
     * === 左右位置微调 ===
     * 修改下面的 left 值来控制文字的水平位置。
     * - 负数 (例如 left: -5px;) 会将文字向左移动。
     * - 正数 (例如 left: 5px;) 会将文字向右移动。
    */
       left: 0px;
   }

   /* --- 2. 单独移动“声波”图标 --- */
   .voice-icon {
       position: relative;
       /* 同样开启相对定位 */

       /* 
     * === 上下位置微调 ===
     * 修改下面的 top 值来控制图标的垂直位置。
     * - 负数 (例如 top: -1px;) 会将图标向上移动。
     * - 正数 (例如 top: 1px;) 会将图标向下移动。
    */
       top: 2.1px;

       /* 
     * === 左右位置微调 ===
     * 修改下面的 left 值来控制图标的水平位置。
     * - 负数 (例如 left: -3px;) 会将图标向左移动。
     * - 正数 (例如 left: 3px;) 会将图标向右移动。
    */
       left: 0px;
   }

   /* --- 3. 单独修改“声波”图标的大小 --- */
   .voice-icon svg {
       /* 
     * 说明：
     * - 在这里直接修改 width 和 height 的数值，就可以精确控制图标的大小。
     * - 这会覆盖掉您在HTML里设置的任何尺寸。
    */
       width: 17px !important;
       height: 17px !important;
   }

   /* =================================================================== */
   /* 【【【全新 V5.5 最终修复】】】 照片消息样式彻底分离（pop主题兼容版） */
   /* =================================================================== */

   /* --- 1. “拍摄”功能（翻转卡片）的包裹层样式 --- */
   .message-bubble.photo-bubble {
       width: 140px;
       height: 140px;
       padding: 0 !important;
       background: none !important;
       border: none !important;
       box-shadow: none !important;
       perspective: 1000px;
       cursor: pointer;
   }

   /* --- 2. “照片”功能（真实图片）的包裹层样式 --- */
   .message-bubble.real-photo-bubble {
       background: none !important;
       padding: 0 !important;
       border: none !important;
       box-shadow: none !important;
       max-width: 180px;
       width: auto;
       height: auto;
   }

   /* 3. 隐藏所有照片类消息的小尾巴 */
   .message-bubble.photo-bubble::after,
   .message-bubble.real-photo-bubble::after {
       display: none !important;
   }

   /* 4. 为聊天中的真实图片本身设置样式 */
   .photo-in-chat {
       max-width: 100%;
       max-height: 280px;
       border-radius: 5px;
       object-fit: cover;
       display: block;
       cursor: pointer;
   }



   /* =================================================================== */
   /* 【【【全新 V5.2】】】照片消息与翻转动画专属样式 (这段代码保持不变) */
   /* =================================================================== */

   /* 1. 照片消息气泡的基础样式 (现在只对“拍摄”功能生效) */
   .photo-bubble {
       width: 140px;
       /* 您可以在这里调整照片卡片的宽度 */
       height: 140px;
       /* 您可以在这里调整照片卡片的高度 */
       padding: 0;
       background-color: transparent;
       /* 气泡本身透明，由内部卡片决定颜色 */
       perspective: 1000px;
       /* 开启3D视角，为翻转做准备 */
       cursor: pointer;
       box-shadow: none !important;
       border: none !important;
   }


   /* 2. 翻转的核心容器 */
   .photo-flipper {
       position: relative;
       width: 100%;
       height: 100%;
       transition: transform 0.6s;
       /* 翻转动画时长 */
       transform-style: preserve-3d;
       /* 让子元素保持3D空间 */
   }

   /* 3. 当气泡被点击，添加 .flipped 类时，翻转容器 */
   .photo-bubble.flipped .photo-flipper {
       transform: rotateY(180deg);
   }

   /* 4. 正面和背面的通用样式 */
   .photo-front,
   .photo-back {
       position: absolute;
       width: 100%;
       height: 100%;
       -webkit-backface-visibility: hidden;
       /* Safari 兼容性 */
       backface-visibility: hidden;
       /* 隐藏元素的背面 */
       border-radius: 18px;
       /* 卡片的圆角 */
       overflow: hidden;
       /* 隐藏超出的内容 */
   }

   /* 5. 正面（图标面）的样式 */
   .photo-front {
       background-color: #fefefe;
       border: 1px solid #f0f0f0;
       box-shadow: 0 1px 6px rgba(0, 0, 0, 0.03);
       display: flex;
       justify-content: center;
       align-items: center;
   }

   /* 6. 背面（文字面）的样式 */
   .photo-back {
       background-color: #ffffff;
       border: 1px solid #f0f0f0;

       transform: rotateY(180deg);
       /* 初始状态下，背面是翻过去的 */
       padding: 15px;
       box-sizing: border-box;
   }

   /* 7. 背面文字的滚动容器 */
   .photo-description-scroll {
       width: 100%;
       height: 100%;
       overflow-y: auto;
       /* 当内容超出时，允许垂直滚动 */
       font-size: 13.6px;
       color: #424242;
       font-weight: 580;
       line-height: 1.6;
       white-space: pre-wrap;
       /* 保留换行和空格 */
   }


   /* 
        ===================================================================
         【【【全新】】】转账功能弹窗与消息卡片专属样式
        ===================================================================
        */

   /* --- 1. 发起转账弹窗样式 (完全复制自“重新生成”弹窗) --- */
   #transfer-card {
       width: 85%;
       max-width: 340px;
       max-height: 320px;
       /* 高度稍微增加以容纳两个输入框 */
       height: auto;
   }

   #transfer-card .modal-card-body {
       padding: 15px 20px 20px 20px;
       gap: 5px;
   }

   #transfer-card .modal-card-header h2 {
       font-size: 15px !important;
       font-weight: 550 !important;
       color: #333333;
   }

   #transfer-card .modal-plate-title {
       font-size: 13px !important;
       font-weight: 550 !important;
       color: #888;
       margin: 0 0 3px 0;
   }

   /* --- 【核心新增】为备注输入框本身添加新样式 --- */
   #transfer-card #transfer-remarks-input {
       min-height: 40px !important;
       /* 与金额框保持一致 */
       height: 40px !important;
       /* 与金额框保持一致 */
       padding: 8px 15px !important;
       /* 与金额框保持一致 */
       resize: none;
       /* 禁止用户拖拽调整大小 */
       white-space: nowrap;
       /* 强制文本不换行 */
       overflow-x: auto;
       /* 当内容超出时，显示水平滚动条 */
       box-sizing: border-box;
   }



   #transfer-card #transfer-remarks-input::placeholder {
       font-size: 13.2px !important;
       color: #c5c5c5 !important;
   }

   /* --- 【核心新增】为金额输入框本身添加新样式 --- */
   #transfer-card #transfer-amount-input {
       min-height: 40px;
       /* 保持一个最小高度 */
       height: 40px;
       /* 固定高度为40px，比之前更矮 */
       padding: 8px 15px;
       /* 减小上下的内边距，让输入框变薄 */
       font-size: 15px !important;
       color: #2c2c2c !important;
       font-weight: 550;
       /* 稍微减小输入的数字大小 */
       text-align: left;
       /* 确保文字从左边开始 */
       box-sizing: border-box;
       /* 确保内边距不会撑大输入框 */
   }

   #transfer-card #transfer-amount-input::placeholder {
       color: #c5c5c5 !important;
       /* --- 【核心新增】在这里修改“0.00”占位文字的大小 --- */
       font-size: 16px !important;
       position: relative;
   }

   /* =================================================================== */
   /* 【【【全新 V5.6 修复】】】 转账卡片底部“转账”文字独立微调区 */
   /* =================================================================== */
   .transfer-card-bottom span {
       position: relative;
       /* 开启相对定位，允许我们移动它 */
       top: -1.5px;
       left: 7.9px;
   }

   /* --- 2. 聊天界面中的转账卡片样式 (V2 - 修复 & 微调版) --- */
   .message-bubble-transfer {
       width: fit-content;
       width: 230px;
       padding: 0;
       background: none;
       border: none;
       box-shadow: none;
       position: relative;
       transition: opacity 0.3s ease-in-out;
       /* 新增：为透明度变化添加动画 */
   }

   /* 【【【核心新增】】】已处理的转账卡片样式 */
   .message-bubble-transfer.processed {
       opacity: 0.73;
       /* 透明度降低，您可以修改这个值 */
   }

   .message-bubble-transfer::after {
       display: none !important;
   }

   .transfer-card-content {
       background-color: #ffb9d3;
       border-radius: 14px;
       overflow: hidden;
       color: white;

   }

   .transfer-card-top {
       display: flex;
       align-items: center;
       gap: 12px;

       /* 
            ===========================================================
             【【【全新的】】】转账卡片大小（长高）微调区
            ===========================================================
            说明：
            - 通过调整这里的 padding 值，可以控制卡片上半部分的整体大小。
            - 第一个值管上下高度，第二个值管左右宽度。
            - 数值越大，卡片就越大。
            */
       padding: -6px 6px;
       /* 上下15px, 左右15px */
   }

   .transfer-card-icon {
       flex-shrink: 0;
       position: relative;
       /* 开启微调模式 */

       /* --- 【在这里微调】图标的位置 --- */
       /* 说明：top正数向下移，负数向上移；left正数向右移，负数向左移 */
       top: 5px;
       left: 16px;
   }

   .transfer-card-details {
       flex-grow: 1;
       min-width: 0;
   }

   .transfer-card-amount {
       font-size: 17px;
       font-weight: 560;
       white-space: nowrap;
       position: relative;
       /* 开启微调模式 */

       /* --- 【在这里微调】金额的位置 --- */
       top: 3px;
       left: 15px;
   }

   .transfer-card-remarks {
       font-size: 12.8px;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
       margin-top: 4px;
       position: relative;
       /* 开启微调模式 */

       /* --- 【核心新增】在这里通过修改 max-width 的数值来控制省略号出现的位置 --- */
       /* 数值越小，能显示的字就越少。150px 大约可以显示10-12个汉字。 */
       max-width: 150px;

       /* --- 【在这里微调】备注文字("你发起了一笔转账")的位置 --- */
       top: -9px;
       left: 15px;
   }

   .transfer-card-bottom {
       background-color: #ffffff;
       padding: 6px 12px;
       font-size: 12px;
       color: #bababa;
       font-weight: 550;
   }


   /* css结束 */



   /* 
        ===================================================================
         【新增】字体大小和粗细调整区 
        ===================================================================
        */

   /* --- 桌面App标题 --- */
   .app-icon span {
       /* font-size: 14px; */
       /* font-weight: 500; */
   }

   /* --- 所有页面的顶部大标题 (如“聊天”、“API设置”等) --- */
   .header h1 {
       font-size: 16px;
       font-weight: 550;
       /* 600是 légèrement 加粗 */
   }

   /* --- 弹窗/卡片的标题 (如“创建新联系人”) --- */
   .modal-content h2,
   .modal-card-header h2,
   #confirm-modal-title {
       font-size: 15px;
       font-weight: 540;

   }

   /* 【全新】更多功能按钮的交互样式 (V2 - 结构分离版) */

   /* 1. 这是按钮的“定位舞台”和“点击区域” */
   #more-btn {
       position: relative;
       /* 保持相对定位，作为内部元素的“锚点” */
       display: flex;
       align-items: center;
       justify-content: center;

       /* --- 【您可以修改这里的 top 和 left 来移动整个按钮】 --- */
       top: 0px;
       /* 正数向下, 负数向上 */
       left: 5px;
       /* 正数向右, 负数向左 */

       /* --- 【这里定义了按钮的实际可点击范围】 --- */
       /*     通常比看到的圆形稍大一点，方便用户点击   */
       width: 44px;
       height: 44px;

       /* 保留原有的旋转动画效果 */
       transition: transform 0.3s ease-in-out;
   }

   /* 2. 【【【核心】】】这是独立的圆形“背景层” */
   #more-btn::before {
       content: '';
       position: absolute;
       /* 绝对定位，浮动在“舞台”后面 */
       z-index: -1;
       /* 确保它在图标的后面 */

       /* 
            ===========================================================
             【【【全新的】】】圆形背景大小独立调节区
            ===========================================================
            说明：
            - 在这里修改 width 和 height，就可以单独调整圆形背景的大小，
              不会影响到图标或者按钮的点击范围。
            */
       width: 38px;
       /* 您可以在这里修改圆形的宽度 */
       height: 38px;
       /* 您可以在这里修改圆形的高度 */

       /* --- 以下是完全复制自返回按钮的“玻璃质感”样式 --- */
       border-radius: 50%;
       background-color: rgba(255, 255, 255, 0.139);
       box-shadow:
           inset -2px 2px 4px rgba(255, 255, 255, 0.119),
           inset 1.22px 0 1.35px rgba(0, 0, 0, 0.11),
           inset 0 1px 1px rgba(255, 255, 255, 0.87),
           inset -1.22px 0 1.35px rgba(0, 0, 0, 0.11),
           inset 0 -1.36px 1px rgba(255, 255, 255, 0.87);
       backdrop-filter: blur(2px) saturate(106%) brightness(1.076);
       -webkit-backdrop-filter: blur(2px) saturate(103%);
   }

   /* 3. 这是独立的“+”号图标层 */
   #more-btn svg {
       position: relative;
       /* 
            ===========================================================
             【【【全新的】】】SVG图标位置独立微调区
            ===========================================================
            说明：
            - 在这里修改 top 和 left 值来单独移动“+”图标，
              让它在圆形背景中居中或者偏移。
            */
       top: 0px;
       left: 0px;
   }

   #more-btn.rotated {
       /* 【新增】旋转45度，变成 "×" 号 */
       transform: rotate(45deg);
   }

   /* 【全新】功能面板、分页和图标的样式 (V2.0 美化版) */

   /* 1. 功能面板的总容器 */
   #more-functions-panel {
       /* 【核心修改1】修复缝隙问题 */
       margin: 0 -15px -15px -15px;
       /* 上右下左，用负边距抵消父容器的padding */
       width: calc(100% + 30px);
       /* 补偿左右负边距，撑满宽度 */

       /* 【核心修改2】样式美化 */
       background-color: #f9f9f9;
       /* 背景改为白色 */
       border-top: 1.2px solid #e0e0e0;
       /* 在顶部添加分割线 */

       /* 原有动画和布局保持不变 */
       max-height: 0;
       overflow: hidden;
       transition: max-height 0.3s ease-in-out;
       position: relative;
   }

   /* 2. 当面板可见时，展开它 (不变) */
   #more-functions-panel.visible {
       max-height: 300px;
   }

   /* 3. "视口" (不变) */
   #functions-viewport {
       overflow: hidden;
       position: relative;
   }

   /* 4. "胶卷条" (不变) */
   #functions-slider {
       display: flex;
       width: 200%;
       transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
   }

   /* 5. 每一页的样式 (不变) */
   .functions-page {
       width: 50%;
       flex-shrink: 0;
       display: grid;
       grid-template-columns: repeat(4, 1fr);
       gap: 20px 15px;
       padding: 20px;
       box-sizing: border-box;
   }

   /* 6. 单个功能图标的容器 (不变) */
   .function-icon-item {
       display: flex;
       flex-direction: column;
       align-items: center;
       gap: 8px;
       cursor: pointer;
   }

   /* 【新增】7. 图标按钮本身的白色圆角矩形包裹样式 */
   /* 【核心修正】在选择器前加上 #more-functions-panel 来提高优先级 */
   #more-functions-panel .function-icon-item .action-button {
       width: 48px;
       height: 48px;
       /* 现在你可以自由修改这里的颜色了！*/
       background-color: #f7f7f7;
       border-radius: 12px;
       border: 1px solid rgba(0, 0, 0, 0.04);
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
       display: flex;
       justify-content: center;
       align-items: center;
       /* 【重要】覆盖掉旧的透明背景设置 */
       background-color: #fefefe !important;
   }

   /* 8. 图标下方的文字标签 */
   .function-icon-label {
       /* 【核心修改3】字体加深加粗 */
       font-size: 12px;
       color: #555555;
       /* 颜色加深 */
       font-weight: 500;
       /* 字体稍微加粗 */
       text-shadow: none;
       /* 移除之前的阴影 */
   }

   /* 9. 导航箭头的样式 (不变) */
   .functions-nav-arrow {
       position: absolute;
       top: 50%;
       transform: translateY(-50%);
       width: 30px;
       height: 30px;
       border-radius: 50%;
       background-color: rgba(0, 0, 0, 0);
       /* 箭头背景稍微调浅以适应白色背景 */
       border: none;
       color: #666;
       /* 箭头颜色 */
       display: flex;
       justify-content: center;
       align-items: center;
       cursor: pointer;
       z-index: 10;
       transition: opacity 0.2s, background-color 0.2s;
   }

   #functions-nav-prev {
       left: 8px;
   }

   #functions-nav-next {
       right: 8px;
   }

   /* 10. 用于隐藏箭头的辅助类 (不变) */
   .functions-nav-arrow.hidden {
       opacity: 0;
       pointer-events: none;
   }

   /* 【全新】微调“添加表情”按钮的大小 */
   .add-sticker-btn-wrapper {
       transform: scale(0.85);
       /* 将按钮缩放至原大小的85% */
   }

   /* 
        ===================================================================
         【全新】V1.40 新桌面布局样式
        ===================================================================
        */

   /* --- 灵动岛 --- */
   #dynamic-island {
       position: absolute;
       top: 10px;
       left: 50%;
       transform: translateX(-50%);
       width: 160px;
       height: 36px;
       background-color: #000;
       border-radius: 18px;
       display: flex;
       align-items: center;
       padding: 4px;
       box-sizing: border-box;
       z-index: 20;
       /* 确保在最顶层 */
   }

   #dynamic-island .island-content {
       width: 24px;
       height: 24px;
       background-color: white;
       border-radius: 7px;
       margin-left: 8px;
       /* 【修正】向右移动5px, 您可以在此调整 */
   }



   #user-card {
       position: relative;
       /* 改为相对定位，在滚动流中 */
       margin: -21px auto 0 auto;
       /* 顶部外边距20px, 左右自动居中 */
       width: 90%;
       max-width: 390px;
       /* 减小最大宽度 */
       height: 250px;
       /* 减小总高度 */
       border-radius: 25px;
       /* 稍微减小圆角 */
       overflow: hidden;
       background-color: #ffffff;
       /* 白色背景 */
       flex-shrink: 0;
       /* 防止被flex布局压缩 */
   }

   /* 【全新】卡片背景层样式 (让其可见并可点击) */
   #user-card-background {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       /* 【核心修正】让背景层铺满整个卡片 */
       height: 100%;
       z-index: 1;
       /* 确保它在最底层 */
       cursor: pointer;
       /* 鼠标悬浮时显示小手图标 */
       /* 【核心新增】让JS设置的背景图能正确显示 */
       background-size: cover;
       background-position: center;
   }

   /* 【全新】卡片前景层裁剪容器 */
   #user-card-foreground-clipper {
       position: absolute;
       /* 【核心恢复】恢复你最初的定位方式，这是形成弧形的关键 */
       bottom: -110px;
       left: 0;
       width: 100%;
       height: 250px;
       /* 【核心新增】确保它在背景层之上 */
       z-index: 2;
   }

   /* 【全新】卡片前景层内容实体 */
   #user-card-foreground-content {
       width: 100%;
       height: 100%;
       background-color: #ffffff;
       /* 白色背景 */
       box-shadow: 0 6px 20px rgba(0, 0, 0, 0.441);
       border-radius: 25px;
       /* 【核心】自身的圆角，被裁剪后形成弧形 */
       box-sizing: border-box;
   }

   /* 用户文字信息容器 */
   #user-info-text {
       position: absolute;
       /* 定位在前景层之上 */
       bottom: 120px;
       /* 【修改】相对于 clipper 定位，值需要重新计算 */
       left: 0;
       width: 100%;
       text-align: center;
       /* 文字居中 */
       z-index: 3;
       /* 确保文字在最上层 */
       padding: 0 20px;
       /* 左右留些边距 */
       box-sizing: border-box;
   }

   /* 卡片头像 */
   #user-card-avatar {
       position: absolute;
       /* 绝对定位，脱离文档流，才能悬浮 */
       top: 58px;
       /* 头像的垂直中心线位置 */
       left: 50%;
       /* 水平居中 */
       transform: translateX(-50%);
       /* 水平居中修正 */
       width: 80px;
       /* 头像宽度 */
       height: 80px;
       /* 头像高度 */
       border-radius: 50%;
       /* 完美圆形 */
       border: 3px solid white;
       /* 白色描边 */
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
       /* 阴影 */
       cursor: pointer;
       z-index: 5;
       /* 【层级提升】确保头像在所有前景元素之上 */
       background-color: white;
       /* 【新增】白色背景 */
       display: flex;
       /* 【新增】Flex布局 */
       justify-content: center;
       /* 【新增】水平居中SVG */
       align-items: center;
       /* 【新增】垂直居中SVG */
   }

   /* 文字基本样式重置 */
   #user-info-text p {
       margin: 6px 0;
       /* 减小段落间距 */
   }

   /* ID样式 */
   #user-id {
       font-size: 14px;
       font-weight: 600;
       /* 稍粗体 */
       color: #333;
   }

   /* @handle样式 */
   #user-handle {
       font-size: 12px;
       color: #aaa;
       /* 浅灰色 */
   }

   /* 个人简介样式 (带长度限制) */
   #user-bio {
       font-size: 12px;
       color: #555;
       /* 浅黑色 */
       white-space: nowrap;
       /* 强制不换行 */
       overflow: hidden;
       /* 隐藏溢出部分 */
       text-overflow: ellipsis;
       /* 溢出部分显示省略号 */
       max-width: 100%;
       /* 确保在父容器内 */
       margin-top: 6px;
   }

   /* 地址样式 */
   #user-location {
       display: inline-flex;
       /* 使用flex布局让图标和文字对齐 */
       align-items: center;
       gap: 4px;
       /* 图标和文字的间距 */
       font-size: 10.5px;
       color: #4e4e4e;
       font-weight: 560;
       /* 稍粗体 */
       margin-top: 2px;
   }

   /* --- 【位置调整后】中间App图标容器 --- */
   #main-apps-container {
       position: absolute;
       top: 340px;
       right: 26.8px;
       width: 160px;
       /* 【修复】稍微增加容器宽度以容纳更大的间距 */

       /* --- 【核心修复】从 Flexbox 改为 Grid 布局 --- */
       display: grid;
       grid-template-columns: repeat(2, 1fr);
       /* 定义为两列，每列占据可用空间的一半 */

       /* 【核心修复】独立控制行间距和列间距 */
       row-gap: 15px;
       /* 保持原来的垂直间距 */
       column-gap: 12px;
       /* 【修复】显著增大列之间的水平间距 */
   }


   /* --- 【位置调整后】音乐组件 --- */
   #music-widget {
       position: absolute;
       top: 510px;
       /* 定位到自定义矩形条下方 */
       right: 30px;
       /* 距离右边框的距离 */
       width: 158px;
       /* 稍微放大一点以匹配草图 */
       height: 158px;
   }

   #record-outer {
       width: 100%;
       /* 使用百分比以适应父容器 */
       height: 100%;
       background-color: #222;
       /* 黑色外圈 */
       border-radius: 50%;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   #record-inner {
       width: 108px;
       /* 白色内圈大小 */
       height: 108px;
       background-color: #fff;
       border-radius: 50%;
       cursor: pointer;
   }

   /* --- 底部Dock栏 --- */
   #bottom-dock {
       position: absolute;
       /* 恢复为 absolute 定位 */
       bottom: 30px;
       /* 【核心修改】设置一个正值，让它在布局的底部，而不是屏幕外 */
       left: 50%;
       transform: translateX(-50%);
       width: 80%;
       max-width: 340px;
       height: 75px;
       z-index: 100;
       /* 保留 z-index */

       /* --- 【V1.92 最终美化版】多层次样式叠加 --- */
       /* 1. 通透层(光泽) + 底层(基色) - 微调透明度以增强对比 */
       background: linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.15)),
           rgba(255, 255, 255, 0.25);

       /* 2. 模糊层 (保持不变) */
       backdrop-filter: blur(17px);
       -webkit-backdrop-filter: blur(15px);

       /* 3. 【核心修复】移除呆板的 border 属性 */
       /* border: 1.5px solid rgba(255, 255, 255, 0.25); */

       box-shadow:
           /* 顶部和左侧的亮边高光 (更亮更细) */
           inset 0.8px 0.8px 1px rgba(255, 255, 255, 0.7),
           /* 底部和右侧的暗边轮廓 (更暗更细) */
           inset -0.8px -0.8px 1px rgba(255, 255, 255, 0.15),
           /* 外部的悬浮投影 */
           0 2px 8px rgba(0, 0, 0, 0.1);

       border-radius: 32px;
       display: flex;
       justify-content: space-around;
       align-items: center;
       padding: 0 10px;
       box-sizing: border-box;
   }

   /* 【【【核心新增】】】为Dock栏内的App图标设置专属样式，解决“双重玻璃”问题 */
   #bottom-dock .new-app-icon {
       background-color: rgba(255, 255, 255, 0.09);
       /* 3. 【强化质感】用更强的内外阴影和边框来模拟玻璃实体感 */
       box-shadow: inset 0 0.125em 0.125em rgba(0, 0, 0, 0.05),
           inset 0 0.125em 0.125em rgba(255, 255, 255, 0.2),
           0 0.25em 0.125em -0.125em rgba(0, 0, 0, 0.2);
   }

   /* --- 全局新App图标样式 --- */
   .new-app-icon {
       width: 58px;
       height: 58px;

       /* --- 【V1.92 最终美化版】多层次样式叠加 --- */
       /* 1. 通透层(光泽) + 底层(基色) - 微调透明度以增强对比 */
       background: linear-gradient(135deg, rgba(198, 198, 198, 0.1), rgba(224, 224, 224, 0.299)),
           rgba(246, 246, 246, 0.183);

       backdrop-filter: blur(14px);
       -webkit-backdrop-filter: blur(17px);
       box-shadow: inset 0 0.125em 0.125em rgba(0, 0, 0, 0.05),
           inset 0 -0.125em 0.125em rgba(255, 255, 255, 0.2),
           0 0.25em 0.125em -0.125em rgba(0, 0, 0, 0.2);
       transition: all 400ms cubic-bezier(0.25, 1, 0.5, 1);
       border-radius: 20px;
       display: flex;
       justify-content: center;
       align-items: center;
       cursor: pointer;
       transition: transform 0.2s ease;
   }

   .new-app-icon:active {
       transform: scale(0.92);
       /* 点击时缩小 */
   }

   /* 【新增】中间App图标的独立大小 */
   #main-apps-container .new-app-icon {
       width: 69.5px;
       height: 67.5px;
   }

   /* 【新增】底部Dock栏图标的独立大小 */
   #bottom-dock .new-app-icon {
       width: 52px;
       height: 52px;
   }


   /* 
        ===================================================================
         【全新】V1.48 新增桌面组件样式
        ===================================================================
        */

   /* --- 纪念日组件 --- */
   #days-matter-widget {
       position: absolute;
       top: 430px;
       /* 【位置微调】与右侧图标顶部对齐 */
       left: 25px;
       width: 158px;
       height: 158px;
       /* --- 【核心修复】多层次样式叠加 --- */
       /* 1. 通透层(光泽) + 底层(基色) */
       background: linear-gradient(135deg, rgba(255, 255, 255, 0.12), rgba(255, 255, 255, 0.22)),
           rgba(255, 255, 255, 0.12);

       /* 2. 模糊层 (增加模糊度) */
       backdrop-filter: blur(4px);
       -webkit-backdrop-filter: blur(4px);
       border-radius: 22px;
       /* 【核心】使用box-shadow模拟不规则描边 */
       box-shadow:
           -0.8px -0.8px 0.5px rgba(245, 245, 245, 0.313) inset,
           /* 左上角亮的内阴影 (模拟粗边) */
           1.4px 1.4px 1px rgba(255, 255, 255, 0.557) inset;
       /* 右下角暗的内阴影 (模拟细边) */
       display: flex;
       flex-direction: column;
       overflow: hidden;
       /* 必须保留，用于裁剪圆角 */
   }

   /* 【全新】上半部分样式 */
   .widget-top-pane {
       height: 39px;
       /* 顶部区域高度 */
       flex-shrink: 0;
       /* 【核心】设置一个更深、更不透明的背景 */
       background-color: rgba(206, 206, 206, 0.105);
       display: flex;
       align-items: center;
       justify-content: center;
       padding: 0 10px;
       box-sizing: border-box;
   }

   .days-matter-title {
       font-size: 14px;
       font-weight: 500;
       color: rgba(255, 255, 255, 0.9);
       /* 文字改为白色以适应深色背景 */
       text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
   }

   /* 【全新】下半部分样式 */
   .widget-bottom-pane {
       flex-grow: 1;
       /* 【核心】设置一个更浅、更透明的背景 */
       background-color: rgba(255, 255, 255, 0.1);
       display: flex;
       flex-direction: column;
       align-items: center;
       justify-content: center;
       padding-bottom: 5px;
   }

   .days-matter-content {
       font-size: 48px;
       font-weight: 500;
       line-height: 1.1;
   }

   /* 当有数字时，文字为白色 */
   .days-matter-content:not(:empty) {
       color: white;
       font-weight: 600;
       text-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
   }

   /* “暂无纪念日”的特殊样式 */
   span.days-matter-content {
       font-size: 14px;
       font-weight: 400;
       color: rgba(255, 255, 255, 0.7);
       /* 改为白色系 */
   }

   .days-matter-date {
       font-size: 12px;
       color: rgba(255, 255, 255, 0.9);
       margin-top: 8px;
       text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
   }

   /* --- 自定义矩形条容器 --- */
   #capsule-widgets-container {
       position: absolute;
       top: 350px;
       /* 定位在纪念日组件下方 */
       left: 30px;
       width: 150px;
       display: flex;
       flex-direction: column;
       gap: 15px;
       /* 两个矩形条之间的间距 */
   }

   /* 单个矩形条样式 */
   .capsule-widget {
       width: 100%;
       height: 50px;
       /* 高度 */
       background-color: rgba(255, 255, 255, 0.162);
       /* 浅黑色半透明 */
       backdrop-filter: blur(12px);
       -webkit-backdrop-filter: blur(12px);
       border-radius: 28px;
       /* 圆角 */
       border: 0.6px solid rgba(255, 255, 255, 0.548);
       /* 浅灰色描边 */
       display: flex;
       align-items: center;
       padding: 0 10px;
       /* 内部左右边距 */
       box-sizing: border-box;
       gap: 8px;
       /* 图标和文字的间距 */
   }

   .capsule-icon {
       width: 34px;
       /* 圆形图标大小 */
       height: 34px;
       border-radius: 50%;
       background-color: rgba(255, 255, 255, 0.2);
       /* 默认背景 */
       flex-shrink: 0;
       cursor: pointer;
       background-size: cover;
       background-position: center;
   }

   .capsule-text {
       flex-grow: 1;
       /* 占据所有剩余空间 */
       margin: 0;
       font-size: 9px;
       font-style: italic;
       /* 斜体 */
       color: white;
       /* 白色文字 */
       /* 【核心】使用text-shadow实现发光效果 */
       text-shadow: 0 0 5px rgba(255, 255, 255, 0.7), 0 0 10px rgba(255, 255, 255, 0.5);
       /* 【核心】文字长度限制 */
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
       cursor: pointer;
       /* 【核心修复】确保即使没内容也能被点击 */
       min-height: 20px;
       display: flex;
       align-items: center;
       justify-content: center;
       /* 让文字在编辑时也居中 */
   }

   /* 
        ===================================================================
         【全新 V1.57】手机框样式
        ===================================================================
        */
   body {
       /* 为背景色变化添加过渡动画 */
       transition: background-color 0.4s ease;
       background-color: #fafafa;
       /* 默认背景色 */
   }

   /* 当手机框可见时，html和body的样式 */
   html.phone-frame-visible,
   body.phone-frame-visible {
       overflow: hidden;
       /* 核心：强制隐藏外部滚动条 */
       overscroll-behavior-y: none;
       /* 禁止垂直方向的“橡皮筋”滚动效果 */
       touch-action: none;
       /* 【【【新增强化】】】完全禁止浏览器对触摸手势的默认行为（如滚动、缩放等） */
   }

   body.phone-frame-visible {
       background-color: #ffffff;
       /* 背景变为纯白 */
       /* 使用flex布局，让手机框在页面中居中显示 */
       display: flex;
       justify-content: center;
       align-items: center;
       /* 确保在所有屏幕尺寸下都能看到完整的手机 */
       padding: 1px 0;
       /* 注意：这里的 overflow: auto; 已经被上面的 overflow: hidden; 覆盖掉了 */
   }

   /* 手机框包裹层 */
   #phone-wrapper {
       width: 100%;
       height: 100%;
       /* 【新增】将此容器设置为绝对定位的基准 */
       position: relative;
       /* 核心：为所有会变化的属性添加平滑过渡动画 */
       transition: transform 0.4s ease-in-out, box-shadow 0.4s ease-in-out,
           padding 0.4s ease-in-out, border-radius 0.4s ease-in-out,
           background-color 0.4s ease-in-out, width 0.4s ease-in-out, height 0.4s ease-in-out;
       /* 【新增】为子元素的3D变换（比如translateZ）做准备，有助于优化渲染 */
       transform-style: preserve-3d;
   }

   /* 当手机框可见时，包裹层的“变身”样式 */
   body.phone-frame-visible #phone-wrapper {
       /* 设定一个固定的手机尺寸，而不是百分比 */
       width: 450px;
       height: 844px;
       min-height: 844px;
       /* 【【【核心修复】】】明确禁止flex项目收缩 */
       flex-shrink: 0;

       /* 
            ===========================================================
             【核心修改】手机大小与清晰度调整区
            ===========================================================
            说明：
            - 将 scale 的值从 0.95 改为 1，可以解决模糊问题，并让手机显示为最大尺寸。
            - 如果在您的屏幕上，手机框的阴影被浏览器边缘裁切了，您可以尝试 scale(0.98) 或 scale(0.97) 
              这样微小的缩放，在清晰度和完整可见性之间找到最佳平衡点。
            - translateZ(0) 是一个优化渲染的小技巧，它会提示浏览器启用硬件加速，可能会让动画和字体更平滑。
            */
       transform: scale(0.97) translateZ(0);

       /* 添加阴影 */
       box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);

       /* 手机边框的颜色 */
       background-color: #1c1c1c;

       /* 通过内边距“挤”出边框的厚度 */
       padding: 15px;

       /* 手机外壳的圆角 */
       border-radius: 50px;

       box-sizing: border-box;
   }

   /* 确保内部的屏幕能完美地填充手机框 */
   body.phone-frame-visible #phone-screen {
       /* 内部屏幕的圆角，比外壳小一些 */
       border-radius: 35px;
       height: 100%;
       width: 100%;
       /* 【核心新增】隐藏掉“缩放前”超出的内容 */
       overflow: hidden;
   }

   /* 确保内部的屏幕能完美地填充手机框 */
   body.phone-frame-visible #phone-screen {
       /* 内部屏幕的圆角，比外壳小一些 */
       border-radius: 35px;
       height: 100%;
       width: 100%;
   }

   /* 【新增】针对手机等小屏幕设备的响应式调整 */
   @media (max-width: 450px) {
       body.phone-frame-visible {
           /* 在小屏幕上减少上下内边距，给手机更多空间 */
           padding: 1px 0;
       }

       body.phone-frame-visible #phone-wrapper {
           /*
                ===========================================================
                 【核心修改】移动端手机大小调整区
                ===========================================================
                说明：
                - 通过修改下面的 scale 值，可以控制手机在移动端浏览器中的整体大小。
                - 0.8 代表缩小到80%，0.75 代表75%，数值越小，手机看起来就越小。
                - 建议在 0.7 到 0.9 之间寻找最适合您手机的值。
                */
           transform: scale(0.829) translateZ(0);
       }
   }

   /* 【全新 V1.79 修正】当在手机框模式下，应用微缩放并调整布局间距 */
   body.phone-frame-visible #couple-space-screen .couple-space-content {
       transform: scale(1.1);
       /* 轻微放大以保证清晰度，您可以微调此值 */
       padding-top: 40px;
       /* 减小顶部内边距 */
       gap: -15px;
       /* 减小主要元素间的通用间距 */
   }

   body.phone-frame-visible #polaroid-container {
       margin-bottom: 5px;
       /* 大幅减小拍立得和头像间的间距 */
   }

   body.phone-frame-visible #couple-space-screen .couple-avatars-container {
       margin-top: 55px;
       /* 大幅减小头像和上方元素的间距 */
   }

   body.phone-frame-visible #couple-space-screen .couple-space-prompt {
       margin-top: 30px;
       /* 减小提示语和头像的间距 */
   }

   body.phone-frame-visible .couple-bottom-nav {
       bottom: 60px;
       /* 向上移动底部导航栏，使其更紧凑 */
   }


   /* 
        ===================================================================
         【全新 V1.57.3】为手机框模式下的Dock栏设置专属位置
        ===================================================================
        */
   body.phone-frame-visible #bottom-dock {
       /*
            ===========================================================
             【核心】Dock栏底部距离调整区 (仅在手机框模式下生效)
            ===========================================================
            说明：
            - 我们将 `bottom` 的值从原来的 `-100px` 覆盖为一个正数。
            - 正数 `30px` 代表Dock栏的底部距离其容器(#home-screen)的底部有30像素的间距。
            - 您可以把 30px 这个值改大（比如 40px）或改小（比如 20px），
              来精确控制Dock栏在手机框内的垂直位置，直到您满意为止。
            */
       bottom: 30px;
   }

   /* 
        ===================================================================
         【核心 V1.60】为手机框模式下的输入区设置专属位置
        ===================================================================
        */
   body.phone-frame-visible #input-controls-row {
       /*
            ===========================================================
             【核心】输入区整体位置微调 (手机框模式)
            ===========================================================
            说明：
            - 这里专门控制 “手机框模式” 下，整个输入区域的水平位置。
            - 它的值会覆盖掉上面为全屏模式设置的值。
            - 您可以修改下面的 left 值来解决您在截图中看到的对齐问题。
              我根据截图估算了一个值，您可以自行微调。
            */
       left: -4px;
       top: -6.5px;

       /*
            ===========================================================
             【新增】输入区整体缩放调整 (手机框模式)
            ===========================================================
            说明：
            - 通过修改下面的 scale 值，可以整体放大或缩小 “手机框模式” 下的输入区域。
            - 1.05 代表放大 5%，1.1 代表放大 10%。
            - 1 代表原始大小，0.95 代表缩小 5%。
            - 您可以微调这个数值，直到获得满意的视觉效果。
            */
       transform: scale(1.014);

   }


   /* 
        ===================================================================
         【全新 V1.65】情侣空间专属样式
        ===================================================================
        */
   #couple-space-screen,
   #couple-space-invite-screen,
   #couple-theme-screen {
       /* 【新增】让主题设置页也应用此样式 */
       background-color: #fff9eb;
       /* 专属背景色 */
       /* 【核心修改】移除背景图相关属性，让这里只负责纯色背景 */
   }

   /* 【【【全新】】】情侣空间半透明背景图层样式 */
   #couple-space-background-overlay {
       display: none;
       /* 默认隐藏 */
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       z-index: 0;
       /* 层级低于内容，高于纯色背景 */
       background-size: cover;
       background-position: center;
       opacity: 0.75;
       /* 【【【核心】】】设置75%的透明度 */
   }

   /* 【【【全新】】】当设置了背景图时，通过这个类来显示背景图层 */
   #couple-space-screen.has-custom-bg #couple-space-background-overlay {
       display: block;
   }

   /* --- 【新增】动态卡片中 “删除” 图标独立位置微调区 --- */
   .delete-status-btn {
       position: relative;
       /* 关键：开启相对定位，允许我们移动它 */

       /* 
             * === 上下位置微调 ===
             * 修改下面的 top 值来控制图标的垂直位置。
             * - 负数 (例如 top: -5px;) 会将图标向上移动。
             * - 正数 (例如 top: 5px;) 会将图标向下移动。
             * - 0px 表示保持在原始垂直位置。
             */
       top: 3px;
   }

   .couple-header {
       position: relative;
       z-index: 10;
       flex-shrink: 0;
       height: 120px;
       /* 增加高度以容纳弧形 */
       background-color: #ffe5a5;
       /* 专属顶栏颜色 */
       border-bottom-left-radius: 20px;
       /* 核心：实现弧形效果 */
       border-bottom-right-radius: 20px;
       /* 核心：实现弧形效果 */
       display: flex;
       align-items: flex-start;
       /* 顶部对齐 */
       justify-content: space-between;
       padding: 50px 5px 10px 5px;
       /* 调整内边距适应新布局 */
       box-sizing: border-box;
       color: #2c2c2c;
       /* 标题字体颜色 */
       /* 【新增】为顶栏添加柔和的阴影 */

   }

   /* --- 【【【核心修复 V3.8.5】】】 --- */
   /* 将消除缝隙的样式，精准地只应用在情侣空间主屏幕上，不再影响其他页面 */
   #couple-space-screen .couple-header {
       margin-bottom: -22px;
   }

   .couple-header h1 {
       flex-grow: 1;
       text-align: center;
       margin: 0;
       /* --- 【核心修改】使用 em 单位实现等比缩放 --- */
       /* 1.2em 表示基础大小是全局字体的1.2倍 */
       font-size: 1.12em !important;
       font-weight: 500 !important;
       color: #2c2c2c;
       position: relative;
       top: 11px;
       /* 【核心修正】移除固定的transform，让flexbox自动处理居中 */
   }

   .couple-header .header-icon {
       background: none;
       border: none;
       cursor: pointer;
       padding: 0;
       display: flex;
       align-items: center;
       justify-content: center;
       width: 44px;
       height: 44px;
   }

   /* 底部装饰条 */
   .couple-footer {
       flex-shrink: 0;
       height: 60px;
       /* 底栏高度 */
       width: 100%;
       background-color: #ffe5a5;
       /* 专属底栏颜色 */
       box-shadow: 0 -2.8px 5px rgba(255, 255, 255, 0.1);
   }

   /* 中间内容区 */
   .couple-space-content {
       flex-grow: 1;
       display: flex;
       flex-direction: column;
       justify-content: center;
       align-items: center;
       gap: 20px;
   }

   /* 头像容器 */
   .couple-avatars-container {
       position: relative;
       width: 220px;
       height: 120px;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .couple-avatar-wrapper {
       position: absolute;
       width: 120px;
       height: 120px;
       border-radius: 50%;
       cursor: pointer;
       /* 【新增】为头像添加默认的、更精致的阴影 */
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);
       /* 【修改】为阴影和缩放变化同时添加平滑过渡效果 */
       transition: box-shadow 0.3s ease-in-out, transform 0.3s ease-in-out;
   }

   /* 我方头像在左，在下层 */
   .my-avatar-wrapper {
       left: 0;
       z-index: 1;
   }

   /* 对方头像在右，在上层 */
   .partner-avatar-wrapper {
       right: 0;
       z-index: 2;
       /* border: 4px solid white; */
       /* 【核心修改】移除或注释掉此行 */
       box-sizing: border-box;
   }

   .couple-avatar {
       width: 100%;
       height: 100%;
       border-radius: 50%;
       object-fit: cover;
       border: 3.8px solid white;
       /* 我方头像的白色描边 */
       box-sizing: border-box;
   }

   .partner-avatar-placeholder {
       border: 2.5px solid #ffe5a5;
       /* 内层黄色描边 */
       background-color: white;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   /* 1. 定义动画本身：从无光 -> 发光 -> 无光 + 从小 -> 放大 -> 缩小 */
   @keyframes breathing-glow {
       0% {
           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12), 0 0 5px rgba(255, 220, 130, 0.2);
           transform: scale(1);
           /* 初始大小 */
       }

       50% {
           box-shadow: 0 4px 16px rgba(0, 0, 0, 0.18), 0 0 20px rgba(255, 255, 255, 0.546);
           transform: scale(1.05);
           /* 放大5% */
       }

       100% {
           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12), 0 0 5px rgba(255, 220, 130, 0.2);
           transform: scale(1);
           /* 恢复初始大小 */
       }
   }

   /* 2. 触发规则：当鼠标悬停在头像上时，应用这个动画 */
   .couple-avatar-wrapper:hover {
       animation: breathing-glow 3s ease-in-out infinite;
   }

   /* 
        ===================================================================
         【全新 V1.68】特定标题字体加粗
        ===================================================================
        */
   #world-book-screen .header h1,
   #couple-space-screen .couple-header h1,
   #couple-space-invite-screen .couple-header h1 {
       font-weight: 550 !important;
       /* 您可以修改 600 这个值来调整粗细 */
   }

   /* 提示文字 */
   .couple-space-prompt {
       color: #ffd063;
       font-size: 16px;
       font-weight: 550;
   }

   /* 邀请好友列表 */
   #couple-invite-list-container {
       padding-top: 37px;
       /* 列表与顶栏的间距 */
       padding-left: 0;
       /* 【核心修改】移除容器的左边距 */
       padding-right: 0;
       /* 【核心修改】移除容器的右边距 */
       overflow-y: auto;
       flex-grow: 1;
   }

   .couple-invite-item {
       display: flex;
       align-items: center;
       padding: 8px 25px;
       cursor: pointer;
   }

   .couple-invite-item:hover {
       background-color: rgba(140, 140, 140, 0.192);
   }

   .couple-invite-avatar {
       width: 55px;
       height: 55px;
       border-radius: 50%;
       border: 2px solid white;
       object-fit: cover;
       margin-right: 15px;
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
   }

   .couple-invite-name {
       font-size: 18px;
       font-weight: 500;
       color: #555;
   }

   /* 发送成功提示框 */
   #success-toast {
       position: absolute;
       top: 120px;
       /* 从顶栏下方出现 */
       left: 50%;
       transform: translate(-50%, -20px);
       /* 初始位置偏上 */
       background-color: #ffffff;
       color: #4d4d4d;
       padding: 10px 20px;
       border-radius: 20px;
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
       display: flex;
       align-items: center;
       gap: 8px;
       font-size: 14px;
       font-weight: 550;
       z-index: 9999;
       opacity: 0;
       visibility: hidden;
       transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s;
   }

   #success-toast.show {
       opacity: 1;
       visibility: visible;
       transform: translate(-50%, 0);
   }

   /* 
        ===================================================================
         【全新 V1.69】情侣关系卡片及弹窗样式
        ===================================================================
        */
   .couple-status-card {
       background-color: #ffffff;
       border-radius: 12px;
       padding: 15px 22px 12px 15px;
       width: 240px;
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
       border: 1px solid #f0f0f0;
       display: flex;
       flex-direction: column;
       position: relative;
       /* 【核心修复】添加此行以创建新的堆叠上下文 */
   }

   .couple-status-card.processed {
       opacity: 0.7;
       pointer-events: none;
       /* 让处理过的卡片不可点击 */
   }

   .couple-status-card.clickable:hover {
       cursor: pointer;
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
   }

   .couple-status-header {
       display: flex;
       justify-content: space-between;
       align-items: flex-start;
       gap: 12px;
   }

   .couple-status-text-content {
       flex-grow: 1;
   }

   .couple-status-title {
       /* --- 在这里修改主标题的字体大小 --- */
       font-size: 14.9px;
       /* --- 在这里修改主标题的字体粗细 (400=正常, 600=粗) --- */
       font-weight: 550;
       color: #353535;
       margin: 0 0 5px 0;
   }

   .couple-status-subtitle {
       font-size: 13.5px;
       color: #888;
       margin: 0;
   }

   .couple-status-icon {
       width: 44px;
       height: 44px;
       border-radius: 8px;
       display: flex;
       justify-content: center;
       align-items: center;
       flex-shrink: 0;
   }

   .status-icon-pink {
       background-color: #fb97c4;
   }

   .status-icon-blue {
       background-color: #6ca0f7;
   }

   .couple-status-divider {
       height: 1px;
       background-color: #f0f0f0;
       margin: 9px 0;
   }

   .couple-status-footer {
       font-size: 13px;
       color: #aaa;
       padding-top: 1px;
       /* 让分割线上方空间稍大 */
   }

   /* 邀请弹窗样式 */
   .invite-modal-card {
       background: white;
       padding: 25px;
       border-radius: 18px;
       box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
       width: 85%;
       max-width: 320px;
       display: flex;
       flex-direction: column;
       align-items: center;
       gap: 18px;
       position: relative;
       transform: scale(0.95);
       transition: transform 0.2s ease-in-out;
   }

   .modal-overlay.visible .invite-modal-card {
       transform: scale(1);
   }

   .invite-modal-close-btn {
       position: absolute;
       top: 10px;
       right: 10px;
       width: 30px;
       height: 30px;
       border: none;
       background: none;
       font-size: 24px;
       color: #aaa;
       cursor: pointer;
   }

   @keyframes avatars-approach {
       from {
           transform: translateX(-15px);
       }

       to {
           transform: translateX(0px);
       }
   }

   .invite-avatars-animation-container {
       width: 140px;
       /* 总宽度 */
       height: 80px;
       display: flex;
       justify-content: center;
       /* 水平居中 */
       position: relative;
       /* 为头像定位提供基准 */
       left: 7px;
   }

   .invite-avatars-animation-container.animate .invite-modal-ai-avatar {
       animation: avatars-approach 0.5s ease-in-out forwards;
   }

   .invite-avatars-animation-container.animate .invite-modal-user-avatar {
       animation: avatars-approach 0.5s ease-in-out forwards reverse;
   }

   .invite-modal-avatar {
       width: 80px;
       height: 80px;
       border-radius: 50%;
       border: 3px solid white;
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
       object-fit: cover;
       background-color: #eee;
       position: absolute;
   }

   .invite-modal-ai-avatar {
       right: 0;
       z-index: 2;
       transform: translateX(15px);
       /* 初始靠右 */
   }

   .invite-modal-user-avatar {
       left: 0;
       z-index: 1;
       transform: translateX(-15px);
       /* 初始靠左 */
   }

   .invite-modal-prompt {
       font-size: 17px;
       font-weight: 500;
       color: #444;
       text-align: center;
       margin: 10px 0;
   }

   .invite-modal-actions {
       display: flex;
       flex-direction: column;
       width: 100%;
       gap: 12px;
       margin-top: 10px;
   }

   .invite-modal-btn {
       width: 100%;
       padding: 14px;
       border: none;
       border-radius: 12px;
       font-size: 16px;
       font-weight: 600;
       color: white;
       cursor: pointer;
       transition: transform 0.1s ease;
   }

   .invite-modal-btn:active {
       transform: scale(0.97);
   }

   .accept-btn {
       background-color: #fb97c4;
   }

   .reject-btn {
       background-color: #6ca0f7;
   }



   /* 
        ===================================================================
         【全新 V1.92 最终修复】修复PC端SVG图标“吞”点击事件的问题
        ===================================================================
        */
   .app-icon-upload-btn svg {
       pointer-events: none;
   }

   /* 
        ===================================================================
         【全新 V2.21】世界书功能专属样式
        ===================================================================
        */

   /* --- 【新增】素材页面专属样式 --- */
   #preset-page-assets {
       display: flex;
       flex-direction: column;
       gap: 20px;
       /* “文风”和“朋友圈素材”两大块之间的间距 */
   }

   /* 【新增】包裹灰色块和加号的父容器 */
   .asset-section-top-wrapper {
       display: flex;
       align-items: center;
       gap: 10px;
       /* 这是灰色块和外部+号的间距 */
   }

   .asset-section-header {
       display: flex;
       align-items: center;
       gap: 10px;
       background-color: #f0f0f0;
       padding: 12px 15px;
       border-radius: 19px;
       flex-grow: 1;
       /* 让灰色块占据所有剩余空间 */
   }

   .asset-section-title-wrapper {
       flex-grow: 1;
   }

   .asset-section-title-wrapper h3 {
       font-size: 16px;
       font-weight: 500;
       color: #333;
       margin: 0 0 4px 0;
   }

   .asset-section-title-wrapper p {
       font-size: 13px;
       color: #888;
       margin: 0;
   }

   .asset-section-arrow {
       background: none;
       border: none;
       cursor: pointer;
       padding: 5px;
       flex-shrink: 0;
       transform-origin: center;
   }

   .asset-section-arrow.expanded {
       /* 【核心修正】在旋转的同时，向上移动2像素来修正视觉位置 */
       transform: rotate(180deg) translateY(5px);
   }

   .asset-section-add-btn {
       background: none;
       border: none;
       cursor: pointer;
       width: 32px;
       height: 32px;
       display: flex;
       align-items: center;
       justify-content: center;
       flex-shrink: 0;
   }

   .asset-list-container {
       padding-left: 15px;
       /* 列表左侧内边距 */
       max-height: 0;
       overflow: hidden;
       transition: max-height 0.3s ease-in-out;
   }

   .asset-list-container.expanded {
       max-height: 1000px;
       /* 一个足够大的值来容纳内容 */
   }

   .asset-list-item {
       display: flex;
       align-items: center;
       gap: 15px;
       padding: 12px 0;
       border-bottom: 1px solid #f0f0f0;
   }

   .asset-list-item:last-child {
       border-bottom: none;
   }

   .asset-list-item .drag-handle {
       color: #ccc;
       cursor: grab;
   }

   .asset-list-item .asset-list-name {
       flex-grow: 1;
       font-size: 16px;
       color: #333;
   }

   .asset-list-item .asset-list-actions {
       display: flex;
       align-items: center;
       /* 【核心修正】设置固定宽度和间距，以实现与顶部的垂直对齐 */
       width: 74px;
       /* 32(按钮)+10(间距)+32(按钮) = 74 */
       justify-content: space-between;
       /* 让两个图标分别靠在容器两边 */
   }

   .asset-list-item .asset-list-actions button {
       background: none;
       border: none;
       cursor: pointer;
       width: 32px;
       height: 32px;
       display: flex;
       align-items: center;
       justify-content: center;
   }

   /* --- 【新增】素材编辑器页面专属样式 --- */
   .asset-editor-form {
       display: flex;
       flex-direction: column;
       gap: 25px;
   }

   .asset-editor-row {
       display: flex;
       align-items: flex-start;
       /* 顶部对齐，以防提示语影响 */
       gap: 20px;
   }

   .asset-editor-row .preset-form-group {
       flex: 1;
   }

   .influence-input-wrapper {
       display: flex;
       align-items: center;
       gap: 8px;
   }

   .influence-input-wrapper input {
       width: 100px;
       /* 固定宽度 */
       text-align: center;
       /* 文字居中 */
   }

   .influence-input-wrapper .unit-label {
       font-size: 16px;
       color: #333;
   }

   .image-link-inputs {
       display: flex;
       gap: 10px;
       align-items: center;
   }

   .image-link-inputs input[type="text"] {
       flex-grow: 1;
   }

   .image-link-inputs input#new-social-asset-keyword-input {
       flex-grow: 0;
       width: 50%;
       /* 关键词框为链接框的一半 */
   }

   .image-link-inputs button {
       width: 44px;
       height: 44px;
       flex-shrink: 0;
       border: none;
       background: none;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   #social-asset-image-list {
       display: flex;
       flex-direction: column;
       gap: 12px;
       margin-top: 15px;
   }

   .asset-image-item {
       display: flex;
       align-items: center;
       gap: 10px;
       padding: 8px;
       /* 通过内边距控制高度 */
       border: 1.5px solid #dcdcdc;
       border-radius: 12px;
       background-color: #fff;
   }

   .asset-image-item .item-name {
       /* 命名区 */
       font-weight: 500;
       color: #333;
       padding: 5px 8px;
       border-radius: 6px;
       cursor: pointer;
       min-width: 40px;
       text-align: center;
       outline: none;
   }

   .asset-image-item .item-name:empty::before {
       content: "命名";
       color: #aaa;
       font-style: italic;
   }

   .asset-image-item .item-url {
       /* 链接灰框 */
       flex-grow: 1;
       /* 占据所有剩余空间 */
       padding: 5px 10px;
       /* 增加内边距让框看起来更大 */
       border-radius: 6px;
       background-color: #f5f5f5;
       font-size: 12px;
       color: #555;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
   }

   .asset-image-item .item-actions {
       /* 叉号和勾选框的容器 */
       display: flex;
       align-items: center;
       gap: 8px;
       /* 叉号和勾选框的间距 */
   }

   .asset-image-item .item-actions button {
       /* 通用按钮样式 */
       width: 32px;
       height: 32px;
       border: none;
       background: none;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .asset-image-item .font-entry-checkbox {
       /* 勾选框样式 (复用字体设置的) */
       width: 22px;
       /* 减小勾选框大小 */
       height: 22px;
       /* 减小勾选框大小 */
       border: 2px solid #ccc;
       border-radius: 8px;
       background-color: #f0f0f0;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
       transition: all 0.2s ease;
   }

   .asset-image-item .font-entry-checkbox.checked {
       background-color: #353333;
       border-color: #353333;
   }

   .asset-image-item .font-entry-checkbox.checked svg path {
       fill: #fff;
   }


   /* --- 主页面布局 --- */
   #world-book-screen {
       flex-direction: column;
       /* 确保顶栏、内容、底栏垂直排列 */
   }

   .preset-main-container {
       flex-grow: 1;
       /* 占据中间所有可用空间 */
       overflow-y: auto;
       /* 内容超出时可滚动 */
       position: relative;
       /* 为页面切换提供定位基准 */
   }

   .preset-page {
       position: absolute;
       /* 所有页面都叠在一起 */
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       padding: 20px;
       box-sizing: border-box;
       opacity: 0;
       visibility: hidden;
       transition: opacity 0.3s, visibility 0.3s;
       overflow-y: auto;
       /* 【核心新增】为每个独立的页面开启自己的垂直滚动条 */
   }

   .preset-page.active {
       opacity: 1;
       visibility: visible;
   }

   /* --- 底部导航栏 --- */
   .preset-bottom-nav {
       flex-shrink: 0;
       display: flex;
       justify-content: space-around;
       align-items: center;
       height: 80px;
       /* 您可以微调这个高度 */
       background-color: #fafafa;
       border-top: 1px solid #e0e0e0;
   }

   .preset-nav-item {
       display: flex;
       flex-direction: column;
       align-items: center;
       gap: 4px;
       cursor: pointer;
       opacity: 0.65;
       /* 未选中时降低不透明度 */
       transition: opacity 0.2s;
       /* --- 【核心新增】让每个按钮平分底部导航栏的宽度 --- */
       flex: 1;
       /* --- 【核心新增】增加上下的可点击区域，让按钮更高 --- */
       padding: 10px 0;
   }

   .preset-nav-item.active {
       opacity: 1;
       /* 选中时完全不透明 */
   }

   .preset-nav-item span {
       font-size: 12px;
       color: #333;
       font-weight: 500;
   }

   /* --- 角色列表项 --- */
   #preset-page-role {
       display: flex;
       flex-direction: column;
       gap: 5px;
       /* 【修复】减小列表项之间的间距 */
   }

   .preset-list-item {
       display: flex;
       align-items: center;
       padding: 12px;
       /* background-color: #f0f0f0; */
       /* <-- 移除或注释掉这一行 */
       border-radius: 12px;
       gap: 15px;
   }

   /* 【新增】只为禁词项添加灰色背景 */
   .preset-list-item.forbidden-words-item {
       background-color: #f0f0f0;
       border-radius: 25px;
       overflow: hidden;
       flex-shrink: 0;
   }

   .preset-list-avatar {
       width: 50px;
       height: 50px;
       border-radius: 50%;
       background-color: #ddd;
       object-fit: cover;
       cursor: pointer;
       flex-shrink: 0;
   }

   .preset-list-name {
       flex-grow: 1;
       font-size: 16px;
       font-weight: 500;
       color: #333;
   }

   .preset-list-actions {
       display: flex;
       align-items: center;
       /* 【核心修改】减小图标间距，并让整体靠右 */
       gap: 2px !important;
       margin-left: auto;
   }

   /* 【核心修改】将按钮样式移出，并为开关腾出空间 */
   .preset-list-actions button {
       background: none;
       border: none;
       cursor: pointer;
       padding: 5px;
       width: 32px;
       height: 32px;
       display: flex;
       align-items: center;
       justify-content: center;
   }

   /* --- 编辑/创建角色页面表单 --- */
   /* --- 【【【核心新增】】】预设列表项 --- */
   #preset-page-offline {
       display: flex;
       flex-direction: column;
       gap: 15px;
       /* 列表项之间的间距 */
   }

   .preset-list-item-offline {
       display: flex;
       align-items: center;
       padding: 12px 15px;
       background-color: #ffffff;
       border-radius: 12px;
       gap: 10px;
       border: 1px solid #e0e0e0;
   }

   .preset-list-item-offline .drag-handle {
       cursor: grab;
       flex-shrink: 0;
       color: #ccc;
   }

   .preset-list-item-offline .preset-list-name {
       flex-grow: 1;
   }

   .preset-list-item-offline .preset-list-actions .switch {
       transform: scale(0.85);
       /* 稍微缩小开关以适应布局 */
   }

   .preset-editor-form {
       display: flex;
       flex-direction: column;
       gap: 25px;
       /* 表单组之间的间距 */
   }

   .preset-form-group label {
       display: block;
       font-size: 14px;
       font-weight: 500;
       color: #555;
       margin-bottom: 8px;
   }

   .preset-input-box,
   .preset-textarea-box,
   .preset-select-wrapper {
       width: 100%;
       box-sizing: border-box;
       padding: 12px;
       border-radius: 8px;
       border: 1px solid #ccc;
       font-size: 16px;
       background-color: #fff;
   }

   .preset-textarea-box {
       width: 100%;
       box-sizing: border-box;
       min-height: 185px;
       max-height: 185px;
       overflow-y: auto;
       /* 样式统一化 */
       padding: 12px;
       border-radius: 8px;
       border: 1px solid #ccc;
       font-size: 16px;
       background-color: #fff;
       resize: vertical;
       /* 允许用户垂直拖动调整大小 */
       outline: none;
       transition: background-color 0.2s, border-color 0.2s;
   }

   .preset-input-box,
   .preset-textarea-box {
       position: relative;
       /* 为内部的span和input提供定位基准 */
   }

   #forbidden-words-content-input {
       width: 100%;
       box-sizing: border-box;
       min-height: 200px;
       border-radius: 8px;
       border: 1px solid #ccc;
       padding: 10px;
       /* --- 【修改】调大实际输入文字的大小 --- */
       font-size: 16.8px !important;
       resize: vertical;
   }

   /* --- 【新增】单独控制提示文字的样式 --- */
   #forbidden-words-content-input::placeholder {
       font-size: 15px;
       /* 将提示文字调得更大 */
       color: #bbb;
       /* 可以顺便调整一下颜色，让它浅一点 */
   }

   .preset-select-wrapper select {
       width: 100%;
       border: none;
       background: none;
       font-size: 15px;
       outline: none;
   }

   .preset-editable-text:empty::before {
       content: '点击输入内容...';
       color: #aaa;
       font-style: italic;
       font-size: 15px;
       /* 【新增】调整占位符文字的大小 */
   }

   /* --- 原地编辑输入框样式 (更新后) --- */
   .preset-inplace-editor {
       width: 100%;
       height: 100%;
       font-size: 15px;
       border: none;
       outline: none;
       background: transparent;
       padding: 0;
       margin: 0;
       box-sizing: border-box;
   }

   /* --- 【【【核心新增】】】模拟原地编辑的 Textarea 样式 --- */
   .styled-textarea {
       width: 100%;
       box-sizing: border-box;
       padding: 12px;
       border-radius: 8px;
       font-size: 16px;
       resize: vertical;
       /* 允许用户垂直拖动调整大小 */
       /* 样式统一化 */
       border: 1px solid #ccc;
       background-color: #fff;
       color: #333;
       outline: none;
       transition: background-color 0.2s, border-color 0.2s;
   }

   /* 获得焦点时：边框变色提示 */
   .styled-textarea:focus {
       border-color: #aaa;
   }

   /* 为所有这些输入框设置统一的占位符样式 */
   .styled-textarea::placeholder {
       color: #aaa;
       font-style: italic;
       font-size: 15px;
   }


   /* --- 关联其他 下拉框 --- */
   .preset-dropdown-container {
       border: 1px solid #ccc;
       border-radius: 8px;
       overflow: hidden;
       width: 70%;
       /* 【修复】将宽度设置为父容器的一半 */
   }

   .preset-dropdown-header {
       display: flex;
       justify-content: space-between;
       align-items: center;
       padding: 13px 12px;
       /* 【修复】增加上下内边距，拉高整体高度 */
       cursor: pointer;
       background-color: #fff;
   }

   .preset-dropdown-arrow {
       transform: rotate(0deg);
       /* 默认是正三角 */
       transition: transform 0.2s ease-in-out;
   }

   .preset-dropdown-container.expanded .preset-dropdown-arrow {
       transform: rotate(180deg);
       /* 展开时旋转为倒三角 */
   }

   .preset-dropdown-list {
       max-height: 0;
       overflow-y: auto;
       transition: max-height 0.3s ease-in-out;
       background-color: #fafafa;
   }

   .preset-dropdown-container.expanded .preset-dropdown-list {
       max-height: 98px;
       /* 约等于两个item的高度+padding */
       border-top: 1px solid #ccc;
   }

   .preset-dropdown-item {
       display: flex;
       align-items: center;
       gap: 10px;
       padding: 16px 12px;
       /* 【修复】增加上下内边距，拉高整体高度 */
       border-bottom: 1px solid #eee;
   }

   .preset-dropdown-item label {
       transform: translateY(4.6px);
       /* 【修复】将文字整体下移1像素，实现视觉上的垂直居中 */
   }

   .preset-dropdown-item:last-child {
       border-bottom: none;
   }

   .preset-dropdown-item input[type="checkbox"] {
       width: 20px;
       height: 20px;
       accent-color: #353333;
       /* 美化勾选框颜色 */
   }

   /* 
        ===================================================================
         【全新 V2.03】对方/我的信息页面专属样式
        ===================================================================
        */
   /* --- 【【【全新增补】】】修复信息页名字为空时无法点击的BUG --- */
   #ai-settings-name-display:empty::before,
   #user-settings-name-display:empty::before {
       content: "点击设置名字";
       color: #b0b0b0;
       /* 这是一个柔和的灰色，提示用户 */
       font-style: italic;
       /* 斜体，以区分真实名字 */
   }

   #ai-settings-name-display,
   #user-settings-name-display {
       min-height: 20px;
       /* 确保即使在极端情况下也有一个最小的可点击高度 */
       display: inline-block;
       /* 确保min-height生效 */
   }


   .info-screen-form {
       padding: 20px 25px;
       display: flex;
       flex-direction: column;
       gap: 28px;
       /* 各个板块之间的间距 */
   }

   .info-avatar-section {
       display: flex;
       align-items: center;
       gap: 15px;
       margin-bottom: 10px;
       /* 与下方人设框的间距 */
   }

   .info-avatar {
       width: 72px;
       height: 72px;
       border-radius: 50%;
       background-color: #eee;
       object-fit: cover;
       border: 2px solid white;
       box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
   }

   .info-name {
       font-size: 16px;
       /* 将字号从20px改为18px */
       font-weight: 550;
       /* 稍微加粗一点以保持清晰 */
       color: #333;
       padding: 5px;
       /* 增加一些内边距，方便点击 */
       border-radius: 6px;
       /* 增加圆角，编辑时更好看 */
   }

   .info-name:focus {
       outline: none;
       background-color: #f0f2f5;
       /* 编辑时给一个背景色提示 */
   }

   .info-textarea {
       width: 100%;
       box-sizing: border-box;
       min-height: 120px;
       border-radius: 12px;
       border: 1px solid #e0e0e0;
       padding: 12px;
       font-size: 14px !important;
       /* 根据要求设置默认字体大小 */
       resize: vertical;
       background-color: #f9f9f9;
   }

   .info-textarea:focus {
       outline: none;
       border-color: #aaa;
       background-color: #fff;
   }

   /* 表情包库列表 */
   .sticker-pack-list {
       display: flex;
       flex-direction: column;
       gap: 12px;
   }

   .sticker-pack-item {
       display: flex;
       align-items: center;
       gap: 10px;
       padding: 10px;
       border: 1.5px solid #dcdcdc;
       border-radius: 12px;
       background-color: #fff;
       cursor: pointer;
   }

   .sticker-pack-name {
       flex-grow: 1;
       font-size: 16px;
       color: #444;
   }

   .sticker-pack-name.default-pack {
       color: #888;
       /* 默认包的字体颜色浅一些 */
   }

   .sticker-pack-actions button {
       width: 32px;
       height: 32px;
       border: none;
       background: none;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
   }

   .add-sticker-pack-btn svg {
       fill: #515151;
   }

   /* 
        ===================================================================
         【全新 V2.06 最终修复版】表情包库新布局样式
        ===================================================================
        */
   .sticker-pack-list .sticker-pack-item {
       display: flex;
       align-items: center;
       gap: 10px;
       padding: 0;
       border: none;
       background-color: transparent;
   }

   /* 【核心修复】为名字框和添加按钮容器设置统一的宽度，与关联框一致 */
   .sticker-pack-name-wrapper {
       flex: 1;
       /* 占据所有可用空间 */
       min-width: 0;
       /* 允许flex item收缩 */
   }

   .sticker-pack-name {
       display: block;
       /* 确保它能撑满父容器 */
       width: 100%;
       box-sizing: border-box;
       /* 确保 padding 不会撑大盒子 */
       font-size: 16px;
       color: #444;
       height: 48px;
       padding: 0 15px;
       line-height: 48px;
       border: 1.5px solid #dcdcdc;
       border-radius: 12px;
       background-color: #fff;
       cursor: pointer;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
   }

   .sticker-pack-name:empty::before {
       content: " ";
   }

   .sticker-pack-name.default-pack {
       color: #888;
   }

   .sticker-pack-actions {
       display: flex;
       align-items: center;
       gap: 12px;
       /* 【核心新增】让所有动作区宽度统一且内容靠右 */
       width: 90px;
   }

   .sticker-pack-actions .delete-sticker-pack-btn,
   .sticker-pack-actions .add-sticker-pack-btn {
       width: 32px;
       height: 32px;
       border: none;
       background: none;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
       flex-shrink: 0;
       /* 防止被压缩 */
   }

   /* 【核心修复】使用容器包裹勾选框，并替换为SVG方案 */
   .sticker-pack-checkbox-wrapper {
       width: 18px;
       height: 18px;
       border: 1.5px solid #ccc;
       border-radius: 6px;
       background-color: #fff;
       display: flex;
       justify-content: center;
       align-items: center;
       cursor: pointer;
       transition: background-color 0.2s, border-color 0.2s;
   }

   .sticker-pack-checkbox-wrapper.checked {
       background-color: #353333;
       border-color: #353333;
   }

   /* 默认隐藏SVG */
   .sticker-pack-checkbox-wrapper svg {
       display: none;
   }

   /* 选中时显示SVG */
   .sticker-pack-checkbox-wrapper.checked svg {
       display: block;
   }

   /* 
        ===================================================================
         【全新 V2.06 修复版】管理表情页面专属样式
        ===================================================================
        */
   .manage-stickers-header-actions {
       display: flex;
       align-items: center;
       /* 【新增】将按钮组整体左移 */
       position: relative;
       right: 8px;
   }

   .delete-mode-btn {
       background-color: #333;
       color: white;
       border: none;
       /* 【修改】进一步缩小按钮 */
       padding: 4px 10px;
       border-radius: 7px;
       font-size: 12px;
       font-weight: 500;
       cursor: pointer;
       margin-left: 8px;
       /* 【新增】为按钮添加过渡动画 */
       transition: opacity 0.2s, transform 0.2s;
       transform: scale(0.95);
       /* 初始稍微缩小 */
   }

   .delete-mode-btn#cancel-sticker-delete-btn {
       background-color: #e5e5e5;
       color: #333;
   }

   .sticker-management-container {
       padding: 15px 20px;
   }

   .sticker-pack-editable-title {
       font-size: 16px;
       font-weight: 550;
       color: #333;
       padding: 5px;
       border-radius: 6px;
       outline: none;
       display: inline-block;
       margin-bottom: 20px;
   }

   .sticker-management-grid {
       display: grid;
       grid-template-columns: repeat(4, minmax(0, 1fr));
       /* 强制4列 */
       gap: 15px;
   }

   .manage-sticker-item-wrapper {
       position: relative;
       aspect-ratio: 1 / 1;
   }

   /* 【核心修复】为管理页的表情项和添加按钮设置独立的、更小的样式 */
   #manage-stickers-screen .sticker-item,
   #manage-stickers-screen .add-sticker-btn-wrapper {
       width: 100%;
       height: 100%;
       /* 继承聊天面板的公共样式 */
       position: relative;
       display: flex;
       justify-content: center;
       align-items: center;
       background-color: #fefefe;
       border-radius: 12px;
       border: 1px solid rgba(0, 0, 0, 0.04);
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
       cursor: pointer;
       -webkit-touch-callout: none;
       user-select: none;
   }

   #manage-stickers-screen .sticker-item img {
       width: 100%;
       height: 100%;
       object-fit: contain;
       border-radius: 12px;
   }

   /* 确保添加按钮不会过大 */
   #manage-stickers-screen .add-sticker-btn-wrapper {
       transform: scale(1);
       /* 覆盖掉可能继承的缩放 */
   }

   .sticker-delete-checkbox {
       position: absolute;
       top: -5px;
       right: -5px;
       width: 22px;
       height: 22px;
       border: 1.5px solid #ccc;
       border-radius: 50%;
       background-color: white;
       cursor: pointer;
       display: flex;
       justify-content: center;
       align-items: center;
       opacity: 0;
       /* 默认隐藏 */
       pointer-events: none;
       transition: opacity 0.2s ease;
       z-index: 5;
   }

   /* 【核心修复】当管理页面处于删除模式时，才显示勾选框 */
   #manage-stickers-screen.delete-mode .sticker-delete-checkbox {
       opacity: 1;
       pointer-events: auto;
   }

   .sticker-delete-checkbox.checked {
       background-color: #353333;
       border-color: #353333;
   }


   /* 
        ===================================================================
         【【【全新】】】智能响应式布局：处理矮屏幕下的导航栏
        ===================================================================
        */
   @media (max-height: 850px) {

       /* 规则1: 当屏幕高度小于等于850px时，将导航栏变为“浮动” */
       #bottom-dock {
           position: fixed;
           /* 变为固定定位，浮动在屏幕上 */
       }

       /* 规则2: 同时，为内容区域增加更多底部空间，防止内容被导航栏遮挡 */
       #home-screen {
           padding-bottom: 150px;
       }
   }